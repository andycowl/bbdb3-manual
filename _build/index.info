This is index.info, produced by makeinfo version 5.1 from index.texi.

     BBDBV3 3.1.2, Sep 15, 2016

     Andy Cowling

     Copyright © 2016, Andy Cowling

INFO-DIR-SECTION Miscellaneous
START-INFO-DIR-ENTRY
* BBDBV3: (index.info). One line description of project.
END-INFO-DIR-ENTRY


   Generated by Sphinx 1.4.6.


File: index.info,  Node: Top,  Next: Introduction,  Up: (dir)

BBDBV3 Documentation
********************

     BBDBV3 3.1.2, Sep 15, 2016

     Andy Cowling

     Copyright © 2016, Andy Cowling

Contents:

* Menu:

* Introduction:: 
* Tutorial:: 
* Gnus:: 
* Mail:: 
* Org Mode:: 
* Utilities:: 
* Elisp Documentation:: 
* FAQ:: 
* Third party packages:: 
* Lisp library (bbdb): Lisp library bbdb. 
* Lisp library (bbdb-anniv): Lisp library bbdb-anniv. 
* Lisp library (bbdb-com): Lisp library bbdb-com. 
* Lisp library (bbdb-gnus): Lisp library bbdb-gnus. 
* Lisp library (bbdb-ispell): Lisp library bbdb-ispell. 
* Lisp library (bbdb-message): Lisp library bbdb-message. 
* Lisp library (bbdb-mhe): Lisp library bbdb-mhe. 
* Lisp library (bbdb-migrate): Lisp library bbdb-migrate. 
* Lisp library (bbdb-mu4e): Lisp library bbdb-mu4e. 
* Lisp library (bbdb-mua): Lisp library bbdb-mua. 
* Lisp library (bbdb-pgp): Lisp library bbdb-pgp. 
* Lisp library (bbdb-print): Lisp library bbdb-print. 
* Lisp library (bbdb-rmail): Lisp library bbdb-rmail. 
* Lisp library (bbdb-sc): Lisp library bbdb-sc. 
* Lisp library (bbdb-site): Lisp library bbdb-site. 
* Lisp library (bbdb-snarf): Lisp library bbdb-snarf. 
* Lisp library (bbdb-vm): Lisp library bbdb-vm. 
* Lisp library (bbdb-wl): Lisp library bbdb-wl. 
* Indices and tables:: 
* Index:: 

 — The Detailed Node Listing —

Introduction

* History:: 
* What's new in BBDB3 ?:: 
* Where to get BBDB3 ?:: 
* Building:: 
* Configuration:: 
* Upgrading:: 

Tutorial

* Creating an entry:: 
* Searching:: 
* Updating:: 
* Adding fields:: 
* Searching on fields:: 
* Duplicates:: 
* Extended Fields:: 
* Sending email:: 
* Omitting an entry:: 
* Deleting a field:: 
* Deleting an entry:: 
* Birthdays and anniversaries:: 
* Housekeeping:: 
* Snarfing:: 
* Printing:: 
* Dialing:: 

Gnus

* What version of Gnus do I need ?:: 
* Automatically add entries:: 
* Whitelists and blacklists:: 
* Use full name:: 
* Gnus Summary Line:: 

Mail

* MH-E:: 
* mu4e:: 
* notmuch:: 
* rmail:: 
* VM:: 
* Wanderlust:: 

Org Mode

* Agenda:: 

Utilities

* Import:: 
* Export:: 

Elisp Documentation

* Key Index:: 
* Command Index:: 
* Function Index:: 
* Variable Index:: 
* Hooks:: 

FAQ

* What version of Emacs do I need ?:: 
* How do you automatically save BBDB on exit ?:: 
* How to get help with BBDB ?:: 
* How to report a problem with BBDB ?:: 
* File format information:: 
* Tuning BBDB:: 
* Incorrect BBDB version:: 

Third party packages

* Melpa:: 
* Misc:: 

Lisp library (bbdb)

* Functions:: 
* Variables:: 
* Hooks: Hooks<2>. 

Lisp library (bbdb-anniv)

* Functions: Functions<2>. 
* Variables: Variables<2>. 

Lisp library (bbdb-com)

* Commands:: 
* Functions: Functions<3>. 

Lisp library (bbdb-gnus)

* Functions: Functions<4>. 
* Variables: Variables<3>. 

Lisp library (bbdb-ispell)

* Functions: Functions<5>. 
* Variables: Variables<4>. 

Lisp library (bbdb-message)

* Functions: Functions<6>. 

Lisp library (bbdb-mhe)

* Functions: Functions<7>. 

Lisp library (bbdb-migrate)

* Constants:: 
* Functions: Functions<8>. 

Lisp library (bbdb-mu4e)

* Functions: Functions<9>. 

Lisp library (bbdb-mua)

* Constants: Constants<2>. 
* Functions: Functions<10>. 

Lisp library (bbdb-pgp)

* Functions: Functions<11>. 
* Variables: Variables<5>. 

Lisp library (bbdb-print)

* Functions: Functions<12>. 
* Variables: Variables<6>. 

Lisp library (bbdb-rmail)

* Functions: Functions<13>. 

Lisp library (bbdb-sc)

* Functions: Functions<14>. 
* Variables: Variables<7>. 

Lisp library (bbdb-site)

* Constants: Constants<3>. 

Lisp library (bbdb-snarf)

* Functions: Functions<15>. 
* Variables: Variables<8>. 

Lisp library (bbdb-vm)

* Functions: Functions<16>. 
* Variables: Variables<9>. 

Lisp library (bbdb-wl)

* Functions: Functions<17>. 



File: index.info,  Node: Introduction,  Next: Tutorial,  Prev: Top,  Up: Top

1 Introduction
**************

The Big Brother Database (BBDB) is a contact management system for GNU
Emacs version 23 or later.

BBDB offers the following features:

   * tight integration with Emacs news and mail readers (Gnus, MH-e,
     mu4e, notmuch, Rmail, Wanderlust, VM).

   * automatic creation of entries from mail messages and news articles.

   * extensible database format with standard and user-defined fields.

   * comprehensive management (de-duplication, purge).

   * support for different address and phone formats.

   * integration of events with Emacs calendar and Orgmode.

* Menu:

* History:: 
* What's new in BBDB3 ?:: 
* Where to get BBDB3 ?:: 
* Building:: 
* Configuration:: 
* Upgrading:: 


File: index.info,  Node: History,  Next: What's new in BBDB3 ?,  Up: Introduction

1.1 History
===========

Jamie Zawinski implemented the original BBDB package in 1992 and the
package was subsequently maintained bu Waider and later by Robert
Widhopf-Fenk.

The last release of BBDB2 was version 2.35 (released on 30 January
2007).

In May 2010, Roland Winkler announced he was resurrecting the project
and embarking on a major rewrite.


File: index.info,  Node: What's new in BBDB3 ?,  Next: Where to get BBDB3 ?,  Prev: History,  Up: Introduction

1.2 What’s new in BBDB3 ?
=========================

[ This section outlines why BBDB2 users may want to upgrade.  Need to
improve and extend this section - Roland ?]

Complete overhaul of the code base.

Support for modern Emacs mail readers - mu4e, notmuch, wanderlust

Globalisation - improved support for phone and address formats.

BBDB3 attempted to rationalise the terminology which meant the changing
of some lisp variables and functions.

In BBDB3, "address" is used to refer to snail mail addresses, "mail" for
email addresses and "name" for real names.

BBDB3 treats outgoing messages (i.e.  Emacs message and mail mode) like
incoming messages in your Emacs MUA (Gnus, Rmail, VM, etc).  So you can
configure BBDB such that it updates BBDB based on outgoing messages in
much the same way you can do this with incoming messages.


File: index.info,  Node: Where to get BBDB3 ?,  Next: Building,  Prev: What's new in BBDB3 ?,  Up: Introduction

1.3 Where to get BBDB3 ?
========================

The latest stable release of BBDB is currently 3.1.2 (released on 27
April 2014) and available for download from:

‘http://download.savannah.gnu.org/releases/bbdb/’

The source of the latest development version is available at:

‘http://savannah.nongnu.org/projects/bbdb/’

BBDB3 is also available via Melpa(1).  This version tracks the latest
development version.

   ---------- Footnotes ----------

   (1) https://melpa.org/#/


File: index.info,  Node: Building,  Next: Configuration,  Prev: Where to get BBDB3 ?,  Up: Introduction

1.4 Building
============

There are a couple of prerequisites for compiling BBDB3 from source:

   * autoconf (2.69 or higher)

   * automake (1.13 or higher)

Most Linux distributions will have the required versions of these
packages in the standard repositories.

Quick guide for building BBDB3 from source on Linux:

     $ sh ./autogen
     $ ./configure
     $ make
     $ sudo make install


File: index.info,  Node: Configuration,  Next: Upgrading,  Prev: Building,  Up: Introduction

1.5 Configuration
=================

To get started and use BBDB, a single line is required in ’init.el’:

     (require 'bbdb-loaddefs "/path/to/bbdb/lisp/bbdb-loaddefs.el")

Localisation - configure your country ?


File: index.info,  Node: Upgrading,  Prev: Configuration,  Up: Introduction

1.6 Upgrading
=============

BBDB3 will automatically detect a BBDB2 database and convert the
contents to the new format.  This conversion is done automatically
although it may be prudent to take a copy of the existing BBDB database.

The default location for the BBDB database is ’~/.bbdb’ in BBDB2 and
changed to ’~/.emacs.d/bbdb’ in BBDB3.


File: index.info,  Node: Tutorial,  Next: Gnus,  Prev: Introduction,  Up: Top

2 Tutorial
**********

This is a gentle, step-by-step tutorial, aimed at newcomers to BBDB,
which includes worked examples showing how to use the software.

The best way to demonstrate the features in BBDB is to actually
illustrate some standard tasks.  If you are already an experienced BBDB
user, you may wish to skip this section.

* Menu:

* Creating an entry:: 
* Searching:: 
* Updating:: 
* Adding fields:: 
* Searching on fields:: 
* Duplicates:: 
* Extended Fields:: 
* Sending email:: 
* Omitting an entry:: 
* Deleting a field:: 
* Deleting an entry:: 
* Birthdays and anniversaries:: 
* Housekeeping:: 
* Snarfing:: 
* Printing:: 
* Dialing:: 


File: index.info,  Node: Creating an entry,  Next: Searching,  Up: Tutorial

2.1 Creating an entry
=====================

The first task to to add a contact to our BBDB:

     M-x bbdb-create

Enter ’Ivan McCormick’ as the name.

Leave the fields ’Organizations’, ’E-Mail Addresses’, ’Snail Mail
Address Label’, ’Phone Label’ and ’notes’ fields blank (simply by typing
’Enter’).

Add another entry for ’David Evans’ in the same manner.

Now we have two entries, we can navigate and search our embryonic BBDB.


File: index.info,  Node: Searching,  Next: Updating,  Prev: Creating an entry,  Up: Tutorial

2.2 Searching
=============

To examine the contents of BBDB, use:

     M-x bbdb

Type ’return’ to ’Search records using regexp’ which displays all
entries.

BBDB then displays all known contacts and the modeline includes ’1/2/2’
which indicates the current entry is ’1’ out of a current data set of 2
from a grand total of 2.

The entries are initially sorted by ’Name’ order so ’David Evans’
appears first despite being added last.

Navigation uses the familiar ’n’ (bbdb-next-record) and ’p’
(bbdb-prev-record) key bindings.

You can also search BBDB using ’b’ (’bbdb’) which searches across all
fields.  For example, searching for ’evans’ displays a single record
(’David Evans’).  The search is case insensitive.


File: index.info,  Node: Updating,  Next: Adding fields,  Prev: Searching,  Up: Tutorial

2.3 Updating
============

Occasionally, you may want to change contact details.  Search BBDB
(using ’b’) to find the contact named ’David Evans’.

Type ’e’ (’bbdb-edit-field’) to change this contact’s first name to
’Dave’.

Save your changes using ’s’ (bbdb-save).  Your changes are now saved to
the BBDB which resides in ’~/.emacs.d/bbdb’ (’bbdb-file’) by default.


File: index.info,  Node: Adding fields,  Next: Searching on fields,  Prev: Updating,  Up: Tutorial

2.4 Adding fields
=================

Add a new contact called ’Adam Clayton’ using ’c’ (’bbdb-create’).  This
time, include additional information for the organization, address,
phone number and email address as follows:

     For 'Organizations' enter, 'Island Records'
     For email, enter 'adam.clayton@island.com'
     Street, line 1 - '721 Fifth Avenue'
     Street, line 2 - 'Midtown Center'
     Street, line 2 - 'Manhattan'
     City - 'New York City'
     State - 'NY'
     Postcode - 10022
     Country - 'US'
     For 'Phone (home), enter '0012127654321'
     For the 'notes' field, enter 'U2'

Now we have a record populated with five fields in addition to ’Name’.
The newly created record is displayed.

You can use ’t’ (’toggle-layout’) to view a brief one line summary and
’T’ (’show-all-fields’) to expose all fields of the contact.  The
expanded view includes two standard audit timestamp fields that are
automatically created and maintained by BBDB; ’creation-date’ and
’timestamp’

For a newly created record, both timestamp fields will be identical but
the ’timestamp’ field will automatically track whenever a subsequent
update is made to the record.  The timestamps can be valuable in purging
historic, outdated data and examining recent records.

Use ’TAB’ (’bbdb-next-field’) to navigate to the next field and
’BACKSPACE’ (’bbdb-prev-field’) to go back to the previous field.

If you made any errors during the creation of the contact, you can
navigate to the field and then use ’e’ (’bbdb-edit-field’) to edit and
correct the field.


File: index.info,  Node: Searching on fields,  Next: Duplicates,  Prev: Adding fields,  Up: Tutorial

2.5 Searching on fields
=======================

In addition to the general search (’b’) which searches across all
fields, you can also search for contacts on individual fields (which is
quicker and more efficient for larger databases).

For example, to search for all contacts with an email address containing
’island.com’, use ’/ m’ and enter ’island’.

The full list of field searches is

Key binding       Field
                  
--------------------------------------
                  
’b’               General
                  
                  
’/ 1’             Single record
                  
                  
’/ m’             Email
                  
                  
’/ n’             Name
                  
                  
’/ o’             Organization
                  
                  
’/ p’             Phone
                  
                  
’/ a’             Address
                  
                  
’/ x’             Xfields
                  
                  
’/ m’             Email
                  
                  
’/ d’             Duplicates
                  
                  
’/ c’             Changed
                  
                  
’+’               Append
                  
                  
’!’               Invert
                  


File: index.info,  Node: Duplicates,  Next: Extended Fields,  Prev: Searching on fields,  Up: Tutorial

2.6 Duplicates
==============

BBDB offers help in managing a contact database.  A common problem is
that of duplicate entries; a person who has different aliases (’Dave’,
’David’) or multiple email addresses (e.g.  home, work) or historic,
outdated fields.

Add a new entry for ’Larry Mullen’ with an email address of
<'larry.mullen@islandrecords.com>’.

Add another entry for ’Larry Mullen Jnr’ with the same email address of
<'larry.mullen@islandrecords.com>’.

Display all entries using ’b’ and use ’/ d’ (’bbdb-search-duplicates’)
to search for duplicate entries.

The two similar entries for ’Larry Mullen’ should be displayed.

To merge these two entries, use M-x bbdb-merge-records.  BBDB will use
the currently displayed record (’Larry Mullen Jnr’) as the first entry
and prompt for the second record:

     merge record "Larry Mullen Jnr" into:

Type ’Larry Mullen’ to identify the second record.  BBDB will ask:

     Use name "Larry Mullen Jnr" instead of "Larry Mullen"? (y or n)

followed by:

     Keep "Larry Mullen" as an alternate name? (y or n)

The single, resulting merged record is now displayed.  ’Larry Mullen’ is
now is an ’AKA’ field for the ’Larry Mullen Jnr’ record.


File: index.info,  Node: Extended Fields,  Next: Sending email,  Prev: Duplicates,  Up: Tutorial

2.7 Extended Fields
===================

BBDB supports extended fields (’xfields’) which allow the user to define
additional fields for contacts.  The predefined ’notes’ field in BBDB2
is simply an example of an extended field in BBDB3.

You can add a note field to an existing contact using ’;’
(’edit-some-field’).

As no contacts were initially created with a ’note’ field, BBDB prompts:

     "notes" is an unknown field name. Define it? (y or n)

In addition to the ’notes’ field, you can extend BBDB with additional
user defined fields.

Use ’i’ (bbdb-insert-field) to add a new field called ’Instrument’ and
set this field to ’Guitar’ for Dave Evans.

Of course, the U2 guitarist is more commonly known as ’The Edge’ so
navigate to the AKA (’Also Known As’) field and add ’The Edge’ as an
alias for ’David Evans’.


File: index.info,  Node: Sending email,  Next: Omitting an entry,  Prev: Extended Fields,  Up: Tutorial

2.8 Sending email
=================

BBDB allows sending email to a single contact or a set of contacts.

Search and navigate to a specfic contact and type ’m’ (’bbdb-mail’)
which composes an email to the current contact.

If a set of contacts has been created, type ’* m’ to send an email to
all contacts in the list.

You can use this feature to manage simple mail groups; if you tag a
group of contacts with ’curry’, you can use ’* m’ to invite your friends
for the traditional Thursday night meal.


File: index.info,  Node: Omitting an entry,  Next: Deleting a field,  Prev: Sending email,  Up: Tutorial

2.9 Omitting an entry
=====================

If you have selected a list of contacts, it is possible to omit a
contact (or multiple contacts) from the list of recipients while
preserving the entry in BBDB.

You use ’o’ (’omit-record’) which hides the entry and type ’* m’ to
compose an email to the reduced list of contacts.


File: index.info,  Node: Deleting a field,  Next: Deleting an entry,  Prev: Omitting an entry,  Up: Tutorial

2.10 Deleting a field
=====================

You can delete the contents of a field by navigating to the field of the
contact (use ’n’ and ’p’ to navigate between contacts and ’TAB’ and
’DEL’ between fields).  Once positioned on the correct field, use ’d’ or
’C-k’ (which are both bound to ’bbdb-delete-field-or-record’).

BBDB will prompt:

     delete this 'mail' field (of Michael Stipe)? (y or n).


File: index.info,  Node: Deleting an entry,  Next: Birthdays and anniversaries,  Prev: Deleting a field,  Up: Tutorial

2.11 Deleting an entry
======================

Deleting an entry in BBDB is similar.  Navigate to the desired entry and
use ’d’ or C-k.

BBDB will prompt:

     Delete the entry of Stephen Morrissey ? (y or n)

Deletions of multiple records is possible in the normal way; selecting
the desired data set and use C-k.  A prompt will be issued for each
record.


File: index.info,  Node: Birthdays and anniversaries,  Next: Housekeeping,  Prev: Deleting an entry,  Up: Tutorial

2.12 Birthdays and anniversaries
================================

To use birthday and anniversaries in BBDB, you must ensure ’anniv is
included in the list of parameters when calling ’bbdb-initialize’ in
’init.el’:

     (bbdb-initialize 'gnus 'message 'anniv)

To ensure BBDB birthdays and anniversaries are displayed in the Emacs
calendar, add the following line to ’init.el’:

     (add-hook 'diary-list-entries-hook 'bbdb-anniv-diary-entries)

Birthdays are implemented as another extended field named ’birthday’.

Find the contact called ’Adam Clayton’ and add a new extended field
called ’birthday’ using ’i’ (’bbdb-insert-field’)

The default date format setting is ’American’ (’mm/dd/yyyy’) so, to add
Adam Clayton’s birthday which is ’13 March 1960’, enter:

     '03/13/1960'

The default date format is controlled by the variable
’calendar-date-style’ which may be set to:-

   * ’american’ (mm/dd/yyyy - default)

   * ’european’ (dd/mm/yyyy)

   * ’iso’ (yyyy/mm/dd)

Check the birthday has been added to the Emacs calendar:

     M-x calendar

Navigate to 13 March and type ’d’ (diary-view-entries’).  The birthday
should be displayed as follows:

     Sunday, March 13, 2016
     ======================
     Adam Clayton's 56th birthday


File: index.info,  Node: Housekeeping,  Next: Snarfing,  Prev: Birthdays and anniversaries,  Up: Tutorial

2.13 Housekeeping
=================

BBDB uses the built-in audit timestamps (’creation-date’ and
’timestamp’) to offer useful searches to identify ancient or recent
records:

   * bbdb-creation-newer

   * bbdb-creation-older

   * bbdb-timestamp-newer

   * bbdb-timestamp-older

For example, to list all records created before 2014, use ’M-x
bbdb-creation-older-than’.  BBDB prompts:

     'Older than date (yyyy-mm-dd):'

Enter ’2014-01-01’ to displayed all contacts created prior to 2014.

There is a complementary function ’bbdb-creation-newer-than’ to identify
recently created records.

Similarly, using the ’timestamp’ field can identify records modified in
the last month (’bbdb-timestamp-newer’).

Another useful function to assist in identifying records that have been
created and never subsequently updated is ’bbdb-creation-no-change’.


File: index.info,  Node: Snarfing,  Next: Printing,  Prev: Housekeeping,  Up: Tutorial

2.14 Snarfing
=============

Given a text file with the following ..  contents:

     Michael Stipe
     245 Dan Rather Avenue
     Atlanta
     GA
     Email: stipey@remhq.com

If you highlight the region, position point at ’Michael Stipe’ and type
’M-x bbdb-snarf’, BBDB will attempt to parse the region and create a
BBDB entry for this individual.

Unfortunately, snarfing is complex and doesn’t always deliver perfect
results:

     Michael Stipe
            mail:  stipey@remhq.com
            notes: 245 Dan Rather Avenue
            Atlanta
            GA


File: index.info,  Node: Printing,  Next: Dialing,  Prev: Snarfing,  Up: Tutorial

2.15 Printing
=============

’bbdb-print’ produces a TeX file for the current set of contacts and
uses bbdb-print-tex-path (typically /path/to/bbdb/tex) to locate the TeX
templates.

BBDB then creates a TeX file which must be processed using TeX (not
LaTeX) to produce a PDF ready for printing.


File: index.info,  Node: Dialing,  Prev: Printing,  Up: Tutorial

2.16 Dialing
============

’bbdb-dial’ dials the number under point.


File: index.info,  Node: Gnus,  Next: Mail,  Prev: Tutorial,  Up: Top

3 Gnus
******

Although using BBDB interactively illustrates key features, the real
power of BBDB is when used in conjunction with a mail or news reader.

BBDB calls any such mail/news reader a Mail User Agent (MUA) and offers
similar functionality for all supported MUA’s.

This MUA abstraction makes it relatively easy to add support for new
mail readers.

BBDB also supports ’message-mode’ which is commonly used by mail
programs to send outbound email messages.  Again, as BBDB integrates
with ’message-node’, it automatically works with any Emacs mail program
that supports ’message-mode’.

The real power is the ability to automatically add entries to BBDB when
reading email or news.

* Menu:

* What version of Gnus do I need ?:: 
* Automatically add entries:: 
* Whitelists and blacklists:: 
* Use full name:: 
* Gnus Summary Line:: 


File: index.info,  Node: What version of Gnus do I need ?,  Next: Automatically add entries,  Up: Gnus

3.1 What version of Gnus do I need ?
====================================

BBDB works with any version of Gnus bundled with Emacs 23 (and later).


File: index.info,  Node: Automatically add entries,  Next: Whitelists and blacklists,  Prev: What version of Gnus do I need ?,  Up: Gnus

3.2 Automatically add entries
=============================

To ensure Gnus and message mode both use BBDB, add these lines to
’init.el’:

     (bbdb-initialize 'gnus 'message)
     (bbdb-mua-auto-update-init 'gnus 'message)
     ;
     ; Display BBDB in popup window
     (setq bbdb-mua-pop-up t)
     ;
     ; Look for existing contact, interactively prompt to create
     (setq bbdb-mua-update-interactive-p '(query . create))

This configuration integrates Gnus into BBDB. No contacts will be added
to BBDB unless the user explicitly requests this action.

For an `interesting' contact, simply type ’;’ in the Gnus summary buffer
which invokes ’bbdb-mua-edit-field-sender’.

BBDB offers the following options:

     Michael Stipe is not in BBDB; add (y ! n s q ?)
     Type ? for this help
     Type 'y to add the current record
     Type ! to add all the remaining records
     Type n to skip the current record (You may also use space)
     Type s to switch from annotate to search mode
     Type q to quit updating records. No more search or annotation is done.

Type ’y’ to add the contact and annotate as required.  For example, a
personal contact might be tagged with ’Family’ in the ’Notes’ field.

When composing or replying to a message, you can use ’TAB’
(’message-tab’) to complete names from BBDB.

To enable fully automatic and insidious mode, use:

     ; Silently add record to BBDB (if not already present)
     (setq bbdb-update-records-p 'create)
     ; Update BBDB silently
     (setq bbdb-mua-pop-up nil)


File: index.info,  Node: Whitelists and blacklists,  Next: Use full name,  Prev: Automatically add entries,  Up: Gnus

3.3 Whitelists and blacklists
=============================

[ Check this and test ]

There are some scenarios where it is not useful for BBDB to mindlessly
collect contact information.  One example is the Gmane mailing lists
where the true email addresses of posters are masked:

     (setq bbdb/mail-auto-create-p 'bbdb-ignore-some-messages-hook)
     (setq bbdb/news-auto-create-p 'bbdb-ignore-some-messages-hook)
     (setq bbdb-ignore-some-messages-alist
       `(("From" . "public.gmane.org")
        ("Newsgroups" . "gmane.*")
        ))


File: index.info,  Node: Use full name,  Next: Gnus Summary Line,  Prev: Whitelists and blacklists,  Up: Gnus

3.4 Use full name
=================

[ Check this example too ]

Some people (or their IT administrators) have malformed names in their
email configuration.  If you prefer to see names correctly capitalized
as ’Mike Mills’ rather than ’mike mills’ or, worse, ’MIKE MILLS’, you
can ask Gnus to display the name stored in BBDB in preference to the
name supplied in the mail or article header information:

     ; display names as in BBDB database
     (autoload 'bbdb/gnus-lines-and-from "bbdb-gnus")


File: index.info,  Node: Gnus Summary Line,  Prev: Use full name,  Up: Gnus

3.5 Gnus Summary Line
=====================

To get Gnus to display the BBDB name together with a indication (the ’+’
character) that the sender is known to BBDB, use:

     ; Default with %f ('Name, To header or Newsgroups header')
     ; replaced by %uB (BBDB Name + Known poster indicator '+')
     ;
     ; Original Gnus setting
     ;
     ; ‘%U%R%z%I%(%[%4L: %-23,23f%]%) %s\n’.
     (setq gnus-summary-line-format "%U%R%z%I%(%[%4L: %-23,23uB%]%) %s\n")


File: index.info,  Node: Mail,  Next: Org Mode,  Prev: Gnus,  Up: Top

4 Mail
******

Apparently there are other mail readers for Emacs besides Gnus.  Most of
these mail handling programs are supported by BBDB.

As mailing handling is abstracted to a generic Mail user Agent (MUA),
adding support for a new Emacs mail reader program should be relatively
straightforward.  [Hint: Look at the code for the existing readers].

* Menu:

* MH-E:: 
* mu4e:: 
* notmuch:: 
* rmail:: 
* VM:: 
* Wanderlust:: 


File: index.info,  Node: MH-E,  Next: mu4e,  Up: Mail

4.1 MH-E
========

‘https://www.gnu.org/software/emacs/manual/html_mono/mh-e.html’

[ Last updated in 2013 ]


File: index.info,  Node: mu4e,  Next: notmuch,  Prev: MH-E,  Up: Mail

4.2 mu4e
========

‘http://www.djcbsoftware.nl/code/mu/mu4e.html’

[ Actively maintained ]


File: index.info,  Node: notmuch,  Next: rmail,  Prev: mu4e,  Up: Mail

4.3 notmuch
===========

‘https://notmuchmail.org/’

[ Actively maintained ]


File: index.info,  Node: rmail,  Next: VM,  Prev: notmuch,  Up: Mail

4.4 rmail
=========

‘https://www.gnu.org/software/emacs/manual/html_node/emacs/Rmail.html’


File: index.info,  Node: VM,  Next: Wanderlust,  Prev: rmail,  Up: Mail

4.5 VM
======

‘http://www.nongnu.org/viewmail/’


File: index.info,  Node: Wanderlust,  Prev: VM,  Up: Mail

4.6 Wanderlust
==============

‘https://www.emacswiki.org/emacs/BBDBV3-Wl’


File: index.info,  Node: Org Mode,  Next: Utilities,  Prev: Mail,  Up: Top

5 Org Mode
**********

* Menu:

* Agenda:: 


File: index.info,  Node: Agenda,  Up: Org Mode

5.1 Agenda
==========

The variable ’org-bbdb-anniversary-field’ (default ’anniversary’) can be
modified to show birthdays in orgmode.

Ensure the following lines are contained in ’org-default-agenda-files’:

     *Anniversaries
     +CATEGORY: Anniv
     %%(org-bbdb-anniversaries)


File: index.info,  Node: Utilities,  Next: Elisp Documentation,  Prev: Org Mode,  Up: Top

6 Utilities
***********

* Menu:

* Import:: 
* Export:: 


File: index.info,  Node: Import,  Next: Export,  Up: Utilities

6.1 Import
==========

   * CSV

   * VCF card


File: index.info,  Node: Export,  Prev: Import,  Up: Utilities

6.2 Export
==========

‘https://gitorious.org/bbdb-syncml/bbdb-syncml’

‘https://gitorious.org/bbdb-syncml/bbdb-syncml’


File: index.info,  Node: Elisp Documentation,  Next: FAQ,  Prev: Utilities,  Up: Top

7 Elisp Documentation
*********************

Summary of BBDB commands and functions.  This section will be
automatically generated by Sphinx.

* Menu:

* Key Index:: 
* Command Index:: 
* Function Index:: 
* Variable Index:: 
* Hooks:: 


File: index.info,  Node: Key Index,  Next: Command Index,  Up: Elisp Documentation

7.1 Key Index
=============


File: index.info,  Node: Command Index,  Next: Function Index,  Prev: Key Index,  Up: Elisp Documentation

7.2 Command Index
=================


File: index.info,  Node: Function Index,  Next: Variable Index,  Prev: Command Index,  Up: Elisp Documentation

7.3 Function Index
==================


File: index.info,  Node: Variable Index,  Next: Hooks,  Prev: Function Index,  Up: Elisp Documentation

7.4 Variable Index
==================


File: index.info,  Node: Hooks,  Prev: Variable Index,  Up: Elisp Documentation

7.5 Hooks
=========


File: index.info,  Node: FAQ,  Next: Third party packages,  Prev: Elisp Documentation,  Up: Top

8 FAQ
*****

* Menu:

* What version of Emacs do I need ?:: 
* How do you automatically save BBDB on exit ?:: 
* How to get help with BBDB ?:: 
* How to report a problem with BBDB ?:: 
* File format information:: 
* Tuning BBDB:: 
* Incorrect BBDB version:: 


File: index.info,  Node: What version of Emacs do I need ?,  Next: How do you automatically save BBDB on exit ?,  Up: FAQ

8.1 What version of Emacs do I need ?
=====================================

Version 23, 24 or 25 of GNU Emacs.  XEmacs is longer supported


File: index.info,  Node: How do you automatically save BBDB on exit ?,  Next: How to get help with BBDB ?,  Prev: What version of Emacs do I need ?,  Up: FAQ

8.2 How do you automatically save BBDB on exit ?
================================================


File: index.info,  Node: How to get help with BBDB ?,  Next: How to report a problem with BBDB ?,  Prev: How do you automatically save BBDB on exit ?,  Up: FAQ

8.3 How to get help with BBDB ?
===============================

The best place to get help with BBDB3 is the mailing list:

     There is a mailing list for discussion of BBDB:
       bbdb-info@lists.sourceforge.net
     To join, send mail to bbdb-info-request@lists.sourceforge.net


File: index.info,  Node: How to report a problem with BBDB ?,  Next: File format information,  Prev: How to get help with BBDB ?,  Up: FAQ

8.4 How to report a problem with BBDB ?
=======================================

Send a detailed report to the BBDB mailing list including the following
info:-

   * Emacs version

   * BBDB version

   * BBDB/Message/Mail customizations

   * What you expected to happen

   * What happened


File: index.info,  Node: File format information,  Next: Tuning BBDB,  Prev: How to report a problem with BBDB ?,  Up: FAQ

8.5 File format information
===========================

You don’t need to know this but the BBDB file format version is embedded
within the database file:

     $ head -2 ~/.emacs.d/bbdb
     ;; -*- mode: Emacs-Lisp; coding: utf-8; -*-
     ;;; file-format: 7


File: index.info,  Node: Tuning BBDB,  Next: Incorrect BBDB version,  Prev: File format information,  Up: FAQ

8.6 Tuning BBDB
===============

[ Roland - is this still true ?  What is the current state of caching ?]

BBDB uses a "message cache" for caching the BBDB records associated with
a message.  I had made a silly mistake that made the cache ineffective
in BBDB 3.  Well, that bug was easily fixed.  But with the cache being
effective again, some fairly important other things are not working
anymore.

   * The message cache contains for each message those records that have
     been recognized / created when the message was first viewed in the
     MUA. If these were the records matching the recipients (say,
     following a call of bbdb-mua-display-recipients), a subsequent call
     of bbdb-mua-display-sender again displays the recipients, because
     only those records are stored in the cache.  Not quite the expected
     behaviour.

   * Messages are identified in the cache via ’assq’ and "message keys".
     VM uses a message-pointer and rmail uses an integer message key
     that work fine with assq.  Yet for gnus, BBDB 2 used the function
     bbdb/gnus-get-message-id that returns the value of the "Message-ID"
     header of a message as a string.  For BBDB 3, I even copied this
     idea for other MUAs...  Yet strings don’t work with assq and all
     the caching fails.

     Here a simple work appears to be assoc instead of assq.  Yet this
     is slower than assq, and I have doubts that then all the caching is
     still worth the extra coding effort (in particular, when properly
     keeping track of senders and recipients).


File: index.info,  Node: Incorrect BBDB version,  Prev: Tuning BBDB,  Up: FAQ

8.7 Incorrect BBDB version
==========================

If BBDB is built from source, ’M-x bbdb-version’ reports the version:

     BBDB version 3.1.2 (2016-07-21 01:18:24 -0500)

However, if you are using BBDB diownloaded from Melpa, ’M-x
bbdb-version’ reports:

     'BBDB version @PACKAGE_VERSION@ (@PACKAGE_DATE@)'

This is a known issue with the packaging process on Melpa.

If you need to know the correct BBDB version (e.g for a bug report),
then either cite the date of the Melpa package.  Alternatively, use:

     M-x locate-library
     bbdb-site
     'Library is file /path/to/bbdb/lisp/bbdb-site.elc'
     $ grep bbdb-version /path/to/bbdb/lisp/bbdb-site.el
     (defconst bbdb-version "3.1.2" "Version of BBDB.")
     (defconst bbdb-version-date "2016-07-21 01:18:24 -0500"


File: index.info,  Node: Third party packages,  Next: Lisp library bbdb,  Prev: FAQ,  Up: Top

9 Third party packages
**********************

There are a variety of BBDB related packages available.

Some are fairly old and were originally written for BBDB2, some have
been ported and updated for BBDB3 while other are new extensions written
specifically for BBDB3.

* Menu:

* Melpa:: 
* Misc:: 


File: index.info,  Node: Melpa,  Next: Misc,  Up: Third party packages

9.1 Melpa
=========

The following BBDB related packages are listed in Melpa:-

Package               Version             Description
                                          
----------------------------------------------------------------------------------------------------------
                                          
bbdb-                 20140221.1554       provide interface for more easily search/choice than BBDB
                                          
                                          
bbdb-android          20150707.2224       Android phone contacts import/export for BBDB
                                          
                                          
bbdb-china            20150615.1856       BBDB utils, which let Chinese users feel easy
                                          
                                          
bdbb-csv-import       20140802.442        import csv to bbdb version 3+
                                          
                                          
bbdb-ext              20151220.1213       Extra commands for BBDB
                                          
                                          
bbdb-handy            20150707.1752       BBDB window as email address chooser when write an email
                                          
                                          
bbdb-vcard            20150713.1350       vCard import/export for BBDB
                                          
                                          
bbdb2erc              20130606.2329       make bbdb show if pal is online, click i to chat
                                          
                                          
gmail2bbdb            20150909.1839       import email and name into bbdb from vcard
                                          
                                          
gnorb                 1.1.2               Glue code between Gnus, Org, and BBDB
                                          


File: index.info,  Node: Misc,  Prev: Melpa,  Up: Third party packages

9.2 Misc
========

Other packages encountered.  Current status unknown.

   * lookout.el


File: index.info,  Node: Lisp library bbdb,  Next: Lisp library bbdb-anniv,  Prev: Third party packages,  Up: Top

10 Lisp library (bbdb)
**********************

* Menu:

* Functions:: 
* Variables:: 
* Hooks: Hooks<2>. 


File: index.info,  Node: Functions,  Next: Variables,  Up: Lisp library bbdb

10.1 Functions
==============

 -- Function: bbdb -address-continental-p address

     Return non-nil if ADDRESS is a continental address.
     This is done by comparing the postcode to *note ‘bbdb-continental-postcode-regexp’: 4b.

     This is a possible identifying function for
     *note ‘bbdb-address-format-list’: 4c. and *note ‘bbdb-print-address-format-list’: 4d.

 -- Function: bbdb -after-save

     Run after saving *note ‘bbdb-file’: 4f. as buffer-local part of ‘`after-save-hook'’.

 -- Function: bbdb -before-save

     Run before saving *note ‘bbdb-file’: 4f. as buffer-local part of ‘`before-save-hook'’.

 -- Function: bbdb -buffer

     Return buffer that visits the BBDB file *note ‘bbdb-file’: 4f.
     Ensure that this buffer is in sync with *note ‘bbdb-file’: 4f.
     Revert the buffer if necessary.
     If *note ‘bbdb-file-remote’: 52. is non-nil and it is newer than *note ‘bbdb-file’: 4f,
     copy it to *note ‘bbdb-file’: 4f.

 -- Function: bbdb -canonicalize-mail-1 address

     Example of *note ‘bbdb-canonicalize-mail-function’: 54.
     However, this function is too specific to be useful for the general user.
     Take it as a source of inspiration for what can be done.

 -- Function: bbdb -change-record record &optional ignored new

     Update the database after a change of RECORD.
     Return RECORD if RECORD got changed compared with the database,
     return nil otherwise.
     IGNORED is ignored.  It is present only for backward compatibility.
     If NEW is t treat RECORD as new.  New records are hashed.
     If RECORD is not new, it is redisplayed.  Yet it is then the caller’s
     responsibility to update the hash-table for RECORD.

 -- Function: bbdb -check-name first last &optional record

     Check whether the name FIRST LAST is a valid name.
     This throws an error if the name is already used by another record
     and *note ‘bbdb-allow-duplicates’: 57. is nil.  If RECORD is non-nil, FIRST and LAST
     may correspond to RECORD without raising an error.

 -- Function: bbdb -check-type object type &optional abort extended

     Return non-nil if OBJECT is of type TYPE.
     TYPE is a pseudo-code as in ‘`bbdb-record-type'’.
     If ABORT is non-nil, abort with error message if type checking fails.
     If EXTENDED is non-nil, consider extended atomic types which may include
     symbols, numbers, markers, and strings.

 -- Function: bbdb -clean-address-components components

     Clean mail address COMPONENTS.
     COMPONENTS is a list (FULL-NAME CANONICAL-ADDRESS) as returned
     by ‘`mail-extract-address-components'’.
     Pass FULL-NAME through *note ‘bbdb-message-clean-name-function’: 5a.
     and CANONICAL-ADDRESS through *note ‘bbdb-canonicalize-mail-function’: 54.

 -- Function: bbdb -concat separator &rest strings

     Concatenate STRINGS to a string sticking in SEPARATOR.
     STRINGS may be strings or lists of strings.  Empty strings are ignored.
     SEPARATOR may be a string.
     SEPARATOR may also be a symbol (a field name).  Then look up the value
     of SEPARATOR in *note ‘bbdb-separator-alist’: 5c. or use *note ‘bbdb-default-separator’: 5d.
     The inverse function of *note ‘bbdb-split’: 5e.

 -- Function: bbdb -creation-date record

     For use as an element of *note ‘bbdb-create-hook’: 60.
     Adds an xfield ‘`creation-date'’ for RECORD which is the current time string.

 -- Function: bbdb -current-field

     Return current field point is on.

 -- Function: bbdb -current-record &optional full

     Return the record point is at.
     If FULL is non-nil record includes the display information.

 -- Function: bbdb -decompose-bbdb-address mail

     Given an RFC-822 address MAIL, extract full name and canonical address.
     In general, this function behaves like the more sophisticated function
     ‘`mail-extract-address-components'’.  Yet for an address ‘`<Joe_Smith@foo.com>'’
     lacking a real name the latter function returns the name "Joe Smith".
     This is useful when analyzing the headers of email messages we receive
     from the outside world.  Yet when analyzing the mail addresses stored
     in BBDB, this pollutes the mail-aka space.  So we define here
     an intentionally much simpler function for decomposing the names
     and canonical addresses in the mail field of BBDB records.

 -- Function: bbdb -delete-record-internal record &optional completely

     Delete RECORD in the database file.
     With COMPLETELY non-nil, also undisplay RECORD and remove it
     from the hash table.

 -- Function: bbdb -display-list list field &optional terminator face
          indent

     Insert elements of LIST at point.
     For inserted text, set text property bbdb-field to FIELD.
     If TERMINATOR is non-nil use it to terminate the inserted text.
     If FACE is non-nil use it as FACE for inserted text.
     If INDENT and *note ‘bbdb-wrap-column’: 66. are integers, insert line breaks in between
     elements of LIST if otherwise inserted text exceeds *note ‘bbdb-wrap-column’: 66.

 -- Function: bbdb -display-name-organization record

     Insert name, affix, and organization of RECORD.
     If RECORD has an xfield name-face, its value is used for font-locking name.
     The value of name-face may be a face that is used directly.
     The value may also be a key in *note ‘bbdb-name-face-alist’: 68.  Then the
     corresponding cdr is used.  If none of these schemes succeeds the face
     ‘`bbdb-face'’ is used.

 -- Function: bbdb -display-record-multi-line record layout field-list

     Format RECORD for the multi-line FORMAT using LAYOUT.
     See *note ‘bbdb-layout-alist’: 6a. for more info on layouts.
     FIELD-LIST is the list of actually displayed FIELDS.

 -- Function: bbdb -display-record-one-line record layout field-list

     Format RECORD for the one-line FORMAT using LAYOUT.
     See *note ‘bbdb-layout-alist’: 6a. for more info on layouts.
     FIELD-LIST is the list of actually displayed FIELDS.

 -- Function: bbdb -display-record record layout number

     Insert a formatted RECORD into the current buffer at point.
     LAYOUT can be a symbol describing a layout in *note ‘bbdb-layout-alist’: 6a.
     If it is nil, use *note ‘bbdb-layout’: 6d.
     NUMBER is the number of RECORD among the displayed records.
     Move point to the end of the inserted record.

 -- Function: bbdb -display-records records &optional layout append
          select horiz-p

     Display RECORDS using LAYOUT.
     If APPEND is non-nil append RECORDS to the already displayed records.
     Otherwise RECORDS overwrite the displayed records.
     SELECT and HORIZ-P have the same meaning as in *note ‘bbdb-pop-up-window’: 6f.

 -- Function: bbdb -display-records records &optional layout append
          select horiz-p

     Display RECORDS using LAYOUT.
     If APPEND is non-nil append RECORDS to the already displayed records.
     Otherwise RECORDS overwrite the displayed records.
     SELECT and HORIZ-P have the same meaning as in *note ‘bbdb-pop-up-window’: 6f.

 -- Function: bbdb -divide-name string

     Divide STRING into a first name and a last name.
     Case is ignored.  Return name as (FIRST . LAST).
     LAST is always a string (possibly empty).  FIRST may be nil.

 -- Function: bbdb -editable

     Ensure that BBDB is editable, otherwise throw an error.
     If BBDB is out of sync try to revert.
     BBDB is not editable if it is read-only.

 -- Function: bbdb -empty-record

     Return a new empty record structure with a cache.
     It is the caller’s responsibility to make the new record known to BBDB.

 -- Function: bbdb -empty-record

     Return a new empty record structure with a cache.
     It is the caller’s responsibility to make the new record known to BBDB.

 -- Function: bbdb -extract-address-components address &optional all

     Given an RFC-822 address ADDRESS, extract full name and canonical address.
     This function behaves like ‘`mail-extract-address-components'’, but it passes
     its return value through *note ‘bbdb-clean-address-components’: 59.
     See also *note ‘bbdb-decompose-bbdb-address’: 63.

 -- Function: bbdb -field-menu record field

     Menu items specifically for FIELD of RECORD.

 -- Function: bbdb -format-address address layout

     Format ADDRESS using LAYOUT.  Return result as a string.
     The formatting rules are defined in *note ‘bbdb-address-format-list’: 4c.

 -- Function: bbdb -format-address-default address

     Return formatted ADDRESS as a string.
     This is the default format; it is used in the US, for example.
     The result looks like this:
            label: street
                   street
                   ...
                   city, state postcode
                   country.

     This function is a possible formatting function for
     *note ‘bbdb-address-format-list’: 4c.

 -- Function: bbdb -gethash key &optional predicate

     Return list of records associated with KEY in *note ‘bbdb-hashtable’: 78.
     KEY must be a string or nil.  Empty strings and nil are ignored.
     PREDICATE may take the same values as *note ‘bbdb-completion-list’: 79.

 -- Function: bbdb -goto-first-record

     Go to where first record begins,  Move to end of file if no records.

 -- Function: bbdb -hash-p key record predicate

     Throw ‘`bbdb-hash-ok'’ non-nil if KEY matches RECORD acording to PREDICATE.
     PREDICATE may take the same values as the elements of *note ‘bbdb-completion-list’: 79.

 -- Function: bbdb -hash-record record

     Insert RECORD in *note ‘bbdb-hashtable’: 78.
     This performs all initializations required for a new record.
     Do not call this for existing records that require updating.

 -- Function: bbdb -hash-update record old new

     Update hash for RECORD.  Remove OLD, insert NEW.
     Both OLD and NEW are lists of values.

 -- Function: bbdb -initialize &rest muas

     Initialize BBDB for MUAS and miscellaneous packages.
     List MUAS may include the following symbols to initialize the respective
     mail/news readers, composers, and miscellaneous packages:
       gnus       Gnus mail/news reader.
       mh-e       MH-E mail reader.
       mu4e       Mu4e mail reader.
       rmail      Rmail mail reader.
       vm         VM mail reader.
       mail       Mail (M-x mail).
       message    Message mode.
       wl         Wanderlust mail reader.

       anniv      Anniversaries in Emacs diary.

       sc         Supercite.  However, this is not the full story.
                    See bbdb-sc.el for how to fully hook BBDB into Supercite.

       pgp        PGP support:  this adds *note ‘bbdb-pgp’: 7f. to ‘`message-send-hook'’
                    and ‘`mail-send-hook'’ so that *note ‘bbdb-pgp’: 7f. runs automatically
                    when a message is sent.
                    Yet see info node *note (message)Signing and encryption::
                    why you might not want to rely for encryption on a hook
                    function which runs just before the message is sent,
                    that is, you might want to call the command *note ‘bbdb-pgp’: 7f. manually,
                    then call ‘`mml-preview'’.

     See also *note ‘bbdb-mua-auto-update-init’: 80.  The latter is a separate function
     as this allows one to initialize the auto update feature for some MUAs only,
     for example only for outgoing messages.

 -- Function: bbdb -insert-field-menu record

     Submenu for inserting a new field for RECORD.

 -- Function: bbdb -insert-record-internal record

     Insert RECORD into the database file.  Return RECORD.
     Do not call this function directly, call instead *note ‘bbdb-change-record’: 55.
     that calls the hooks, too.

 -- Function: bbdb -layout-get-option layout option

     For LAYOUT return value of OPTION according to *note ‘bbdb-layout-alist’: 6a.

 -- Function: bbdb -list-strings list

     Remove all elements from LIST which are not non-empty strings.

 -- Function: bbdb -merge-concat-remove-duplicates string1 string2

     Concatenate STRING1 and STRING2, but remove duplicate lines.

 -- Function: bbdb -merge-concat string1 string2 &optional separator

     Return the concatenation of STRING1 and STRING2.
     SEPARATOR defaults to "\n".

 -- Function: bbdb -merge-lists l1 l2 cmp

     Merge two lists L1 and L2 based on comparison CMP.
     An element from L2 is added to L1 if CMP returns nil for all elements of L1.
     If L1 or L2 are not lists, they are replaced by (list L1) and (list L2).

 -- Function: bbdb -merge-string-least string1 string2

     Return the string out of STRING1 and STRING2 that is ‘`string-lessp'’.

 -- Function: bbdb -merge-string-most string1 string2

     Return the string out of STRING1 and STRING2 that is not ‘`string-lessp'’.

 -- Function: bbdb -merge-xfield label value1 value2

     For LABEL merge VALUE1 with VALUE2.
     If LABEL has an entry in *note ‘bbdb-merge-xfield-function-alist’: 8b, use it.
     If VALUE1 or VALUE2 is a substring of the other, return the longer one.
     Otherwise use *note ‘bbdb-concat’: 5b.  Return nil if we have nothing to merge.

 -- Function: bbdb -message-clean-name-default name

     Default function for *note ‘bbdb-message-clean-name-function’: 5a.
     This strips garbage from the user full NAME string.

 -- Function: bbdb -mouse-menu event

     BBDB mouse menu for EVENT,

 -- Function: bbdb -merge-concat-remove-duplicates string1 string2

     Concatenate STRING1 and STRING2, but remove duplicate lines.

 -- Function: bbdb -merge-concat string1 string2 &optional separator

     Return the concatenation of STRING1 and STRING2.
     SEPARATOR defaults to "\n".

 -- Function: bbdb -merge-string-least string1 string2

     Return the string out of STRING1 and STRING2 that is ‘`string-lessp'’.

 -- Function: bbdb -merge-string-most string1 string2

     Return the string out of STRING1 and STRING2 that is not ‘`string-lessp'’.

 -- Function: bbdb -merge-xfield label value1 value2

     For LABEL merge VALUE1 with VALUE2.
     If LABEL has an entry in *note ‘bbdb-merge-xfield-function-alist’: 8b, use it.
     If VALUE1 or VALUE2 is a substring of the other, return the longer one.
     Otherwise use *note ‘bbdb-concat’: 5b.  Return nil if we have nothing to merge.

 -- Function: bbdb -message-clean-name-default name

     Default function for *note ‘bbdb-message-clean-name-function’: 5a.
     This strips garbage from the user full NAME string.

 -- Variable: bbdb -message-clean-name-function

     Function to clean up the name in the header of a message.
     It takes one argument, the name as extracted by
     ‘`mail-extract-address-components'’.

 -- Function: bbdb -mouse-menu event

     BBDB mouse menu for EVENT,

 -- Function: bbdb -multiple-buffers-default

     Default function for guessing a name for new *BBDB* buffers.
     May be used as value of variable *note ‘bbdb-multiple-buffers’: 8f.

 -- Function: bbdb -next-field n

     Move point to next (sub)field.
     With prefix N move forward N (sub)fields.

 -- Function: bbdb -next-record n

     Move point to the beginning of the next BBDB record.
     With prefix N move forward N records.

 -- Function: bbdb -overwrite-record-internal record

     Overwrite RECORD in the database file.  Return RECORD.
     Do not call this function directly, call instead *note ‘bbdb-change-record’: 55.
     that calls the hooks, too.

 -- Function: bbdb -parse-postcode string

     Check whether STRING is a legal postcode.
     Do this only if *note ‘bbdb-check-postcode’: 94. is non-nil.

 -- Function: bbdb -parse-records

     Parse BBDB records and initialize various internal variables.
     If *note ‘bbdb-file’: 4f. uses an outdated format, it is migrated to ‘`bbdb-file-format'’.

 -- Function: bbdb -phone-string phone

     Massage string PHONE into a standard format.

 -- Function: bbdb -pop-up-window &optional select horiz-p

     Display *BBDB* buffer by popping up a new window.
     Finds the largest window on the screen, splits it, displaying the
     *BBDB* buffer in the bottom *note ‘bbdb-pop-up-window-size’: 97. lines (unless
     the *BBDB* buffer is already visible, in which case do nothing.)
     Select this window if SELECT is non-nil.

     If *note ‘bbdb-mua-pop-up’: 98. is ’horiz, and the first window matching
     the predicate HORIZ-P is wider than the car of *note ‘bbdb-horiz-pop-up-window-size’: 99.
     then the window will be split horizontally rather than vertically.

 -- Function: bbdb -pop-up-window-simple buffer select

     Display BUFFER in some window, selecting it if SELECT is non-nil.
     If *note ‘bbdb-dedicated-window’: 9b. is non-nil, mark the window as dedicated.

 -- Function: bbdb -prev-field n

     Move point to previous (sub)field.
     With prefix N move backwards N (sub)fields.

 -- Function: bbdb -prev-record n

     Move point to the beginning of the previous BBDB record.
     With prefix N move backwards N records.

 -- Function: bbdb -puthash key record

     Associate RECORD with KEY in *note ‘bbdb-hashtable’: 78.
     KEY must be a string or nil.  Empty strings and nil are ignored.

 -- Function: bbdb -puthash-mail record

     For RECORD put mail into *note ‘bbdb-hashtable’: 78.

 -- Function: bbdb -read-string prompt &optional init collection
          require-match

     Read a string, trimming whitespace and text properties.
     PROMPT is a string to prompt with.
     INIT appears as initial input which is useful for editing existing records.
     COLLECTION and REQUIRE-MATCH have the same meaning as in ‘`completing-read'’.

 -- Function: bbdb -record-field record field

     For RECORD return the value of FIELD.

     FIELD may take the following values
      firstname     Return the first name of RECORD
      lastname      Return the last name of RECORD
      name          Return the full name of RECORD (first name first)
      name-lf       Return the full name of RECORD (last name first)
      affix         Return the list of affixes
      organization  Return the list of organizations
      aka           Return the list of AKAs
      aka-all       Return the list of AKAs plus mail-akas.
      mail          Return the list of email addresses
      mail-aka      Return the list of name parts in mail addresses
      mail-canon    Return the list of canonical mail addresses.
      phone         Return the list of phone numbers
      address       Return the list of addresses
      xfields       Return the list of all xfields

     Any other symbol is interpreted as the label for an xfield.
     Then return the value of this xfield.

     See also *note ‘bbdb-record-set-field’: a2.

 -- Function: bbdb -record-name-lf record

     Record cache function: Return the full name LAST_FIRST of RECORD.
     If the name is not available in the name cache, the name cache value
     is generated and stored.

 -- Function: bbdb -record-name record

     Record cache function: Return the full name FIRST_LAST of RECORD.
     If the name is not available in the name cache, the name cache value
     is generated and stored.

 -- Function: bbdb -record-set-field record field value &optional merge
          check

     For RECORD set FIELD to VALUE.  Return VALUE.
     If MERGE is non-nil, merge VALUE with the current value of FIELD.
     If CHECK is non-nil, check syntactically whether FIELD may take VALUE.
     This function also updates the hash table.  However, it does not update
     RECORD in the database.  Use *note ‘bbdb-change-record’: 55. for that.

     FIELD may take the following values
      firstname     VALUE is the first name of RECORD
      lastname      VALUE is the last name of RECORD
      name          VALUE is the full name of RECORD either as one string
                      or as a cons pair (FIRST . LAST)
      affix         VALUE is the list of affixes
      organization  VALUE is the list of organizations
      aka           VALUE is the list of AKAs
      mail          VALUE is the list of email addresses
      phone         VALUE is the list of phone numbers
      address       VALUE is the list of addresses
      xfields       VALUE is the list of all xfields

     Any other symbol is interpreted as the label for an xfield.
     Then VALUE is the value of this xfield.

     See also *note ‘bbdb-record-field’: a1.

 -- Function: bbdb -record-set-name record first last

     Record cache function: For RECORD set full name based on FIRST and LAST.
     If FIRST or LAST are t use respective existing entries of RECORD.
     Set full name in cache and hash.  Return first-last name.

 -- Function: bbdb -record-set-sortkey record

     Record cache function: Set and return RECORD’s sortkey.

 -- Function: bbdb -record-set-xfield record label value

     For RECORD set xfield LABEL to VALUE.
     If VALUE is nil or an empty string, remove xfield LABEL from RECORD.
     Return VALUE.

 -- Function: bbdb -record-xfield-intern record label

     For RECORD return interned value of xfield LABEL.
     Return nil if xfield LABEL does not exist.

 -- Function: bbdb -record-xfield-string record label

     For RECORD return value of xfield LABEL as string.
     Return nil if xfield LABEL does not exist.

 -- Function: bbdb -redisplay-record-globally record &optional sort
          delete-p

     Redisplay RECORD in all BBDB buffers.
     If SORT is t, usually because RECORD has a new sortkey, re-sort
     the displayed records.
     If DELETE-P is non-nil RECORD is removed from the BBDB buffers.

 -- Function: bbdb -redisplay-record record &optional sort delete-p

     Redisplay RECORD in current BBDB buffer.
     If SORT is t, usually because RECORD has a new sortkey, re-sort
     the displayed records.
     If DELETE-P is non-nil RECORD is removed from the BBDB buffer.

 -- Function: bbdb -remhash key record

     Remove RECORD from list of records associated with KEY.
     KEY must be a string or nil.  Empty strings and nil are ignored.

 -- Function: bbdb -revert-buffer &optional ignore-auto noconfirm

     The ‘`revert-buffer-function'’ for *note ‘bbdb-buffer’: 51. visiting *note ‘bbdb-file’: 4f.
     IGNORE-AUTO and NOCONFIRM have same meaning as in ‘`revert-buffer'’.
     See also variable *note ‘bbdb-auto-revert’: ae.
     Return t if the reversion was successful (or not needed).
     Return nil otherwise.

 -- Function: bbdb -save &optional prompt noisy

     Save the BBDB if it is modified.
     If PROMPT is non-nil prompt before saving.
     If NOISY is non-nil as in interactive calls issue status messages.

 -- Function: bbdb -scan-property property predicate n

     Scan for change of PROPERTY matching PREDICATE for N times.
     Return position of beginning of matching interval.

 -- Function: bbdb -sendmail-menu record

     Menu items for email addresses of RECORD.

 -- Function: bbdb -sort-records

     Sort BBDB database.
     This is not needed when using BBDB itself.  It might be necessary,
     however, after having used other programs to add records to the BBDB.

 -- Function: bbdb -split separator string

     Split STRING into list of substrings bounded by matches for SEPARATORS.
     SEPARATOR may be a regexp.  SEPARATOR may also be a symbol
     \(a field name).  Then look up the value in *note ‘bbdb-separator-alist’: 5c.
     or use *note ‘bbdb-default-separator’: 5d.
     Whitespace around SEPARATOR is ignored unless SEPARATOR matches
     the string " \t\n".
     Almost the inverse function of *note ‘bbdb-concat’: 5b.

 -- Function: bbdb -string-trim string &optional null

     Remove leading and trailing whitespace and all properties from STRING.
     If STRING is nil return an empty string unless NULL is non-nil.

 -- Function: bbdb -timestamp record

     For use as an element of *note ‘bbdb-change-hook’: b5.
     Maintains an xfield ‘`timestamp'’ for RECORD which contains
     the time when it was last modified.  If such a field already exists,
     it is changed, otherwise it is added.

 -- Function: bbdb -undisplay-records &optional all-buffers

     Undisplay records in *BBDB* buffer, leaving this buffer empty.
     If ALL-BUFFERS is non-nil undisplay records in all BBDB buffers.

 -- Function: bbdb -version &optional arg

     Return string describing the version of BBDB.
     With prefix ARG, insert string at point.

 -- Function: bbdb -warn &rest args

     Display a message at the bottom of the screen.
     ARGS are passed to ‘`message'’.


File: index.info,  Node: Variables,  Next: Hooks<2>,  Prev: Functions,  Up: Lisp library bbdb

10.2 Variables
==============

 -- Variable: bbdb -append-display

     Controls the behavior of the command *note ‘bbdb-append-display’: ba.

 -- Variable: bbdb -accept-message-alist

     Alist describing which messages to automatically create BBDB records for.
     The format of this alist is
        ((HEADER-NAME . REGEXP) ...)
     For example, if
        (("From" . "@.*\.maximegalon\.edu")
         ("Subject" . "time travel"))
     BBDB records are only created for messages sent by people at Maximegalon U.,
     or people posting about time travel.
     If t accept all messages.  If nil do not accept any messages.

     See also *note ‘bbdb-ignore-message-alist’: bc, which has the opposite effect.

 -- Variable: bbdb -add-aka

     How to handle alternate names for existing BBDB records.
     Allowed values are:
      t           Automatically store alternate names as AKA.
      query       Query whether to store alternate names as an AKA.
      nil         Ignore alternate names.
      a function  This is called with two args, the record and the new name.
                    It should return one of the above values.
      a regexp    If the alternate name matches this regexp ignore it.
                    Otherwise query to add it.
     See also *note ‘bbdb-add-name’: be.

 -- Variable: bbdb -add-mails

     How to handle new mail addresses for existing BBDB records.
     This handles messages where the mail address differs from the mail addresses
     in a BBDB record with the same name as in "John Q. Smith <jqs@foo.com>"
     versus "John Q. Smith <jqs@bar.com>".
     Allowed values are:
      t           Automatically add new mail addresses to the list of mail addresses.
      query       Query whether to add it.
      nil         Ignore new mail addresses.
      a number    Number of seconds BBDB displays the new address
                    (without further action).
      a function  This is called with two args, the record and the new mail address.
                    It should return one of the above values.
      a regexp    If the new mail address matches this regexp ignore the new address.
                    Otherwise query to add it.
     See also *note ‘bbdb-new-mails-primary’: c0. and *note ‘bbdb-ignore-redundant-mails’: c1.

 -- Variable: bbdb -add-name

     How to handle new names for existing BBDB records.
     This handles messages where the real name differs from the name
     in a BBDB record with the same mail address, as in "John Smith <jqs@frob.com>"
     versus "John Q. Smith <jqs@frob.com>".
     Allowed values are:
      t           Automatically change the name to the new value.
      query       Query whether to use the new name.
      nil         Ignore the new name.
      a number    Number of seconds BBDB displays the name mismatch.
                    (without further action).
      a function  This is called with two args, the record and the new name.
                    It should return one of the above values.
      a regexp    If the new name matches this regexp ignore it.
                    Otherwise query to add it.
     See also *note ‘bbdb-add-aka’: bd.

 -- Variable: bbdb -address-format-list

     List of address editing and formatting rules for BBDB.
     Each rule is a list (IDENTIFIER EDIT FORMAT FORMAT).
     The first rule for which IDENTIFIER matches an address is used for editing
     and formatting the address.

     IDENTIFIER may be a list of countries.
     IDENTIFIER may also be a function that is called with one arg, the address
     to be used.  The rule applies if the function returns non-nil.
     See *note ‘bbdb-address-continental-p’: 4a. for an example.
     If IDENTIFIER is t, this rule always applies.  Usually, this should be
     the last rule that becomes a fall-back (default).

     EDIT may be a function that is called with one argument, the address.
     See *note ‘bbdb-edit-address-default’: c2. for an example.

     EDIT may also be an editting format string.  It is a string containing
     the five letters s, c, p, S, and C that specify the order for editing
     the five elements of an address:

     s  streets
     c  city
     p  postcode
     S  state
     C  country

     The first FORMAT of each rule is used for multi-line layout, the second FORMAT
     is used for one-line layout.

     FORMAT may be a function that is called with one argument, the address.
     See *note ‘bbdb-format-address-default’: 76. for an example.

     FORMAT may also be a format string.  It consists of formatting elements
     separated by a delimiter defined via the first (and last) character of FORMAT.
     Each formatting element may contain one of the following format specifiers:

     %s  streets (used repeatedly for each street part)
     %c  city
     %p  postcode
     %S  state
     %C  country

     A formatting element will be applied only if the corresponding part
     of the address is a non-empty string.

     See also *note ‘bbdb-print-address-format-list’: 4d.

 -- Variable: bbdb -address-label-list

     List of labels for Address field.

 -- Variable: bbdb -allow-duplicates

     When non-nil BBDB allows records with duplicate names and email addresses.
     In rare cases, this may lead to confusion with BBDB’s MUA interface.

 -- Variable: bbdb -annotate-field

     Field to annotate via *note ‘bbdb-annotate-record’: c5. and friends.
     This may take the values:
      affix           The list of affixes
      organization    The list of organizations
      aka             the list of AKAs
      mail            the list of email addresses
      all-fields      Read the field to edit using a completion table
                        that includes all fields currently known to BBDB.

     Any other symbol is interpreted as the label of an xfield.

 -- Variable: bbdb -auto-notes-ignore-headers

     Alist of headers and regexps to ignore in *note ‘bbdb-auto-notes’: c7.
     Each element is of the form

         (HEADER . REGEXP)

     For example,

         ("Organization" . "^Gatewayed from\\\|^Source only")

     will exclude the phony ‘`Organization:'’ headers in GNU mailing-lists
     gatewayed to gnu.* newsgroups.
     See also *note ‘bbdb-auto-notes-ignore-messages’: c8.

 -- Variable: bbdb -auto-notes-ignore-messages

     List of rules for ignoring entire messages in *note ‘bbdb-auto-notes’: c7.
     The elements may have the following values:
       a function  This function is called with one arg, the record
                   that would be annotated.
                   Ignore this message if the function returns non-nil.
                   This function may use *note ‘bbdb-update-records-address’: c9.
       MUA         Ignore messages from MUA (see *note ‘bbdb-mua’: ca.).
       (HEADER . REGEXP)  Ignore messages where HEADER matches REGEXP.
                   For example,  ("From" . bbdb-user-mail-address-re)
                   disables any recording of notes for mail addresses
                   found in messages coming from yourself, see
                   *note ‘bbdb-user-mail-address-re’: cb.
       (MUA HEADER REGEXP)  Ignore messages from MUA where HEADER
                   matches REGEXP.
     See also *note ‘bbdb-auto-notes-ignore-headers’: c6.

 -- Variable: bbdb -auto-notes-rules

     List of rules for adding notes to records of mail addresses of messages.
     This automatically annotates the BBDB record of the sender or recipient
     of a message based on the value of a header such as the Subject header.
     This requires that *note ‘bbdb-notice-mail-hook’: cd. contains *note ‘bbdb-auto-notes’: c7.
     and that the record already exists or *note ‘bbdb-update-records-p’: ce. returns such that
     the record will be created.  Messages matching *note ‘bbdb-auto-notes-ignore-messages’: c8.
     are ignored.

     The elements of this list are

        (MUA FROM-TO HEADER ANNOTATE ...)
        (FROM-TO HEADER ANNOTATE ...)
        (HEADER ANNOTATE ...)

     MUA is the active MUA or a list of MUAs (see *note ‘bbdb-mua’: ca.).
     If MUA is missing or t, use this rule for all MUAs.

     FROM-TO is a list of headers and/or header classes as in *note ‘bbdb-message-headers’: cf.
     The record corresponding to a mail address of a message is considered for
     annotation if this mail address was found in a header matching FROM-TO.
     If FROM-TO is missing or t, records for each mail address are considered
     irrespective of where the mail address was found in a message.

     HEADER is a message header that is considered for generating the annotation.

     ANNOTATE may take the following values:

       (REGEXP . STRING)       [this is equivalent to (REGEXP notes STRING)]
       (REGEXP FIELD STRING)
       (REGEXP FIELD STRING REPLACE)

     REGEXP must match the value of HEADER for generating an annotation.
     However, if the value of HEADER also matches an element of
     *note ‘bbdb-auto-notes-ignore-headers’: c6. no annotation is generated.

     The annotation will be added to FIELD of the respective record.
     FIELD defaults to *note ‘bbdb-default-xfield’: d0.

     STRING defines a replacement for the match of REGEXP in the value of HEADER.
     It may contain \& or \N specials used by ‘`replace-match'’.
     The resulting string becomes the annotation.
     If STRING is an integer N, the Nth matching subexpression is used.
     If STRING is a function, it will be called with one arg, the value of HEADER.
     The return value (which must be a string) is then used.

     If REPLACE is t, the resulting string replaces the old contents of FIELD.
     If it is nil, the string is appended to the contents of FIELD (unless the
     annotation is already part of the content of field).

     For example,

        (("To" ("-vm@" . "VM mailing list"))
         ("Subject" ("sprocket" . "mail about sprockets")
                    ("you bonehead" . "called me a bonehead")))

     will cause the text "VM mailing list" to be added to the notes field
     of the records corresponding to anyone you get mail from via one of the VM
     mailing lists.

     If multiple clauses match the message, all of the corresponding strings
     will be added.

     See also variables *note ‘bbdb-auto-notes-ignore-messages’: c8. and
     *note ‘bbdb-auto-notes-ignore-headers’: c6.

     For speed-up, the function *note ‘bbdb-auto-notes’: c7. actually use expanded rules
     stored in the internal variable *note ‘bbdb-auto-notes-rules-expanded’: d1.
     If you change the value of *note ‘bbdb-auto-notes-rules’: cc. outside of customize,
     set *note ‘bbdb-auto-notes-rules-expanded’: d1. to nil, so that the expanded rules
     will be re-evaluated.

 -- Variable: bbdb -auto-notes-rules-expanded

     Expanded *note ‘bbdb-auto-notes-rules’: cc.

 -- Variable: bbdb -auto-revert

     If t revert unchanged database without querying.
     If t and *note ‘bbdb-file’: 4f. has changed on disk, while the database
     has not been modified inside Emacs, revert the database automatically.
     If nil or the database has been changed inside Emacs, always query
     before reverting.

 -- Variable: bbdb -buffer-name

     Name of the BBDB buffer.

 -- Variable: bbdb -canonical-hosts

     Regexp matching the canonical part of the domain part of a mail address.
     If the domain part of a mail address matches this regexp, the domain
     is replaced by the substring that actually matched this address.

     Used by  *note ‘bbdb-canonicalize-mail-1’: 53.  See also *note ‘bbdb-ignore-redundant-mails’: c1.

 -- Variable: bbdb -canonicalize-mail-function

     If non-nil, it should be a function of one arg: a mail address string.
     When BBDB "notices" a message, the corresponding mail addresses are passed
     to this function first.  It acts as a kind of "filter" to transform
     the mail addresses before they are compared against or added to the database.
     See *note ‘bbdb-canonicalize-mail-1’: 53. for a more complete example.
     If this function returns nil, BBDB assumes that there is no mail address.

     See also *note ‘bbdb-ignore-redundant-mails’: c1.

 -- Variable: bbdb -case-fold-search

     Value of ‘`case-fold-search'’ used by BBDB and friends.
     This variable lets the case-sensitivity of the BBDB commands
     be different from standard commands like command ‘`isearch-forward'’.

 -- Variable: bbdb -changed-records

     List of records that has been changed since BBDB was last saved.
     Use *note ‘bbdb-search-changed’: d6. to display these records.

 -- Variable: bbdb -check-auto-save-file

     If t BBDB will check its auto-save file.
     If this file is newer than *note ‘bbdb-file’: 4f, BBDB will offer to revert.

 -- Variable: bbdb -check-postcode

     If non-nil, require legal postcodes when entering an address.
     The format of legal postcodes is determined by the variable
     *note ‘bbdb-legal-postcodes’: d8.

 -- Variable: bbdb -city-list

     List of cities known to BBDB.

 -- Variable: bbdb -complete-mail

     If t MUA insinuation provides key binding for command *note ‘bbdb-complete-mail’: da.

 -- Variable: bbdb -complete-mail-allow-cycling

     If non-nil cycle mail addresses when calling *note ‘bbdb-complete-mail’: da.

 -- Variable: bbdb -completion-display-record

     If non-nil *note ‘bbdb-complete-mail’: da. displays the BBDB record after completion.

 -- Variable: bbdb -completion-list

     Controls the behaviour of *note ‘bbdb-complete-mail’: da.
     If a list of symbols, it specifies which fields to complete.  Symbols include
       fl-name (= first and last name)
       lf-name (= last and first name)
       organization
       aka
       mail (= all email addresses of each record)
       primary (= first email address of each record)
     If t, completion is done for all of the above.
     If nil, no completion is offered.

 -- Variable: bbdb -continental-postcode-regexp

     Regexp matching continental postcodes.
     Used by address format identifier *note ‘bbdb-address-continental-p’: 4a.
     The regexp should match postcodes of the form CH-8052, NL-2300RA,
     and SE-132 54.

 -- Variable: bbdb -country-list

     List of countries known to BBDB.

 -- Variable: bbdb -debug

     Enable debugging if non-nil during compile time.
     You really should not disable debugging.  But it will speed things up.

 -- Variable: bbdb -dedicated-window

     Make *BBDB* window a dedicated window.
     Allowed values include nil (not dedicated) ’bbdb (weakly dedicated)
     and t (strongly dedicated).

 -- Variable: bbdb -default-area-code

     Default area code to use when reading a new phone number.
     This variable also affects dialing.

 -- Variable: bbdb -default-country

     Default country to use if none is specified.

 -- Variable: bbdb -default-domain

     Default domain to append when reading a new mail address.
     If a mail address does not contain ‘[@%!]’, append @*note ‘bbdb-default-domain’: e1. to it.

     The address is not altered if *note ‘bbdb-default-domain’: e1. is nil
     or if a prefix argument is given to the command *note ‘bbdb-insert-field’: e2.

 -- Variable: bbdb -default-label-list

     Default list of labels for Address and Phone fields.

 -- Variable: bbdb -default-separator

     The default field separator.  It is a list (SPLIT-RE JOIN).
     This is used for fields which do not have an entry in *note ‘bbdb-separator-alist’: 5c.

 -- Variable: bbdb -default-xfield

     Default xfield when editing BBDB records.

 -- Variable: bbdb -do-all-records

 -- Variable: bbdb -dial-function

     If non-nil this should be a function used for dialing phone numbers.
     This function is used by *note ‘bbdb-dial-number’: e5.  It requires one
     argument which is a string for the number that is dialed.
     If nil then *note ‘bbdb-dial-number’: e5. uses the tel URI syntax passed to ‘`browse-url'’
     to make the call.

 -- Variable: bbdb -dial-local-prefix

     Local prefix digits.
     If this is non-nil, it should be a string of digits which your phone
     system requires before making local calls (for example, if your phone system
     requires you to dial 9 before making outside calls.) In BBDB’s
     opinion, you’re dialing a local number if it starts with a 0 after
     processing *note ‘bbdb-dial-local-prefix-alist’: e7.

 -- Variable: bbdb -dial-local-prefix-alist

     Mapping to remove local prefixes from numbers.
     If this is non-nil, it should be an alist of
     \(PREFIX . REPLACEMENT) elements. The first part of a phone number
     matching the regexp returned by evaluating PREFIX will be replaced by
     the corresponding REPLACEMENT when dialing.

 -- Variable: bbdb -dial-long-distance-prefix

     Long distance prefix digits.
     If this is non-nil, it should be a string of digits which your phone
     system requires before making a long distance call (one not in your local
     area code).  For example, in some areas you must dial 1 before an area
     code. Note that this is used to replace the + sign in phone numbers
     when dialling (international dialing prefix.)

 -- Variable: bbdb -edit-foo

     Fields to edit with command ‘`bbdb-edit-foo'’.
     This is a cons pair (WITHOUT-PREFIX . WITH-PREFIX).
     The car is used if the command is called without a prefix.
     The cdr is used if the command is called with a prefix.

     WITHOUT-PREFIX and WITH-PREFIX may take the values:
      name            The full name
      affix           The list of affixes
      organization    The list of organizations
      aka             the list of AKAs
      mail            the list of email addresses
      phone           the list of phone numbers
      address         the list of addresses
      current-fields  Read the field to edit using a completion table
                        that includes all fields of the current record.
      all-fields      Read the field to edit using a completion table
                        that includes all fields currently known to BBDB.

     Any other symbol is interpreted as the label of an xfield.

 -- Variable: bbdb -end-marker

     Marker holding the buffer position of the end of the last record.

 -- Variable: bbdb -file

     The name of the Insidious Big Brother Database file.

 -- Variable: bbdb -file-remote

     The remote file to save the BBDB database to.
     When this is non-nil, it should be a file name.
     When BBDB reads *note ‘bbdb-file’: 4f, it also checks this file,
     and if it is newer than *note ‘bbdb-file’: 4f, it loads this file.
     When BBDB writes *note ‘bbdb-file’: 4f, it also writes this file.

     This feature allows one to keep the database in one place while using
     different computers, thus reducing the need for merging different files.

 -- Variable: bbdb -file-remote-save-always

     If t *note ‘bbdb-file-remote’: 52. is saved automatically when *note ‘bbdb-file’: 4f. is saved.
     When nil, ask.

 -- Variable: bbdb -hashtable

     Hash table for BBDB records.
     Hashes the fields first-last-name, last-first-name, organization, aka, and mail.

 -- Variable: bbdb -horiz-pop-up-window-size

     Horizontal size of a MUA pop-up BBDB window (horizontal split).
     It is a cons pair (TOTAL . BBDB-SIZE).
     The window that will be considered for horizontal splitting must have
     at least TOTAL columns. BBDB-SIZE is the horizontal size of the BBDB window.
     If it is an integer number, it is the number of columns used by BBDB.
     If it is a fraction between 0 and 1, it is the fraction of the
     window width that BBDB will take over.

 -- Variable: bbdb -ignore-message-alist

     Alist describing which messages not to automatically create BBDB records for.
     The format of this alist is
        ((HEADER-NAME . REGEXP) ... )
     For example, if
        (("From" . "mailer-daemon")
         (("To" "CC") . "mailing-list-1\\|mailing-list-2"))
     no BBDB records are created for messages from any mailer daemon,
     or messages sent to or CCed to either of two mailing lists.
     If t ignore all messages.  If nil do not ignore any messages.

     See also *note ‘bbdb-accept-message-alist’: bb, which has the opposite effect.

 -- Variable: bbdb -ignore-redundant-mails

     How to handle redundant mail addresses for existing BBDB records.
     For example, "foo@bar.baz.com" is redundant w.r.t. "foo@baz.com".
     This affects two things, whether a new redundant mail address is added
     to BBDB and whether an old mail address, which has become redundant
     because of a newly added mail address, is removed from BBDB.

     Allowed values are:
      t           Automatically ignore redundant mail addresses.
      query       Query whether to ignore them.
      nil         Do not ignore redundant mail addresses.
      a number    Number of seconds BBDB displays redundant mail addresses
                    (without further action).
      a function  This is called with two args, the record and the new mail address.
                    It should return one of the above values.
      a regexp    If the new mail address matches this regexp never ignore
                    this mail address.  Otherwise query to ignore it.
     See also *note ‘bbdb-add-mails’: bf. and *note ‘bbdb-canonicalize-mail-function’: 54.

 -- Variable: bbdb -image

     If non-nil display records with an image.
     If a symbol this should be an xfield holding the name of the image file
     associated with the record.  If it is ‘`name'’ or ‘`fl-name'’, the first and last
     name of the record are used as file name.  If it is ‘`lf-name'’, the last and
     first name of the record are used as file name.
     If a function it is called with one arg, the record, and it should return
     the name of the image file.
     The file is searched in the directories in *note ‘bbdb-image-path’: ed.
     File name suffixes are appended according to *note ‘bbdb-image-suffixes’: ee.
     See ‘`locate-file'’.

 -- Variable: bbdb -image-path

     List of directories to search for *note ‘bbdb-image’: ec.

 -- Variable: bbdb -image-suffixes

     List of file name suffixes searched for *note ‘bbdb-image’: ec.

 -- Variable: bbdb -info-file

     Location of the bbdb info file, if it’s not in the standard place.

 -- Variable: bbdb -init-forms

     Alist mapping features to insinuation forms.

 -- Variable: bbdb -lastname-prefixes

     List of lastname prefixes recognized in name fields.
     Used to enhance dividing name strings into firstname and lastname parts.
     Case is ignored.

 -- Variable: bbdb -lastname-re

     Regexp matching the last name of a full name.
     Its first parenthetical subexpression becomes the last name.

 -- Variable: bbdb -lastname-suffixes

     List of lastname suffixes recognized in name fields.
     Used to dividing name strings into firstname and lastname parts.
     All suffixes are complemented by optional ‘`.'’.  Case is ignored.

 -- Variable: bbdb -lastname-suffix-re

     Regexp matching the suffix of a last name.
     Its first parenthetical subexpression becomes the suffix.

 -- Variable: bbdb -layout-alist

     Alist describing each display layout.
     The format of an element is (LAYOUT-NAME OPTION-ALIST).

     By default there are four different layout types used by BBDB, which are
     ‘`one-line'’, ‘`multi-line'’, ‘`pop-up-multi-line'’ (used for pop-ups) and
     ‘`full-multi-line'’ (showing all fields of a record).

     OPTION-ALIST specifies the options for the layout.  Valid options are:

                                ——- Availability ——–
         Format                  one-line        multi-line        default if unset
     ——————————————————————————
      (toggle . BOOL)                 +               +              nil
      (order . FIELD-LIST)            +               +              ’(phone ...)
      (omit . FIELD-LIST)             +               +              nil
      (name-end . INTEGER)            +               -              40
      (indentation . INTEGER)         -               +              21
      (primary . BOOL)                -               +              nil
      (display-p . FUNCTION)          +               +              nil

     - toggle: controls if this layout is included when toggeling the layout
     - order: defines a user specific order for the fields, where t is a place
       holder for all remaining fields
     - omit: is a list of xfields which should not be displayed
       or t to exclude all xfields except those listed in the order option
     - name-end: sets the column where the name should end in one-line layout.
     - indentation: sets the level of indentation for multi-line display.
     - primary: controls whether only the primary mail is shown or all are shown.
     - display-p: a function controlling whether the record is to be displayed.

     When you add a new layout FOO, you can write a corresponding layout
     function ‘`bbdb-display-record-layout-FOO'’.  If you do not write your own
     layout function, the multi-line layout will be used.

 -- Variable: bbdb -layout

     Default display layout.

 -- Variable: bbdb -legal-postcodes

     List of regexps that match legal postcodes.
     Whether this is used at all depends on the variable *note ‘bbdb-check-postcode’: 94.

 -- Variable: bbdb -mail-alias

     Defines which mail aliases are generated for a BBDB record.
     first: Generate one alias "<alias>" that expands to the first mail address
            of a record.
     star:  Generate a second alias "<alias>*" that expands to all mail addresses
            of a record.
     all:   Generate the aliases "<alias>" and "<alias>*" (as for ’star)
            and aliases "<alias>n" for each mail address, where n is the position
            of the mail address of a record.

 -- Variable: bbdb -mail-alias-field

     Xfield holding the mail alias for a record.
     Used by *note ‘bbdb-mail-aliases’: f7.  See also *note ‘bbdb-mail-alias’: f5.

 -- Variable: bbdb -mail-aliases-need-rebuilt

     Non-nil if mail aliases need to be rebuilt.

 -- Variable: bbdb -mail-avoid-redundancy

     Mail address to use for BBDB records when sending mail.
     If non-nil do not use full name in mail address when same as mail.
     If value is mail-only never use full name.

 -- Variable: bbdb -mail-name-format

     Format for names when sending mail.
     If first-last format names as "Firstname Lastname".
     If last-first format names as "Lastname, Firstname".
     If *note ‘bbdb-mail-name’: fb. returns the full name as a single string, this takes
     precedence over *note ‘bbdb-mail-name-format’: fa.  Likewise, if the mail address itself
     includes a name, this is not reformatted.

 -- Variable: bbdb -mail-name

     Xfield holding the full name for a record when sending mail.
     This may also be a function taking one argument, a record.
     If it returns the full mail name as a single string, this is used "as is".
     If it returns a cons pair (FIRST . LAST) with the first and last name
     for this record, these are formatted obeying *note ‘bbdb-mail-name-format’: fa.

 -- Variable: bbdb -mail-user-agent

     Mail user agent used by BBDB.
     Allowed values are those allowed for ‘`mail-user-agent'’.

 -- Variable: bbdb -merge-xfield-function-alist

     An alist defining specific merging function for xfields.
     Each element is of the form (LABEL . MERGE-FUN).
     For merging xfield LABEL, this will use MERGE-FUN.

 -- Variable: bbdb -message-all-addresses

     If t *note ‘bbdb-update-records’: fe. returns all mail addresses of a message.
     Otherwise this function returns only the first mail address of each message.

 -- Variable: bbdb -message-clean-name-function

     Function to clean up the name in the header of a message.
     It takes one argument, the name as extracted by
     ‘`mail-extract-address-components'’.

 -- Variable: bbdb -message-headers

     Alist of headers to search for sender and recipients mail addresses.
     Each element is of the form

       (CLASS HEADER ...)

     The symbol CLASS defines a class of headers.
     The strings HEADER belong to CLASS.

 -- Variable: bbdb -message-mail-as-name

     If non-nil use mail address of message as fallback for name of new records.

 -- Variable: bbdb -message-try-all-headers

     If t try all message headers to extract an email address from a message.
     Several BBDB commands extract either the sender or the recipients’ email
     addresses from a message according to *note ‘bbdb-message-headers’: cf.  If BBDB does not
     find any email address in this subset of message headers (for example, because
     an email address is excluded because of *note ‘bbdb-user-mail-address-re’: cb.)
     but *note ‘bbdb-message-try-all-headers’: 100. is t, then these commands will also consider
     the email addresses in the remaining headers.

 -- Variable: bbdb -mua-auto-update-p

     How *note ‘bbdb-mua-auto-update’: 102. updates BBDB records automatically.

     Allowed values are (here ADDRESS is an email address found in a message):
      nil          Do nothing.
      search       Search for existing records matching ADDRESS.
      update       Search for existing records matching ADDRESS;
                     update name and mail field if necessary.
      query        Search for existing records matching ADDRESS;
                     query for creation of a new record if the record does not exist.
      create or t  Search for existing records matching ADDRESS;
                     create a new record if it does not yet exist.
      a function   This functions will be called with no arguments.
                     It should return one of the above values.
                     For an example, see *note ‘bbdb-select-message’: 103. with
                     ‘`bbdb-mua-update-records-p'’, *note ‘bbdb-accept-message-alist’: bb.
                     and *note ‘bbdb-ignore-message-alist’: bc.

     To initiate auto-updating of BBDB records, call *note ‘bbdb-mua-auto-update-init’: 80.
     for the respective MUAs in your init file.

 -- Variable: bbdb -mua-edit-field

     Field to edit with command *note ‘bbdb-mua-edit-field’: 105. and friends.
     This may take the values:
      name            The full name
      affix           The list of affixes
      organization    The list of organizations
      aka             the list of AKAs
      mail            the list of email addresses
      all-fields      Read the field to edit using a completion table
                        that includes all fields currently known to BBDB.

     Any other symbol is interpreted as the label of an xfield.

 -- Variable: bbdb -mua-pop-up

     If non-nil, display an auto-updated BBDB window while using a MUA.
     If ’horiz, stack the window horizontally if there is room.
     If this is nil, BBDB is updated silently.

     See also *note ‘bbdb-mua-pop-up-window-size’: 106. and *note ‘bbdb-horiz-pop-up-window-size’: 99.

 -- Variable: bbdb -mua-pop-up-window-size

     Vertical size of MUA pop-up BBDB window (vertical split).
     If it is an integer number, it is the number of lines used by BBDB.
     If it is a fraction between 0.0 and 1.0 (inclusive), it is the fraction
     of the tallest existing window that BBDB will take over.
     If it is t use ‘`pop-to-buffer'’ to create the BBDB window.
     See also *note ‘bbdb-pop-up-window-size’: 97.

 -- Variable: bbdb -mua-summary-mark

     Default mark for message addresses known to BBDB.
     If nil do not mark message addresses known to BBDB.
     See *note ‘bbdb-mua-summary-mark’: 107. and *note ‘bbdb-mua-summary-unify’: 108.
     See also *note ‘bbdb-mua-summary-mark-field’: 109.

 -- Variable: bbdb -mua-summary-mark-field

     BBDB xfield whose value is used to mark message addresses known to BBDB.
     This may also be a function, called with one arg, the record, which should
     return the mark.  See *note ‘bbdb-mua-summary-mark’: 107. and *note ‘bbdb-mua-summary-unify’: 108.
     See also *note ‘bbdb-mua-summary-mark’: 107.

 -- Variable: bbdb -mua-summary-mark-format-letter

     Letter required for *note ‘bbdb-mua-summary-mark’: 107. in the MUA Summary format string.
     For Gnus, combine it with the %u specifier in ‘`gnus-summary-line-format'’
     \(see there), for example, use "%U%R%z%I%(%[%4L: %ub%-23,23f%]%) %s\n".
     For VM, combine it with the %U specifier in ‘`vm-summary-format'’ (see there),
     for example, use "%n %*%a %Ub%-17.17F %-3.3m %2d %4l/%-5c %I\"%s\"\n".
     This customization of ‘`gnus-summary-line-format'’ / ‘`vm-summary-format'’
     is required to use *note ‘bbdb-mua-summary-mark’: 107.
     Currently no other MUAs support this BBDB feature.

 -- Variable: bbdb -mua-summary-unification-list

     List of FIELDs considered by *note ‘bbdb-mua-summary-unify’: 108.
     For the RECORD matching the address of a message, *note ‘bbdb-mua-summary-unify’: 108.
     returns the first non-empty field value matching an element FIELD from this list.
     Each element FIELD may be a valid argument of *note ‘bbdb-record-field’: a1. for RECORD.
     In addition, this list may also include the following elements:
       message-name     The name in the address of the message
       message-mail     The mail in the address of the message
       message-address  The complete address of the message
     These provide a fallback if a message does not have a matching RECORD
     or if some FIELD of RECORD is empty.

 -- Variable: bbdb -mua-summary-unify-format-letter

     Letter required for *note ‘bbdb-mua-summary-unify’: 108. in the MUA Summary format string.
     For Gnus, combine it with the %u specifier in ‘`gnus-summary-line-format'’
     \(see there), for example use "%U%R%z%I%(%[%4L: %-23,23uB%]%) %s\n".
     For VM, combine it with the %U specifier in ‘`vm-summary-format'’ (see there),
     for example, use "%n %*%a %-17.17UB %-3.3m %2d %4l/%-5c %I\"%s\"\n".
     This customization of ‘`gnus-summary-line-format'’ / ‘`vm-summary-format'’
     is required to use *note ‘bbdb-mua-summary-unify’: 108.
     Currently no other MUAs support this BBDB feature.

 -- Variable: bbdb -mua-update-interactive-p

     How BBDB’s interactive MUA commands update BBDB records.
     This is a cons pair (WITHOUT-PREFIX . WITH-PREFIX).
     The car is used if the command is called without a prefix.
     The cdr is used if the command is called with a prefix (and if the prefix
             is not used for another purpose).

     WITHOUT-PREFIX and WITH-PREFIX may take the values
     \(here ADDRESS is an email address found in a message):
      nil          Do nothing.
      search       Search for existing records matching ADDRESS.
      update       Search for existing records matching ADDRESS;
                     update name and mail field if necessary.
      query        Search for existing records matching ADDRESS;
                     query for creation of a new record if the record does not exist.
      create or t  Search for existing records matching ADDRESS;
                     create a new record if it does not yet exist.
      a function   This functions will be called with no arguments.
                     It should return one of the above values.
      read         Read the value interactively.

 -- Variable: bbdb -multiple-buffers

     When non-nil we create a new buffer of every buffer causing pop-ups.
     You can also set this to a function returning a buffer name.
     Here a value may be the predefined function *note ‘bbdb-multiple-buffers-default’: 8e.

 -- Variable: bbdb -modeline-info

     Precalculated mode line info for BBDB commands.
     This is a vector [APPEND-M APPEND INVERT-M INVERT ALL-M ALL].
     APPEND-M is the mode line info if *note ‘bbdb-append-display’: ba. is non-nil.
     INVERT-M is the mode line info if *note ‘bbdb-search-invert’: 10f. is non-nil.
     ALL-M is the mode line info if *note ‘bbdb-do-all-records’: 110. is non-nil.
     APPEND, INVERT, and ALL appear in the message area.

 -- Variable: bbdb -mode-map

     Keymap for Insidious Big Brother Database.
     This is a child of ‘`special-mode-map'’.

 -- Variable: bbdb -name-face-alist

     Alist used for font-locking the name of a record.
     Each element should be a cons cell (KEY . FACE) with string KEY and face FACE.
     To use FACE for font-locking the name of a record,
     the xfield name-face of this record should have the value KEY.
     The value of name-face may also be a face which is then used directly.
     If none of these schemes succeeds, the face ‘`bbdb-name'’ is used.

 -- Variable: bbdb -name-format

     Format for displaying names.
     If first-last names are displayed as "Firstname Lastname".
     If last-first names are displayed as "Lastname, Firstname".
     This can be overriden per record via the xfield name-format,
     which should take the same values.
     See also *note ‘bbdb-read-name-format’: 113.

 -- Variable: bbdb -new-mails-primary

     Where to put new mail addresses for existing BBDB records.
     A new mail address may either become the new primary mail address,
     when it is put at the beginning of the list of mail addresses.
     Or the new mail address is added at the end of the list of mail addresses.
     Allowed values are:
      t           Make a new address automatically the primary address.
      query       Query whether to make it the primary address.
      nil         Add the new address to the end of the list.
      a function  This is called with two args, the record and the new mail address.
                    It should return one of the above values.
      a regexp    If the new mail address matches this regexp put it at the end.
                    Otherwise query to make it the primary address.
     See also *note ‘bbdb-add-mails’: bf.

 -- Variable: bbdb -offer-to-create

     For communication between *note ‘bbdb-update-records’: fe. and *note ‘bbdb-query-create’: 115.

 -- Variable: bbdb -organization-list

     List of organizations known to BBDB.

 -- Variable: bbdb -phone-label-list

     List of labels for Phone field.

 -- Variable: bbdb -phone-style

     Phone numbering plan assumed by BBDB.
     The value ’nanp refers to the North American Numbering Plan.
     The value nil refers to a free-style numbering plan.

     You can have both styles of phone number in your database by providing a
     prefix argument to the command *note ‘bbdb-insert-field’: e2.

 -- Variable: bbdb -postcode-list

     List of post codes known to BBDB.

 -- Variable: bbdb -pop-up-layout

     Default layout for pop-up BBDB buffers (mail, news, etc.).

 -- Variable: bbdb -pop-up-window-size

     Vertical size of BBDB window (vertical split).
     If it is an integer number, it is the number of lines used by BBDB.
     If it is a fraction between 0.0 and 1.0 (inclusive), it is the fraction
     of the tallest existing window that BBDB will take over.
     If it is t use ‘`display-buffer'’/‘`pop-to-buffer'’ to create the BBDB window.
     See also *note ‘bbdb-mua-pop-up-window-size’: 106.

 -- Variable: bbdb -read-name-format

     Default format for reading names via ‘`bbdb-read-name'’.
     If it is ’first-last read first and last name separately.
     If it is ’last-first read last and first name separately.
     With any other value read full name at once.
     See also *note ‘bbdb-name-format’: 112.

 -- Variable: bbdb -read-only

     If t then BBDB will not modify *note ‘bbdb-file’: 4f.
     If you have more than one Emacs running at the same time, you might want
     to set this to t in all but one of them.

 -- Variable: bbdb -records

          Variable properties: Automatically becomes buffer-local when
          set.

     BBDB records list.
     In buffer *note ‘bbdb-file’: 4f. this list includes all records.
     In the *BBDB* buffers it includes the records that are actually displayed
     and its elements are (RECORD DISPLAY-FORMAT MARKER-POS).

 -- Variable: bbdb -search-invert

     Bind this variable to t in order to invert the result of ‘`bbdb-search'’.

 -- Variable: bbdb -separator-alist

     Alist of field separators.
     Each element is of the form (FIELD SPLIT-RE JOIN).
     For fields lacking an entry here *note ‘bbdb-default-separator’: 5d. is used instead.

 -- Variable: bbdb -silent

     If t, BBDB suppresses all its informational messages and queries.
     Be very very certain you want to set this to t, because it will suppress
     queries to alter record names, assign names to addresses, etc.
     Lisp Hackers: See also *note ‘bbdb-silent-internal’: 11e.

 -- Variable: bbdb -silent-internal

     Bind this to t to quiet things down - do not set it.
     See also *note ‘bbdb-silent’: 11d.

 -- Variable: bbdb -state-list

     List of states known to BBDB.

 -- Variable: bbdb -street-list

     List of streets known to BBDB.

 -- Variable: bbdb -update-records-address

     For communication between *note ‘bbdb-update-records’: fe. and *note ‘bbdb-query-create’: 115.
     It is a list with elements (NAME MAIL HEADER HEADER-CLASS MUA).

 -- Variable: bbdb -update-records-p

     Return value for *note ‘bbdb-select-message’: 103. and friends.
     These functions can select messages for further processing by BBDB,
     The amount of subsequent processing is determined by *note ‘bbdb-update-records-p’: ce.

     Allowed values are (here ADDRESS is an email address selected
     by *note ‘bbdb-select-message’: 103.):
      nil          Do nothing.
      search       Search for existing records matching ADDRESS.
      update       Search for existing records matching ADDRESS;
                     update name and mail field if necessary.
      query        Search for existing records matching ADDRESS;
                     query for creation of a new record if the record does not exist.
      create or t  Search for existing records matching ADDRESS;
                     create a new record if it does not yet exist.
      a function   This functions will be called with no arguments.
                     It should return one of the above values.

 -- Variable: bbdb -update-unchanged-records

     If non-nil update unchanged records in the database.
     Normally calls of *note ‘bbdb-change-hook’: b5. and updating of a record are suppressed,
     if an editing command did not really change the record.  Bind this to t
     if you want to call *note ‘bbdb-change-hook’: b5. and update the record unconditionally.

 -- Variable: bbdb -user-mail-address-re

     A regular expression matching your mail addresses.
     Several BBDB commands extract either the sender or the recipients’ email
     addresses from a message according to *note ‘bbdb-message-headers’: cf.  Yet an email
     address will be ignored if it matches *note ‘bbdb-user-mail-address-re’: cb.  This way
     the commands will not operate on your own record.
     See also *note ‘bbdb-message-try-all-headers’: 100.

 -- Variable: bbdb -user-menu-commands

     User defined menu entries which should be appended to the BBDB menu.
     This should be a list of menu entries.
     When set to a function, it is called with two arguments RECORD and FIELD
     and it should either return nil or a list of menu entries.
     Used by *note ‘bbdb-mouse-menu’: 8d.

 -- Variable: bbdb -wrap-column

     Wrap column for multi-line display.  If nil do not wrap lines.

 -- Variable: bbdb -xfield-label-list

     List of labels for xfields.

 -- Variable: bbdb -xfields-sort-order

     The order for sorting the xfields.
     If an xfield is not in the alist, it is assigned weight 100, so all xfields
     with weights less then 100 will be in the beginning, and all xfields with
     weights more than 100 will be in the end.


File: index.info,  Node: Hooks<2>,  Prev: Variables,  Up: Lisp library bbdb

10.3 Hooks
==========

 -- Hook: bbdb -after-change-hook

     Hook run each time a BBDB record is changed.
     Run with one argument, the record.  This is called after the database
     is modified.  So if you want to modify a record when it is created or changed,
     use instead *note ‘bbdb-create-hook’: 60. and / or *note ‘bbdb-change-hook’: b5.

 -- Hook: bbdb -after-read-db-hook

     Hook run (with no arguments) after *note ‘bbdb-file’: 4f. is read.
     Note that this can be called more than once if the BBDB is reverted.

 -- Hook: bbdb -after-save-hook

     Hook run after saving *note ‘bbdb-file’: 4f.

 -- Hook: bbdb -before-save-hook

     Hook run before saving *note ‘bbdb-file’: 4f.

 -- Hook: bbdb -change-hook

     *Hook run each time a BBDB record is changed.
     Run with one argument, the record.  This is called before the database
     is modified.  If a new bbdb record is created, *note ‘bbdb-create-hook’: 60. is called
     first, followed by a call of this hook.

 -- Hook: bbdb -complete-mail-hook

     List of functions called after a sucessful completion.

 -- Hook: bbdb -create-hook

     *Hook run each time a new BBDB record is created.
     Run with one argument, the new record.  This is called before the record is
     added to the database, followed by a call of *note ‘bbdb-change-hook’: b5.

     If a record has been created by analyzing a mail message, hook functions
     can use the variable *note ‘bbdb-update-records-address’: c9. to determine the header
     and class of the mail address according to *note ‘bbdb-message-headers’: cf.

 -- Hook: bbdb -display-hook

     Hook run after the *BBDB* is filled in.

 -- Hook: bbdb -initialize-hook

     Normal hook run after the BBDB initialization function *note ‘bbdb-initialize’: 7e.

 -- Hook: bbdb -mail-abbrev-expand-hook

     Function (not hook) run each time an alias is expanded.
     The function is called with two args the alias and the list
     of corresponding mail addresses.

 -- Hook: bbdb -mode-hook

     Normal hook run when the *BBDB* buffer is created.

 -- Hook: bbdb -notice-mail-hook

     Hook run each time a mail address of a record is "noticed" in a message.
     This means that the mail address in a message belongs to an existing BBDB record
     or to a record BBDB has created for the mail address.

     Run with one argument, the record.  It is up to the hook function
     to determine which MUA is used and to act appropriately.
     Hook functions can use the variable *note ‘bbdb-update-records-address’: c9.
     to determine the header and class of the mail address according
     to *note ‘bbdb-message-headers’: cf.  See *note ‘bbdb-auto-notes’: c7. for how to annotate records
     using *note ‘bbdb-update-records-address’: c9. and the headers of a mail message.

     If a message contains multiple mail addresses belonging to one BBDB record,
     this hook is run for each mail address.  Use *note ‘bbdb-notice-record-hook’: 12f.
     if you want to notice each record only once per message.

 -- Hook: bbdb -notice-record-hook

     Hook run each time a BBDB record is "noticed" in a message.
     This means that one of the mail addresses in a message belongs to an existing
     record or it is a record BBDB has created for the mail address.  If a message
     contains multiple mail addresses belonging to one BBDB record, this hook
     is nonetheless run only once.  Use *note ‘bbdb-notice-mail-hook’: cd. if you want to run
     a hook function for each mail address in a message.

     Hook is run with one argument, the record.


File: index.info,  Node: Lisp library bbdb-anniv,  Next: Lisp library bbdb-com,  Prev: Lisp library bbdb,  Up: Top

11 Lisp library (bbdb-anniv)
****************************

* Menu:

* Functions: Functions<2>. 
* Variables: Variables<2>. 


File: index.info,  Node: Functions<2>,  Next: Variables<2>,  Up: Lisp library bbdb-anniv

11.1 Functions
==============

 -- Function: bbdb -anniv-diary-entries

     Add anniversaries from BBDB records to ‘`diary-list-entries'’.
     This obeys ‘`calendar-date-style'’ via ‘`diary-date-forms'’.
     To enable this feature, put the following into your .emacs:

      \(add-hook ’diary-list-entries-hook ’bbdb-anniv-diary-entries)


File: index.info,  Node: Variables<2>,  Prev: Functions<2>,  Up: Lisp library bbdb-anniv

11.2 Variables
==============

 -- Variable: bbdb -anniv-alist

     Alist of rules for formatting anniversaries in the diary buffer.
     Each element is of the form (LABEL . FORM).
     LABEL is the xfield where this type of anniversaries is stored.
     FORM is a format string with the following substitutions:
       %n  name of the record
       %d  number of years
       %s  ordinal suffix (st, nd, rd, th) for the year.
       %t  the optional text following the date string in field LABEL.
     If FORM is nil, use the text following the date string in field LABEL
     as format string.


File: index.info,  Node: Lisp library bbdb-com,  Next: Lisp library bbdb-gnus,  Prev: Lisp library bbdb-anniv,  Up: Top

12 Lisp library (bbdb-com)
**************************

* Menu:

* Commands:: 
* Functions: Functions<3>. 


File: index.info,  Node: Commands,  Next: Functions<3>,  Up: Lisp library bbdb-com

12.1 Commands
=============

 -- Command: *
 -- Command: M -x bbdb-do-all-records

     Command prefix for operating on all records currently displayed.
     With prefix ARG a positive number, operate on all records.
     With prefix ARG a negative number, operate on current record only.
     This only works for certain commands.


File: index.info,  Node: Functions<3>,  Prev: Commands,  Up: Lisp library bbdb-com

12.2 Functions
==============

 -- Function: bbdb -add-mail-alias records &optional alias delete

     Add ALIAS to RECORDS.
     If prefix DELETE is non-nil, remove ALIAS from RECORDS.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.
     Arg ALIAS is ignored if list RECORDS contains more than one record.
     Instead read ALIAS interactively for each record in RECORDS.
     If the function ‘`bbdb-init-mail-alias'’ is defined, it is called with
     one arg RECORD to define the default value for ALIAS of RECORD.

 -- Function: bbdb -append-display &optional arg

     Toggle appending next searched records in the *BBDB* buffer.
     With prefix ARG \[universal-argument] always append.
     With ARG a positive number append for that many times.
     With ARG a negative number do not append.

 -- Function: bbdb -append-display-p

     Return variable ‘`bbdb-append-display'’ and reset.

 -- Function: bbdb -browse-url records &optional which

     Brwose URLs stored in the ‘`url'’ field of RECORDS.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.
     Prefix WHICH specifies which URL in field ‘`url'’ is used (starting from 0).
     Default is the first URL.

 -- Function: bbdb -complete-mail &optional beg cycle-completion-buffer

     In a mail buffer, complete the user name or mail before point.
     Completion happens up to the preceeding colon, comma, or BEG.
     Return non-nil if there is a valid completion, else return nil.

     Completion behaviour obeys *note ‘bbdb-completion-list’: 79. (see there).
     If what has been typed matches a unique BBDB record, insert an address
     formatted by *note ‘bbdb-dwim-mail’: 13d. (see there).  Also, display this record
     if *note ‘bbdb-completion-display-record’: dc. is non-nil,
     If what has been typed is a valid completion but does not match
     a unique record, display a list of completions.
     If the completion is done and *note ‘bbdb-complete-mail-allow-cycling’: db. is t
     then cycle through the mails for the matching record.  If BBDB
     would format a given address different from what we have in the mail buffer,
     the first round of cycling reformats the address accordingly, then we cycle
     through the mails for the matching record.
     With prefix CYCLE-COMPLETION-BUFFER non-nil, display a list of all mails
     available for cycling.

     Set the variable ‘`bbdb-complete-mail'’ non-nil for enabling this feature
     as part of the MUA insinuation.

 -- Function: bbdb -complete-mail-cleanup mail beg

     Clean up after inserting MAIL at position BEG.
     If we are past ‘`fill-column'’, wrap at the previous comma.

 -- Function: bbdb -completing-read-mails prompt &optional init

     Like ‘`read-string'’, but allows *note ‘bbdb-complete-mail’: da. style completion.

 -- Function: bbdb -completing-read-record prompt &optional omit-records

     Prompt for and return a single record from the bbdb;
     completion is done according to *note ‘bbdb-completion-list’: 79.  If the user
     just hits return, nil is returned. Otherwise, a valid response is forced.
     If OMIT-RECORDS is non-nil it should be a list of records to dis-allow
     completion with.

 -- Function: bbdb -completing-read-records prompt &optional
          omit-records

     Read and return list of records from the bbdb.
     Completion is done according to *note ‘bbdb-completion-list’: 79.  If the user
     just hits return, nil is returned.  Otherwise, a valid response is forced.

 -- Function: bbdb -completion-predicate key records

     For use as the third argument to ‘`completing-read'’.
     Obey *note ‘bbdb-completion-list’: 79.

 -- Function: bbdb -compose-mail &rest args

     Start composing a mail message to send.
     Use *note ‘bbdb-mail-user-agent’: fc. or (if nil) use ‘`mail-user-agent'’.
     ARGS are passed to ‘`compose-mail'’.

 -- Function: bbdb -copy-fields-as-kill records field &optional num

     For RECORDS copy values of FIELD at point to kill ring.
     If FIELD is an address or phone with a label, copy only field values
     with the same label.  With numeric prefix NUM, if the value of FIELD
     is a list, copy only the NUMth list element.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.

 -- Function: bbdb -copy-records-as-kill records

     Copy RECORDS to kill ring.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.

 -- Function: bbdb -create record

     Add a new RECORD to BBDB.
     When called interactively read all relevant info.
     Do not call this from a program; call ‘`bbdb-create-internal'’ instead.

 -- Function: bbdb -creation-newer date &optional layout

     Display records with creation-date newer than DATE.
     DATE must be in yyyy-mm-dd format.

 -- Function: bbdb -creation-no-change &optional layout

     Display records that have the same timestamp and creation-date.

 -- Function: bbdb -creation-older date &optional layout

     Display records with creation-date older than DATE.
     DATE must be in yyyy-mm-dd format.

 -- Function: bbdb -delete-field-or-record records field &optional
          noprompt

     For RECORDS delete FIELD.
     If FIELD is the ‘`name'’ field, delete RECORDS from datanbase.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110,
     and FIELD is the field point is on.
     If prefix NOPROMPT is non-nil, do not confirm deletion.

 -- Function: bbdb -delete-records records &optional noprompt

     Delete RECORDS.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.
     If prefix NOPROMPT is non-nil, do not confirm deletion.

 -- Function: bbdb -delete-redundant-mails records &optional query
          update

     Delete redundant or duplicate mails from RECORDS.
     For example, "foo@bar.baz.com" is redundant w.r.t. "foo@baz.com".
     Duplicates may (but should not) occur if we feed BBDB automatically.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.
     If QUERY is non-nil (as in interactive calls, unless we use a prefix arg)
     query before deleting the redundant mail addresses.
     If UPDATE is non-nil (as in interactive calls) update the database.
     Otherwise, this is the caller’s responsiblity.

     Noninteractively, this may be used as an element of *note ‘bbdb-notice-record-hook’: 12f.
     or *note ‘bbdb-change-hook’: b5.  However, see also *note ‘bbdb-ignore-redundant-mails’: c1,
     which is probably more suited for your needs.

 -- Function: bbdb -dial-number phone-string

     Dial the number specified by PHONE-STRING.
     This uses the tel URI syntax passed to ‘`browse-url'’ to make the call.
     If *note ‘bbdb-dial-function’: e4. is non-nil then that is called to make the phone call.

 -- Function: bbdb -dial phone force-area-code

     Dial the number at point.
     If the point is at the beginning of a record, dial the first phone number.
     Use rules from *note ‘bbdb-dial-local-prefix-alist’: e7. unless prefix FORCE-AREA-CODE
     is non-nil.  Do not dial the extension.

 -- Function: bbdb -display-all-records &optional layout

     Show all records.
     If invoked in a *BBDB* buffer point stays on the currently visible record.
     Inverse of *note ‘bbdb-display-current-record’: 14f.

 -- Function: bbdb -display-current-record &optional layout

     Narrow to current record.  Inverse of *note ‘bbdb-display-all-records’: 14e.

 -- Function: bbdb -display-records-completely records

     Display RECORDS using layout ‘`full-multi-line'’ (i.e., display all fields).
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.

 -- Function: bbdb -display-records-with-layout records layout

     Display RECORDS using LAYOUT.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.

 -- Function: bbdb -do-all-records &optional arg

     Command prefix for operating on all records currently displayed.
     With prefix ARG a positive number, operate on all records.
     With prefix ARG a negative number, operate on current record only.
     This only works for certain commands.

 -- Function: bbdb -do-records &optional full

     Return list of records to operate on.
     Normally this list includes only the current record.
     It includes all currently displayed records if the command prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records] is used.
     If FULL is non-nil, the list of records includes display information.

 -- Function: bbdb -dwim-mail record &optional mail

     Return a string to use as the mail address of RECORD.
     The name in the mail address is formatted obeying *note ‘bbdb-mail-name-format’: fa.
     and *note ‘bbdb-mail-name’: fb.  However, if both the first name and last name
     are constituents of the address as in John.Doe@Some.Host,
     and *note ‘bbdb-mail-avoid-redundancy’: f9. is non-nil, then the address is used as is
     and *note ‘bbdb-mail-name-format’: fa. and *note ‘bbdb-mail-name’: fb. are ignored.
     If *note ‘bbdb-mail-avoid-redundancy’: f9. is ’mail-only the name is never included.
     MAIL may be a mail address to be used for RECORD.
     If MAIL is an integer, use the MAILth mail address of RECORD.
     If MAIL is nil use the first mail address of RECORD.

 -- Function: bbdb -edit-address-default address

     Function to use for address editing.
     The sub-fields and the prompts used are:
     Street, line n:  (nth n street)
     City:            city
     State:           state
     Postcode:        postcode
     Country:         country

 -- Function: bbdb -edit-address-street streets

     Edit list STREETS.

 -- Function: bbdb -edit-field record field &optional value flag

     Edit the contents of FIELD of RECORD.
     If point is in the middle of a multi-line field (e.g., address),
     then the entire field is edited, not just the current line.
     For editing phone numbers or addresses, VALUE must be the phone number
     or address that gets edited. An error is thrown when attempting to edit
     a phone number or address with VALUE being nil.

     - The value of an xfield is a string.  With prefix FLAG the value may be
       any lisp object.

 -- Function: bbdb -fix-records records

     Fix broken RECORDS.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.

 -- Function: bbdb -get-mail-aliases

     Return a list of mail aliases used in the BBDB.

 -- Function: bbdb -get-records prompt

     If inside the *BBDB* buffer get the current records.
     In other buffers ask the user.

 -- Function: bbdb -grab-url record url

     Grab URL and store it in RECORD.

 -- Function: bbdb -ident-point &optional point

     Return identifier (RECNUM FIELD NUM) for position POINT.
     If POINT is nil use current value of point.
     RECNUM is the number of the record (starting from zero).
     FIELD is the field type.
     If FIELD’s value is a list, NUM is the position of the subfield within FIELD.
     If any of these terms is not defined at POINT, the respective value is nil.

 -- Function: bbdb -insert-field record field value

     For RECORD, add a new FIELD with value VALUE.
     Interactively, read FIELD and VALUE; RECORD is the current record.
     A non-nil prefix arg is passed on to *note ‘bbdb-read-field’: 15a. as FLAG (see there).

 -- Function: bbdb -list-transpose list i j

     For LIST transpose elements I and J destructively.
     I and J start with zero.  Return the modified LIST.

 -- Function: bbdb -mail-address records &optional n kill-ring-save
          verbose

     Return mail addresses of RECORDS as a string.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.
     By default, the first mail addresses of RECORDS are used.
     If prefix N is a number, use Nth mail address of RECORDS (starting from 1).
     If prefix N is C-u (t noninteractively) use all mail addresses of RECORDS.
     If KILL-RING-SAVE is non-nil (as in interactive calls), copy mail addresses
     to kill ring.  If VERBOSE is non-nil (as in interactive calls) be verbose.

 -- Function: bbdb -mail-aliases &optional force-rebuilt noisy

     Define mail aliases for the records in the database.
     Define a mail alias for every record that has a ‘`mail-alias'’ field
     which is the contents of that field.
     If there are multiple comma-separated words in the ‘`mail-alias'’ field,
     then all of those words will be defined as aliases for that person.

     If multiple records in the database have the same mail alias,
     then that alias expands to a comma-separated list of the mail addresses
     of all of these people.
     Add this command to ‘`mail-setup-hook'’.

     Mail aliases are (re)built only if *note ‘bbdb-mail-aliases-need-rebuilt’: f8. is non-nil
     because the database was newly loaded or it has been edited.
     Rebuilding the aliases is enforced if prefix FORCE-REBUILT is t.

 -- Function: bbdb -mail records &optional subject n verbose

     Compose a mail message to RECORDS (optional: using SUBJECT).
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.
     By default, the first mail addresses of RECORDS are used.
     If prefix N is a number, use Nth mail address of RECORDS (starting from 1).
     If prefix N is C-u (t noninteractively) use all mail addresses of RECORDS.
     If VERBOSE is non-nil (as in interactive calls) be verbose.

 -- Function: bbdb -mail-yank

     CC the people displayed in the *BBDB* buffer on this mail message.
     The primary mail of each of the records currently listed in the
     *BBDB* buffer will be appended to the CC: field of the current buffer.

 -- Function: bbdb -merge-records old-record new-record

     Merge OLD-RECORD into NEW-RECORD, return NEW-RECORD.
     This copies all the data in OLD-RECORD into NEW-RECORD.  Then OLD-RECORD
     is deleted.  If both records have names ask which to use.
     Affixes, organizations, phone numbers, addresses, and mail addresses
     are simply concatenated.

     Interactively, OLD-RECORD is the current record.  NEW-RECORD is prompted for.
     With prefix arg NEW-RECORD defaults to the first record with the same name.

 -- Function: bbdb -message-search name mail

     Return list of BBDB records matching NAME and/or MAIL.
     First try to find a record matching both NAME and MAIL.
     If this fails try to find a record matching MAIL.
     If this fails try to find a record matching NAME.
     NAME may match FIRST_LAST, LAST_FIRST or AKA.

     This function performs a fast search using *note ‘bbdb-hashtable’: 78.
     NAME and MAIL must be strings or nil.
     See ‘`bbdb-search'’ for searching records with regexps.

 -- Function: bbdb -omit-record n

     Remove current record from the display without deleting it from BBDB.
     With prefix N, omit the next N records.  If negative, omit backwards.

 -- Function: bbdb -parse-phone string &optional style

     Parse a phone number from STRING and return a list of integers the form
     \(area-code exchange number extension).
     This is both lenient and strict in what it will parse - whitespace may
     appear (or not) between any of the groups of digits, parentheses around the
     area code are optional, as is a dash between the exchange and number, and
     a ’1’ preceeding the area code; but there must be three digits in the area
     code and exchange, and four in the number (if they are present).
     All of these are unambigously parsable:

       ( 415 ) 555 - 1212 x123   -> (415 555 1212 123)
       (415)555-1212 123         -> (415 555 1212 123)
       (1-415) 555-1212 123      -> (415 555 1212 123)
       1 (415)-555-1212 123      -> (415 555 1212 123)
       555-1212 123              -> (0 555 1212 123)
       555 1212                  -> (0 555 1212 0)
       415 555 1212              -> (415 555 1212 0)
       1 415 555 1212            -> (415 555 1212 0)
       5551212                   -> (0 555 1212 0)
       4155551212                -> (415 555 1212 0)
       4155551212123             -> (415 555 1212 123)
       5551212x123               -> (0 555 1212 123)
       1234                      -> (0 0 0 1234)

     Note that "4151212123" is ambiguous; it could be interpreted either as
     "(415) 121-2123" or as "415-1212 x123".

     Return a list containing four numbers or one string.

 -- Function: bbdb -prefix-message

     Display a message about selected BBDB prefix commands.

 -- Function: bbdb -read-field record field &optional flag

     For RECORD read new FIELD interactively.
     - The phone number style is controlled via *note ‘bbdb-phone-style’: 118.
       A prefix FLAG inverts the style,
     - If a mail address lacks a domain, append *note ‘bbdb-default-domain’: e1.
       if this variable non-nil.  With prefix FLAG do not alter the mail address.
     - The value of an xfield is a string.  With prefix FLAG the value may be
       any lisp object.

 -- Function: bbdb -read-organization &optional init

     Read organization.

 -- Function: bbdb -read-record &optional first-and-last

     Read and return a new BBDB record.
     Does not insert it into the database or update the hashtables,
     but does ensure that there will not be name collisions.

 -- Function: bbdb -read-xfield field &optional init sexp

     Read xfield FIELD with optional INIT.
     This calls bbdb-read-xfield-FIELD if it exists.

 -- Function: bbdb -record-edit-address address &optional label
          ignore-country

     Edit ADDRESS.
     If LABEL is nil, edit the label sub-field of the address as well.
     If the country field of ADDRESS is nonempty and IGNORE-COUNTRY is nil,
     use the rule from *note ‘bbdb-address-format-list’: 4c. matching this country.
     Otherwise, use the default rule according to *note ‘bbdb-address-format-list’: 4c.

 -- Function: bbdb -record-edit-phone phones phone

     For list PHONES edit PHONE number.

 -- Function: bbdb -record-list records &optional full

     Ensure that RECORDS is a list of records.
     If RECORDS is a single record turn it into a list.
     If FULL is non-nil, assume that RECORDS include display information.

 -- Function: bbdb regexp &optional layout

     Display all records in the BBDB matching REGEXP
     in either the name(s), organization, address, phone, mail, or xfields.

 -- Function: bbdb -search-address regexp &optional layout

     Display all records in the BBDB matching REGEXP in the address fields.

 -- Function: bbdb -search-changed &optional layout

     Display records which have been changed since BBDB was last saved.

 -- Function: bbdb -search-duplicates &optional fields

     Search all records that have duplicate entries for FIELDS.
     The list FIELDS may contain the symbols ‘`name'’, ‘`mail'’, and ‘`aka'’.
     If FIELDS is nil use all these fields.  With prefix, query for FIELDS.
     The search results are displayed in the BBDB buffer.

 -- Function: bbdb -search-invert &optional arg

     Toggle inversion of the next search command.
     With prefix ARG a positive number, invert next search.
     With prefix ARG a negative number, do not invert next search.

 -- Function: bbdb -search-invert-p

     Return variable ‘`bbdb-search-invert'’ and set it to nil.
     To set it again, use command *note ‘bbdb-search-invert’: 10f.

 -- Function: bbdb -search-mail regexp &optional layout

     Display all records in the BBDB matching REGEXP in the mail address.

 -- Function: bbdb -search-name regexp &optional layout

     Display all records in the BBDB matching REGEXP in the name
     \(or ‘`alternate’’ names\).

 -- Function: bbdb -search-organization regexp &optional layout

     Display all records in the BBDB matching REGEXP in the organization field.

 -- Function: bbdb -search-phone regexp &optional layout

     Display all records in the BBDB matching REGEXP in the phones field.

 -- Function: bbdb -search-prog function &optional layout

     Search records using FUNCTION.
     FUNCTION is called with one argument, the record, and should return
     the record to be displayed or nil otherwise.

 -- Function: bbdb -search-read &optional field

     Read regexp to search FIELD values of records.

 -- Function: bbdb -search-xfields field regexp &optional layout

     Display all BBDB records for which xfield FIELD matches REGEXP.

 -- Function: bbdb -sort-addresses records &optional update

     Sort the addresses in RECORDS according to the label.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.
     If UPDATE is non-nil (as in interactive calls) update the database.
     Otherwise, this is the caller’s responsiblity (for example, when used
     in *note ‘bbdb-change-hook’: b5.).

 -- Function: bbdb -sort-phones records &optional update

     Sort the phones in RECORDS according to the label.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.
     If UPDATE is non-nil (as in interactive calls) update the database.
     Otherwise, this is the caller’s responsiblity (for example, when used
     in *note ‘bbdb-change-hook’: b5.).

 -- Function: bbdb -sort-xfields records &optional update

     Sort the xfields in RECORDS according to *note ‘bbdb-xfields-sort-order’: 124.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.
     If UPDATE is non-nil (as in interactive calls) update the database.
     Otherwise, this is the caller’s responsiblity (for example, when used
     in *note ‘bbdb-change-hook’: b5.).

 -- Function: bbdb -timestamp-newer date &optional layout

     Display records with timestamp newer than DATE.
     DATE must be in yyyy-mm-dd format.

 -- Function: bbdb -timestamp-older date &optional layout

     Display records with timestamp older than DATE.
     DATE must be in yyyy-mm-dd format.

 -- Function: bbdb -toggle-records-layout records &optional arg

     Toggle layout of RECORDS (elided or expanded).
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.
     With prefix ARG 0, RECORDS are displayed elided.
     With any other non-nil ARG, RECORDS are displayed expanded.

 -- Function: bbdb -touch-records records

     Touch RECORDS by calling *note ‘bbdb-change-hook’: b5. unconditionally.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.

 -- Function: bbdb -transpose-fields arg

     Transpose previous and current field of a BBDB record.
     With numeric prefix ARG, take previous field and move it past ARG fields.
     With region active or ARG 0, transpose field point is in and field mark is in.

     Both fields must be in the same record, and must be of the same basic type
     \(that is, you can use this command to change the order in which phone numbers
     or email addresses are listed, but you cannot use it to make an address appear
     before a phone number; the order of field types is fixed).

     If the current field is the name field, transpose first and last name,
     irrespective of the value of ARG.


File: index.info,  Node: Lisp library bbdb-gnus,  Next: Lisp library bbdb-ispell,  Prev: Lisp library bbdb-com,  Up: Top

13 Lisp library (bbdb-gnus)
***************************

* Menu:

* Functions: Functions<4>. 
* Variables: Variables<3>. 


File: index.info,  Node: Functions<4>,  Next: Variables<3>,  Up: Lisp library bbdb-gnus

13.1 Functions
==============

 -- Function: bbdb -insinuate-gnus

     Hook BBDB into Gnus.
     Do not call this in your init file.  Use *note ‘bbdb-initialize’: 7e.

 -- Function: bbdb/gnus -nnimap-folder-list-from-bbdb

     Return a list of \( "From" mail-regexp imap-folder-name\) tuples
     based on the contents of the bbdb.

     The folder-name is the value of the ’imap attribute of the BBDB record;
     the mail-regexp consists of all the mail addresses for the BBDB record
     concatenated with OR.  Records without an ’imap attribute are ignored.

     Here  is an example of a relevant BBDB record:

     Uwe Brauer
                mail: oub@mat.ucm.es
                imap: testimap

     This function uses ‘`regexp-opt'’ to generate the mail-regexp which automatically
     ‘`regexp-quote'’s its arguments.  Please note: in order that this will work
     with the ‘`nnimap-split-fancy'’ method you have to use macros, that is your setting
     will look like:

     \(setq nnimap-split-rule  ’nnimap-split-fancy
            nnimap-split-inbox "INBOX"
            nnimap-split-fancy
            ‘\(| ,@\(bbdb/gnus-nnimap-folder-list-from-bbdb\)
                 ... \)\)

     Note that `\( is the backquote, NOT the quote ’\(.

 -- Function: bbdb/gnus -score group

     This returns a score alist for Gnus.  A score pair will be made for
     every member of the mail field in records which also have a gnus-score
     field.  This allows the BBDB to serve as a supplemental global score
     file, with the advantage that it can keep up with multiple and changing
     addresses better than the traditionally static global scorefile.

 -- Function: bbdb/gnus -score-invalidate-alist record

     This function is called through *note ‘bbdb-after-change-hook’: 126,
     and sets *note ‘bbdb/gnus-score-rebuild-alist’: 184. to t if the changed
     record contains a gnus-score field.

 -- Function: bbdb/gnus -score-as-text group

     Returns a SCORE file format string built from the BBDB.

 -- Function: bbdb/gnus -split-method

     This function expects to be called in a buffer which contains a mail
     message to be spooled, and the buffer should be narrowed to the message
     headers.  It returns a list of groups to which the message should be
     spooled, using the addresses in the headers and information from BBDB.

 -- Function: bbdb/gnus -split-to-group address &optional source

     This function is called from *note ‘bbdb/gnus-split-method’: 186. in order to
     determine the group and spooling priority for a single address.


File: index.info,  Node: Variables<3>,  Prev: Functions<4>,  Up: Lisp library bbdb-gnus

13.2 Variables
==============

 -- Variable: bbdb/gnus -score-field

     This variable contains the name of the BBDB field which should be
     checked for a score to add to the mail addresses in the same record.

 -- Variable: bbdb/gnus -score-default

     If this is set, then every mail address in the BBDB that does not have
     an associated score field will be assigned this score.  A value of nil
     implies a default score of zero.

 -- Variable: bbdb/gnus -score-default-internal

     Internal variable for detecting changes to
     *note ‘bbdb/gnus-score-default’: 18a.  You should not set this variable directly -
     set *note ‘bbdb/gnus-score-default’: 18a. instead.

 -- Variable: bbdb/gnus -score-alist

     The text version of the scoring structure returned by
     bbdb/gnus-score.  This is built automatically from the BBDB.

 -- Variable: bbdb/gnus -score-rebuild-alist

     Set to t to rebuild bbdb/gnus-score-alist on the next call to
     bbdb/gnus-score.  This will be set automatically if you change a BBDB
     record which contains a gnus-score field.

 -- Variable: bbdb/gnus -split-default-group

     If the BBDB does not indicate any group to spool a message to, it will
     be spooled to this group.  If *note ‘bbdb/gnus-split-crosspost-default’: 18e. is not
     nil, and if the BBDB did not indicate a specific group for one or more
     addresses, messages will be crossposted to this group in addition to any
     group(s) which the BBDB indicated.

 -- Variable: bbdb/gnus -split-myaddr-regexp

     This regular expression should match your address as found in the
     From header of your mail.

 -- Variable: bbdb/gnus -split-crosspost-default

     If this variable is not nil, then if the BBDB could not identify a
     group for every mail address, messages will be filed in
     *note ‘bbdb/gnus-split-default-group’: 18d. in addition to any group(s) which the BBDB
     identified.

 -- Variable: bbdb/gnus -split-nomatch-function

     This function will be called after searching the BBDB if no place to
     file the message could be found.  It should return a group name (or list
     of group names) – ‘`nnmail-split-fancy'’ as provided with Gnus is an
     excellent choice.

 -- Variable: bbdb/gnus -split-private-field

     This variable is used to determine the xfield to reference to find the
     associated group when saving private mail for a mail address known to
     the BBDB.  The value of the xfield should be the name of a mail group.

 -- Variable: bbdb/gnus -split-public-field

     This variable is used to determine the xfield to reference to find the
     associated group when saving non-private mail (received from a mailing
     list) for a mail address known to the BBDB.  The value of the xfield
     should be the name of a mail group, followed by a space, and a regular
     expression to match on the envelope sender to verify that this mail came
     from the list in question.


File: index.info,  Node: Lisp library bbdb-ispell,  Next: Lisp library bbdb-message,  Prev: Lisp library bbdb-gnus,  Up: Top

14 Lisp library (bbdb-ispell)
*****************************

* Menu:

* Functions: Functions<5>. 
* Variables: Variables<4>. 


File: index.info,  Node: Functions<5>,  Next: Variables<4>,  Up: Lisp library bbdb-ispell

14.1 Functions
==============

 -- Function: bbdb -ispell-export

     Export BBDB records to ispell personal dictionaries.

 -- Function: bbdb -ispell-collect-words field

     Parse BBDB FIELD and collect words in *note ‘bbdb-ispell-word-list’: 198.


File: index.info,  Node: Variables<4>,  Prev: Functions<5>,  Up: Lisp library bbdb-ispell

14.2 Variables
==============

 -- Variable: bbdb -ispell-dictionary-list

     List of ispell personal dictionaries.
     Allowed elements are as in the return value of ‘`ispell-valid-dictionary-list'’.

 -- Variable: bbdb -ispell-field-list

     List of fields of each BBDB record considered for the personal dictionary.

 -- Variable: bbdb -ispell-min-word-length

     Words with fewer characters are ignored.

 -- Variable: bbdb -ispell-ignore-re

     Words matching this regexp are ignored.

 -- Variable: bbdb -ispell-word-list

     List of words extracted from the BBDB records.


File: index.info,  Node: Lisp library bbdb-message,  Next: Lisp library bbdb-mhe,  Prev: Lisp library bbdb-ispell,  Up: Top

15 Lisp library (bbdb-message)
******************************

* Menu:

* Functions: Functions<6>. 


File: index.info,  Node: Functions<6>,  Up: Lisp library bbdb-message

15.1 Functions
==============

 -- Function: bbdb -insinuate-message

     Hook BBDB into Message Mode.
     Do not call this in your init file.  Use *note ‘bbdb-initialize’: 7e.


File: index.info,  Node: Lisp library bbdb-mhe,  Next: Lisp library bbdb-migrate,  Prev: Lisp library bbdb-message,  Up: Top

16 Lisp library (bbdb-mhe)
**************************

* Menu:

* Functions: Functions<7>. 


File: index.info,  Node: Functions<7>,  Up: Lisp library bbdb-mhe

16.1 Functions
==============

 -- Function: bbdb/mh -header header

     Find and return the value of HEADER in the current buffer.
     Returns the empty string if HEADER is not in the message.

 -- Function: bbdb -insinuate-mh

     Call this function to hook BBDB into MH-E.
     Do not call this in your init file.  Use *note ‘bbdb-initialize’: 7e.


File: index.info,  Node: Lisp library bbdb-migrate,  Next: Lisp library bbdb-mu4e,  Prev: Lisp library bbdb-mhe,  Up: Top

17 Lisp library (bbdb-migrate)
******************************

* Menu:

* Constants:: 
* Functions: Functions<8>. 


File: index.info,  Node: Constants,  Next: Functions<8>,  Up: Lisp library bbdb-migrate

17.1 Constants
==============

 -- Constant: bbdb -migration-spec

     The alist of (version . migration-spec-list).
     See *note ‘bbdb-migrate-record-lambda’: 1ab. for details.


File: index.info,  Node: Functions<8>,  Prev: Constants,  Up: Lisp library bbdb-migrate

17.2 Functions
==============

 -- Function: bbdb -migrate records old-format

     Migrate the BBDB from the version on disk to the current version
     \(in ‘`bbdb-file-format'’).

 -- Function: bbdb -migrate-record-lambda changes

     Return a function which will migrate a single record.
     CHANGES is a ‘`migration-spec-list'’ containing entries of the form

             (GET SET FUNCTION)

     where GET is the function to be used to retrieve the field to be
     modified, and SET is the function to be used to set the field to be
     modified.  FUNCTION will be applied to the result of GET, and its
     results will be saved with SET.

 -- Function: bbdb -migrate-versions-lambda v0

     Return the function to migrate from V0 to ‘`bbdb-file-format'’.

 -- Function: bbdb -migrate-versions-lambda v0

     Return the function to migrate from V0 to ‘`bbdb-file-format'’.

 -- Function: bbdb -migrate-postcodes-to-strings addresses

     Make all postcodes plain strings.
     This uses the code that used to be in ‘`bbdb-address-postcode'’.

 -- Function: bbdb -migrate-change-dates record

     Change date formats.
     Formats are changed in timestamp and creation-date fields from
     "dd mmm yy" to "yyyy-mm-dd".

 -- Function: bbdb -migrate-change-dates-change-field field

     Migrate the date field (the cdr of FIELD) from "dd mmm yy" to
     "yyyy-mm-dd".

 -- Function: bbdb -migrate-add-country-field addrl

     Add a country field to each address in the address list.

 -- Function: bbdb -migrate-streets-to-list addrl

     Convert the streets to a list.

 -- Function: bbdb -migrate-xfields-to-list xfields

     Migrate XFIELDS to list.

 -- Function: bbdb -migrate-organization-to-list organization

     Migrate ORGANIZATION to list.

 -- Function: bbdb -undocumented-variables &optional name-space message

     Return list of undocumented variables in NAME-SPACE.
     NAME-SPACE defaults to "bbdb-".  Use a prefix arg to specify NAME-SPACE
     interactively.  If MESSAGE is non-nil (as in interactive calls) display
     the list in the message area.

     This command may come handy to identify BBDB variables in your init file
     that are not used anymore by the current version of BBDB.  Yet this fails
     for outdated BBDB variables that are set via your personal ‘`custom-file'’.


File: index.info,  Node: Lisp library bbdb-mu4e,  Next: Lisp library bbdb-mua,  Prev: Lisp library bbdb-migrate,  Up: Top

18 Lisp library (bbdb-mu4e)
***************************

* Menu:

* Functions: Functions<9>. 


File: index.info,  Node: Functions<9>,  Up: Lisp library bbdb-mu4e

18.1 Functions
==============

 -- Function: bbdb -insinuate-mu4e

     Hook BBDB into mu4e.
     Do not call this in your init file.  Use *note ‘bbdb-initialize’: 7e.


File: index.info,  Node: Lisp library bbdb-mua,  Next: Lisp library bbdb-pgp,  Prev: Lisp library bbdb-mu4e,  Up: Top

19 Lisp library (bbdb-mua)
**************************

* Menu:

* Constants: Constants<2>. 
* Functions: Functions<10>. 


File: index.info,  Node: Constants<2>,  Next: Functions<10>,  Up: Lisp library bbdb-mua

19.1 Constants
==============

 -- Constant: bbdb -mua-mode-alist

     Alist of MUA modes supported by BBDB.
     Each element is of the form (MUA MODE MODE ...), where MODEs are used by MUA.


File: index.info,  Node: Functions<10>,  Prev: Constants<2>,  Up: Lisp library bbdb-mua

19.2 Functions
==============

 -- Function: bbdb -accept-message &optional invert

     For use with variable *note ‘bbdb-mua-update-interactive-p’: 10d. and friends.
     Return the value of variable *note ‘bbdb-update-records-p’: ce. for messages matching
     *note ‘bbdb-accept-message-alist’: bb.  If INVERT is non-nil, accept messages
     not matching *note ‘bbdb-ignore-message-alist’: bc.

 -- Function: bbdb -annotate-message address &optional update-p

     Fill the records for message ADDRESS with as much info as possible.
     If a record for ADDRESS does not yet exist, UPDATE-P controls whether
     a new record is created for ADDRESS.  UPDATE-P may take the values:
      update or nil  Update existing records, never create a new record.
      query          Query interactively whether to create a new record.
      create or t    Create a new record.
      a function     This functions will be called with no arguments.
                       It should return one of the above values.
     Return the records matching ADDRESS or nil.

 -- Function: bbdb -mua-annotate-field-interactive

     Interactive specification for *note ‘bbdb-mua-annotate-sender’: 1c3. and friends.

 -- Function: bbdb -annotate-record record annotation &optional field
          replace

     In RECORD add an ANNOTATION to field FIELD.
     FIELD defaults to *note ‘bbdb-annotate-field’: c4.
     If REPLACE is non-nil, ANNOTATION replaces the content of FIELD.
     If ANNOTATION is an empty string and REPLACE is non-nil, delete FIELD.

 -- Function: bbdb -mua-annotate-recipients annotation &optional field
          replace update-p

     Add ANNOTATION to field FIELD of the BBDB records of message recipients.
     FIELD defaults to *note ‘bbdb-annotate-field’: c4.
     If REPLACE is non-nil, ANNOTATION replaces the content of FIELD.
     UPDATE-P may take the same values as *note ‘bbdb-update-records-p’: ce.
     For interactive calls, use car of *note ‘bbdb-mua-update-interactive-p’: 10d.

 -- Function: bbdb -mua-annotate-sender annotation &optional field
          replace update-p

     Add ANNOTATION to field FIELD of the BBDB record(s) of message sender(s).
     FIELD defaults to *note ‘bbdb-annotate-field’: c4.
     If REPLACE is non-nil, ANNOTATION replaces the content of FIELD.
     UPDATE-P may take the same values as *note ‘bbdb-update-records-p’: ce.
     For interactive calls, use car of *note ‘bbdb-mua-update-interactive-p’: 10d.

 -- Function: bbdb -mua-edit-field &optional field update-p header-class

     Edit FIELD of the BBDB record(s) of message sender(s) or recipients.
     FIELD defaults to value of variable *note ‘bbdb-mua-edit-field’: 104.
     UPDATE-P may take the same values as *note ‘bbdb-update-records-p’: ce.
     For interactive calls, see function ‘`bbdb-mua-update-interactive-p'’.
     HEADER-CLASS is defined in *note ‘bbdb-message-headers’: cf.  If it is nil,
     use all classes in *note ‘bbdb-message-headers’: cf.

 -- Function: bbdb -mua-edit-field-interactive

     Interactive specification for command *note ‘bbdb-mua-edit-field’: 105. and friends.

 -- Function: bbdb -mua-edit-field-recipients &optional field update-p

     Edit FIELD of record corresponding to recipient of this message.
     FIELD defaults to value of variable *note ‘bbdb-mua-edit-field’: 104.
     UPDATE-P may take the same values as *note ‘bbdb-update-records-p’: ce.
     For interactive calls, see function ‘`bbdb-mua-update-interactive-p'’.

 -- Function: bbdb -mua-edit-field-sender &optional field update-p

     Edit FIELD of record corresponding to sender of this message.
     FIELD defaults to value of variable *note ‘bbdb-mua-edit-field’: 104.
     UPDATE-P may take the same values as *note ‘bbdb-update-records-p’: ce.
     For interactive calls, see function ‘`bbdb-mua-update-interactive-p'’.

 -- Function: bbdb -get-address-components &optional header-class
          ignore-address

     Extract mail addresses from a message.
     Return list with elements (NAME EMAIL HEADER HEADER-CLASS MUA).
     HEADER-CLASS is defined in *note ‘bbdb-message-headers’: cf.  If HEADER-CLASS is nil,
     use all classes in *note ‘bbdb-message-headers’: cf.
     If regexp IGNORE-ADDRESS matches NAME or EMAIL of an address, this address
     is ignored. If IGNORE-ADDRESS is nil, use value of *note ‘bbdb-user-mail-address-re’: cb.

 -- Function: bbdb -ignore-message &optional invert

     For use with variable *note ‘bbdb-mua-update-interactive-p’: 10d. and friends.
     Return the value of variable *note ‘bbdb-update-records-p’: ce. for messages not matching
     *note ‘bbdb-ignore-message-alist’: bc.  If INVERT is non-nil, accept messages
     matching *note ‘bbdb-accept-message-alist’: bb.

 -- Function: bbdb -message-header header

     For the current message return the value of HEADER.
     MIME encoded headers are decoded.  Return nil if HEADER does not exist.

 -- Function: bbdb -mua

     For the current message return the MUA.
     Return values include
       gnus      Newsreader Gnus
       rmail     Reading Mail in Emacs
       vm        Viewmail
       mh        Emacs interface to the MH mail system (aka MH-E)
       message   Mail and News composition mode that goes with Gnus
       mu4e      Mu4e
       wl        Wanderlust
       mail      Emacs Mail Mode.

 -- Function: bbdb -mua-auto-update &optional header-class update-p

     Update BBDB automatically based on incoming and outgoing messages.
     This looks into the headers of a message according to HEADER-CLASS.
     Then for the mail addresses found the corresponding BBDB records are updated.
     UPDATE-P determines whether only existing BBDB records are taken
     or whether also new records are created for these mail addresses.
     Return matching records.

     HEADER-CLASS is defined in *note ‘bbdb-message-headers’: cf.  If it is nil,
     use all classes in *note ‘bbdb-message-headers’: cf.
     UPDATE-P may take the same values as *note ‘bbdb-mua-auto-update-p’: 101.
     If UPDATE-P is nil, use *note ‘bbdb-mua-auto-update-p’: 101. (which see).

     If *note ‘bbdb-mua-pop-up’: 98. is non-nil, BBDB pops up the *BBDB* buffer
     along with the MUA window(s), displaying the matching records
     using *note ‘bbdb-pop-up-layout’: 11a.
     If this is nil, BBDB is updated silently.

     This function is intended for noninteractive use via appropriate MUA hooks.
     Call *note ‘bbdb-mua-auto-update-init’: 80. in your init file to put this function
     into the respective MUA hooks.
     See *note ‘bbdb-mua-display-records’: 1cb. and friends for interactive commands.

 -- Function: bbdb -auto-notes record

     Automatically annotate RECORD based on the headers of the current message.
     See the variables *note ‘bbdb-auto-notes-rules’: cc, *note ‘bbdb-auto-notes-ignore-messages’: c8.
     and *note ‘bbdb-auto-notes-ignore-headers’: c6.
     For use as an element of *note ‘bbdb-notice-record-hook’: 12f.

 -- Function: bbdb -mua-auto-update-init &rest muas

     For MUAS add *note ‘bbdb-mua-auto-update’: 102. to their presentation hook.
     If a MUA is not an element of MUAS, *note ‘bbdb-mua-auto-update’: 102. is removed
     from the respective presentation hook.

     Call this function in your init file to use the auto update feature with MUAS.
     This function is separate from the general function *note ‘bbdb-initialize’: 7e.
     as this allows one to initialize the auto update feature for some MUAs only,
     for example only for outgoing messages.

     See *note ‘bbdb-mua-auto-update’: 102. for details about the auto update feature.

 -- Function: bbdb -mua-update-interactive-p

     Interactive spec for arg UPDATE-P of *note ‘bbdb-mua-display-records’: 1cb. and friends.
     If these commands are called without a prefix, the value of their arg
     UPDATE-P is the car of the variable *note ‘bbdb-mua-update-interactive-p’: 10d.
     Called with a prefix, the value of UPDATE-P is the cdr of this variable.

 -- Function: bbdb -mua-window-p

     Return lambda function matching the MUA window.
     This return value can be used as arg HORIZ-P of *note ‘bbdb-display-records’: 6e.

 -- Function: bbdb -mua-display-all-recipients &optional update-p

     Display BBDB records for all recipients of this message.
     UPDATE-P may take the same values as *note ‘bbdb-update-records-p’: ce.
     For interactive calls, see function ‘`bbdb-mua-update-interactive-p'’.

 -- Function: bbdb -mua-display-all-records &optional update-p

     Display the BBDB record(s) for all addresses in this message.
     UPDATE-P may take the same values as *note ‘bbdb-update-records-p’: ce.
     For interactive calls, see function ‘`bbdb-mua-update-interactive-p'’.

 -- Function: bbdb -mua-display-records &optional header-class update-p
          all

     Display the BBDB record(s) for the addresses in this message.
     This looks into the headers of a message according to HEADER-CLASS.
     Then for the mail addresses found the corresponding BBDB records are displayed.
     UPDATE-P determines whether only existing BBDB records are displayed
     or whether also new records are created for these mail addresses.

     HEADER-CLASS is defined in *note ‘bbdb-message-headers’: cf.  If it is nil,
     use all classes in *note ‘bbdb-message-headers’: cf.
     UPDATE-P may take the same values as *note ‘bbdb-update-records-p’: ce.
     For interactive calls, see function ‘`bbdb-mua-update-interactive-p'’.
     If ALL is non-nil, bind *note ‘bbdb-message-all-addresses’: fd. to ALL.

 -- Function: bbdb -mua-display-recipients &optional update-p

     Display the BBDB record(s) for the recipients of this message.
     UPDATE-P may take the same values as *note ‘bbdb-update-records-p’: ce.
     For interactive calls, see function ‘`bbdb-mua-update-interactive-p'’.

 -- Function: bbdb -mua-display-sender &optional update-p

     Display the BBDB record(s) for the sender of this message.
     UPDATE-P may take the same values as *note ‘bbdb-update-records-p’: ce.
     For interactive calls, see function ‘`bbdb-mua-update-interactive-p'’.

 -- Function: bbdb -mua-summary-mark address

     In the MUA Summary buffer mark messages matching a BBDB record.
     ADDRESS typically refers to the value of the From header of a message.
     If ADDRESS matches a record in BBDB return a mark, " " otherwise.
     The mark itself is the value of the xfield *note ‘bbdb-mua-summary-mark-field’: 109.
     if this xfield is in the poster’s record, and *note ‘bbdb-mua-summary-mark’: 107. otherwise.

 -- Function: bbdb -mua-summary-unify address

     Unify mail ADDRESS displayed for a message in the MUA Summary buffer.
     Typically ADDRESS refers to the value of the From header of a message.
     If ADDRESS matches a record in BBDB display a unified name instead of ADDRESS
     in the MUA Summary buffer.

     Unification uses *note ‘bbdb-mua-summary-unification-list’: 10b. (see there).
     The first match in this list becomes the text string displayed
     for a message in the MUA Summary buffer instead of ADDRESS.
     If variable *note ‘bbdb-mua-summary-mark’: 107. is non-nil use it to precede known addresses.
     Return the unified mail address.

     Currently this works with Gnus and VM.  It requires the BBDB insinuation
     of these MUAs.  Also, the MUA Summary format string must use
     *note ‘bbdb-mua-summary-unify-format-letter’: 10c. (see there).

 -- Function: bbdb -mua-update-records &optional header-class update-p
          sort

     Wrapper for *note ‘bbdb-update-records’: fe.
     HEADER-CLASS is defined in *note ‘bbdb-message-headers’: cf.  If it is nil,
     use all classes in *note ‘bbdb-message-headers’: cf.
     UPDATE-P is defined in *note ‘bbdb-update-records’: fe.
     If SORT is non-nil, sort records according to ‘`bbdb-record-lessp'’.

 -- Function: bbdb -mua-wrapper &rest body

     Perform BODY in a MUA buffer.

 -- Function: bbdb -query-create

     Interactive query used by *note ‘bbdb-update-records’: fe.
     Return t if the record should be created or ‘`nil'’ otherwise.
     Honor previous answers such as ‘`!'’.

 -- Function: bbdb -select-message

     For use with variable *note ‘bbdb-mua-update-interactive-p’: 10d. and friends.
     Return the value of variable *note ‘bbdb-update-records-p’: ce. for messages both matching
     *note ‘bbdb-accept-message-alist’: bb. and not matching *note ‘bbdb-ignore-message-alist’: bc.

 -- Function: bbdb -update-records address-list &optional update-p sort

     Return the list of BBDB records matching ADDRESS-LIST.
     ADDRESS-LIST is a list of mail addresses.  (It can be extracted from
     a mail message using *note ‘bbdb-get-address-components’: 1c8.)
     UPDATE-P may take the following values:
      search       Search for existing records matching ADDRESS.
      update       Search for existing records matching ADDRESS;
                     update name and mail field if necessary.
      query        Search for existing records matching ADDRESS;
                     query for creation of a new record if the record does not exist.
      create or t  Search for existing records matching ADDRESS;
                     create a new record if it does not yet exist.
      nil          Do nothing.
      a function   This functions will be called with no arguments.
                     It should return one of the above values.

     If SORT is non-nil, sort records according to ‘`bbdb-record-lessp'’.
     Ottherwise, the records are ordered according to ADDRESS-LIST.

     Usually this function is called by the wrapper *note ‘bbdb-mua-update-records’: 1d1.


File: index.info,  Node: Lisp library bbdb-pgp,  Next: Lisp library bbdb-print,  Prev: Lisp library bbdb-mua,  Up: Top

20 Lisp library (bbdb-pgp)
**************************

* Menu:

* Functions: Functions<11>. 
* Variables: Variables<5>. 


File: index.info,  Node: Functions<11>,  Next: Variables<5>,  Up: Lisp library bbdb-pgp

20.1 Functions
==============

 -- Function: bbdb -pgp

     Add PGP MML tags to a message according to the recipients’ BBDB records.
     For all message recipients in *note ‘bbdb-pgp-headers’: 1d6, this grabs the action
     in *note ‘bbdb-pgp-field’: 1d7. of their BBDB records.  If this proposes multiple actions,
     perform the action which appears first in *note ‘bbdb-pgp-ranked-actions’: 1d8.
     If this proposes no action at all, use *note ‘bbdb-pgp-default’: 1d9.
     The variable *note ‘bbdb-pgp-method’: 1da. defines the method which is actually used
     for signing and encrypting.

     This command works with both ‘`mail-mode'’ and ‘`message-mode'’ to send
     signed or encrypted mail.

     To run this command automatically when sending a message,
     use *note ‘bbdb-initialize’: 7e. with arg ‘`pgp'’ to add this function
     to ‘`message-send-hook'’ and ‘`mail-send-hook'’.
     Yet see info node *note (message)Signing and encryption:: why you
     might not want to rely for encryption on a hook function
     which runs just before the message is sent, that is, you might want
     to call the command *note ‘bbdb-pgp’: 7f. manually, then call ‘`mml-preview'’.

 -- Function: bbdb -read-xfield-pgp-mail &optional init

     Set *note ‘bbdb-pgp-field’: 1d7, requiring match with *note ‘bbdb-pgp-ranked-actions’: 1d8.


File: index.info,  Node: Variables<5>,  Prev: Functions<11>,  Up: Lisp library bbdb-pgp

20.2 Variables
==============

 -- Variable: bbdb -pgp-default

     Default action when sending a message and the recipients are not in BBDB.
     This should be one of the following symbols:
       nil             Do nothing
       sign            Sign the message
       sign-query      Query whether to sign the message
       encrypt         Encrypt the message
       encrypt-query   Query whether to encrypt the message
     See info node *note (message)security::.

 -- Variable: bbdb -pgp-field

     BBDB xfield holding the PGP action.
     If the recipient of a message has this xfield in his/her BBDB record,
     its value determines whether *note ‘bbdb-pgp’: 7f. signs or encrypts the message.
     The value of this xfield should be one of the following symbols:
       sign            Sign the message
       sign-query      Query whether to sign the message
       encrypt         Encrypt the message
       encrypt-query   Query whether to encrypt the message
     If the xfield is absent use *note ‘bbdb-pgp-default’: 1d9.
     See also info node *note (message)security::.

 -- Variable: bbdb -pgp-ranked-actions

     Ranked list of actions when sending a message.
     If a message has multiple recipients such that their BBDB records specify
     different actions for this message, *note ‘bbdb-pgp’: 7f. will perform the action
     which appears first in *note ‘bbdb-pgp-ranked-actions’: 1d8.
     This list should include the following four symbols:
       sign            Sign the message
       sign-query      Query whether to sign the message
       encrypt         Encrypt the message
       encrypt-query   Query whether to encrypt the message.

 -- Variable: bbdb -pgp-headers

     Message headers to look at.

 -- Variable: bbdb -pgp-method

     Method for signing and encrypting messages.
     It should be one of the keys of *note ‘bbdb-pgp-method-alist’: 1dd.
     The default methods include
       pgp       Add MML tags for PGP format
       pgpauto   Add MML tags for PGP-auto format
       pgpmime   Add MML tags for PGP/MIME
       smime     Add MML tags for S/MIME
     See info node *note (message)security::.

 -- Variable: bbdb -pgp-method-alist

     Alist of methods for signing and encrypting a message with *note ‘bbdb-pgp’: 7f.
     Each method is a list (KEY SIGN ENCRYPT).
     The symbol KEY identifies the method.  The function SIGN signs the message;
     the function ENCRYPT encrypts it.  These functions take no arguments.
     The default methods include
       pgp       Add MML tags for PGP format
       pgpauto   Add MML tags for PGP-auto format
       pgpmime   Add MML tags for PGP/MIME
       smime     Add MML tags for S/MIME
     See info node *note (message)security::.


File: index.info,  Node: Lisp library bbdb-print,  Next: Lisp library bbdb-rmail,  Prev: Lisp library bbdb-pgp,  Up: Top

21 Lisp library (bbdb-print)
****************************

* Menu:

* Functions: Functions<12>. 
* Variables: Variables<6>. 


File: index.info,  Node: Functions<12>,  Next: Variables<6>,  Up: Lisp library bbdb-print

21.1 Functions
==============

 -- Function: bbdb -print records file brief

     Make a TeX FILE for printing RECORDS.
     Interactively, use BBDB prefix \
     \<bbdb-mode-map>\[bbdb-do-all-records], see *note ‘bbdb-do-all-records’: 110.
     With prefix BRIEF non-nil, make a brief (one line per record) printout.
     There are various variables for customizing the content and format
     of the printout, notably the variables *note ‘bbdb-print-alist’: 1e2. and
     *note ‘bbdb-print-require’: 1e3.

 -- Function: bbdb -print-record record current-letter brief pofl
          n-phones n-addresses

     Insert the bbdb RECORD in TeX format in the current buffer.
     CURRENT-LETTER is the first letter of the sortkey of the previous record.
     If this is non-nil and RECORD begins differently, a section heading is output.
     If CURRENT-LETTER is t always produce a heading.
     BRIEF is non-nil for 1-line-per-record printouts.
     PHONE-ON-FIRST-LINE, N-PHONES, and N-ADDRESSES are the respective values
     from *note ‘bbdb-print-alist’: 1e2.

     The return value is the new CURRENT-LETTER.

 -- Function: bbdb -print-phone phone

     Format PHONE as a string, obeying omit-area-code setting.
     Omit-area-code is one of the allowed symbols in *note ‘bbdb-print-alist’: 1e2.

 -- Function: bbdb -print-tex-quote string

     Quote any unquoted TeX special characters that appear in STRING.
     The replacement rules are defined in *note ‘bbdb-print-tex-quote-alist’: 1e7.


File: index.info,  Node: Variables<6>,  Prev: Functions<12>,  Up: Lisp library bbdb-print

21.2 Variables
==============

 -- Variable: bbdb -print-alist

     Formatting options for *note ‘bbdb-print’: 1e1, all formats.
     This is an alist of the form ((option1 . value1) (option2 . value2) ...)

     You can have separate settings for brief and non-brief printouts;
     see the variables *note ‘bbdb-print-brief-alist’: 1e9. and *note ‘bbdb-print-full-alist’: 1ea.
     Settings there will override the common settings in this variable.

     The possible options and legal values are:
      - columns: 1, 2, 3, 4 or ’quad (4 little 2-column pages per sheet)
          or ’grid (12 credit-card-sized pages per sheet).
      - separator: 0-7, the style of heading for each letter.
          0=none, 1=line, 2=boxed letters, 3=large boxed letters, 4=large letters,
          5=letters with lines, 6=letters with suits, 7=boxed letters with suits.
      - omit-area-code: a regular expression matching area codes to omit.
      - phone-on-first-line: t means to put first phone number on the same
          line with the name, nil means just the name.  A string means to
          use the first phone number whose "label" matches that string,
          which should be a valid regular expression.
      - n-phones: maximum number of phone numbers to include.
      - n-addresses: maximum number of addresses to include.
      - include-files: list of TeX files to \input.  If these filenames are not
        absolute, the files must be located somewhere that TeX will find them.
      - ps-fonts: nonnil means to use them, nil to use standard TeX fonts.
      - font-size: in points, any integer (assuming fonts in that size exist).
      - hsize, vsize: horizontal dimension of pages.  String value can be any valid
        TeX dimension, or nil to use TeX’s default.
      - hoffset, voffset: shift TeX’s output rightward (downward) by this distance
        (any TeX dimension).  Nil or 0 uses TeX’s default positioning.
      - quad-hsize, quad-vsize: for the quad format, horizontal and
          vertical size of the little pages.  These must be strings which
          are valid TeX dimensions, eg "10cm".

 -- Variable: bbdb -print-full-alist

     Extra options for *note ‘bbdb-print’: 1e1. non-brief format.
     These supplement or override entries in *note ‘bbdb-print-alist’: 1e2.; see description
     of possible contents there.

 -- Variable: bbdb -print-brief-alist

     Extra Options for *note ‘bbdb-print’: 1e1, brief format.
     These supplement or override entries in *note ‘bbdb-print-alist’: 1e2.; see description
     of possible contents there.

 -- Variable: bbdb -print-file

     Default file name for printouts of BBDB database.

 -- Variable: bbdb -print-omit-fields

     List of fields NOT to print in address list.
     See also *note ‘bbdb-print-require’: 1e3.

 -- Variable: bbdb -print-prolog

     TeX statements to include at the beginning of the *note ‘bbdb-print’: 1e1. file.

 -- Variable: bbdb -print-epilog

     TeX statements to include at the end of the *note ‘bbdb-print’: 1e1. file.

 -- Variable: bbdb -print-mail

     Whether only the primary or all mail addresses are printed.
     Value ‘`primary'’ means print the primary mail address only.
     Value ‘`all'’ means print all mail addresses.

 -- Variable: bbdb -print-tex-quote-alist

     Replacement alist for quoting TeX’s special characters.
     Each element is of the form (REGEXP . REPLACE).

 -- Variable: bbdb -print-address-format-list

     List of address formatting rules for printing.
     Each element may take the same values as in *note ‘bbdb-address-format-list’: 4c.
     The EDIT elements of *note ‘bbdb-address-format-list’: 4c. are ignored.

 -- Variable: bbdb -print-name-format

     Format for names when printing BBDB.
     If first-last format names as "Firstname Lastname".
     If last-first format names as "Lastname, Firstname".
     If *note ‘bbdb-print-name’: 1f1. returns the full name as a single, preformatted string,
     this takes precedence over *note ‘bbdb-print-name-format’: 1f0.

 -- Variable: bbdb -print-name

     Xfield holding the full print name for a record.
     This may also be a function taking one argument, a record.
     If it returns the full print name as a single string, this is used "as is".
     If it returns a cons pair (FIRST . LAST) with the first and last name
     for this record, these are formatted obeying *note ‘bbdb-print-name-format’: 1f0.
     In any case, this function should call *note ‘bbdb-print-tex-quote’: 1e6. as needed.

 -- Variable: bbdb -print-require

     What fields are required for printing a record.
     This is a lisp expression and a record will be printed only if the evaluation
     of this expression yields a non-nil value for this records.
     The symbols name, organization, mail, phone, address, and notes will be set
     to appropriate values when this is evaluated; they will be nil if the field
     does not exist or is elided.

     The value of this variable can be any lisp expression, but typically
     it will be a boolean combination of the field variables, as in
     the following examples:

       Print only people whose phone numbers are known:
         (setq bbdb-print-require ’phone)
       Print people whose names and organizations are known:
         (setq bbdb-print-require ’(and name organization))
       Print people whose names, and either addresses or phone numbers are known:
         (setq bbdb-print-require ’(and name (or address phone))).


File: index.info,  Node: Lisp library bbdb-rmail,  Next: Lisp library bbdb-sc,  Prev: Lisp library bbdb-print,  Up: Top

22 Lisp library (bbdb-rmail)
****************************

* Menu:

* Functions: Functions<13>. 


File: index.info,  Node: Functions<13>,  Up: Lisp library bbdb-rmail

22.1 Functions
==============

 -- Function: bbdb/rmail -new-flag

     Returns t if the current message in buffer BUF is new.

 -- Function: bbdb/rmail -header header

     Pull HEADER out of Rmail header.

 -- Function: bbdb -insinuate-rmail

     Hook BBDB into RMAIL.
     Do not call this in your init file.  Use *note ‘bbdb-initialize’: 7e.


File: index.info,  Node: Lisp library bbdb-sc,  Next: Lisp library bbdb-site,  Prev: Lisp library bbdb-rmail,  Up: Top

23 Lisp library (bbdb-sc)
*************************

* Menu:

* Functions: Functions<14>. 
* Variables: Variables<7>. 


File: index.info,  Node: Functions<14>,  Next: Variables<7>,  Up: Lisp library bbdb-sc

23.1 Functions
==============

 -- Function: bbdb -sc-update-from

     Update the "from" field in ‘`sc-mail-info'’.
     If the "from" field in ‘`sc-mail-info'’ contains only a plain mail address,
     complement the "from" field in ‘`sc-mail-info'’ with the sender’s name in BBDB.

 -- Function: bbdb -insinuate-sc

     Hook BBDB into Supercite.
     Do not call this in your init file.  Use *note ‘bbdb-initialize’: 7e.
     However, this is not the full story.  See bbdb-sc.el for how to fully hook
     BBDB into Supercite.

 -- Function: bbdb -sc-get-attrib mail

     Get the Supercite attribution from BBDB.
     MAIL is the mail address to look for in BBDB.

 -- Function: bbdb -sc-set-attrib

     Store attribution in BBDB.


File: index.info,  Node: Variables<7>,  Prev: Functions<14>,  Up: Lisp library bbdb-sc

23.2 Variables
==============

 -- Variable: bbdb -sc-attribution-field

     The BBDB xfield used for Supercite attribution.

 -- Variable: bbdb -sc-update-records-p

     How *note ‘bbdb-sc-set-attrib’: 1fe. updates BBDB records automatically.
     This may take the same values as arg UPDATE-P of *note ‘bbdb-update-records’: fe.

 -- Variable: bbdb -sc-update-attrib-p

     How *note ‘bbdb-sc-set-attrib’: 1fe. updates the attribution field.
     Allowed values include
      nil    Do not create or modify the attribution field
      query  Query before creating or modifying the attribution field.
      t      Create or modify the attribution field.

 -- Variable: bbdb -sc-update-attrib-p

     How *note ‘bbdb-sc-set-attrib’: 1fe. updates the attribution field.
     Allowed values include
      nil    Do not create or modify the attribution field
      query  Query before creating or modifying the attribution field.
      t      Create or modify the attribution field.

 -- Variable: bbdb -sc-last-attrib

     Last attribution used by Supercite.
     Used to compare against citation selected by the user.


File: index.info,  Node: Lisp library bbdb-site,  Next: Lisp library bbdb-snarf,  Prev: Lisp library bbdb-sc,  Up: Top

24 Lisp library (bbdb-site)
***************************

* Menu:

* Constants: Constants<3>. 


File: index.info,  Node: Constants<3>,  Up: Lisp library bbdb-site

24.1 Constants
==============

 -- Constant: bbdb -version

     Version of BBDB.

 -- Constant: bbdb -version-date

     Version date of BBDB.


File: index.info,  Node: Lisp library bbdb-snarf,  Next: Lisp library bbdb-vm,  Prev: Lisp library bbdb-site,  Up: Top

25 Lisp library (bbdb-snarf)
****************************

* Menu:

* Functions: Functions<15>. 
* Variables: Variables<8>. 


File: index.info,  Node: Functions<15>,  Next: Variables<8>,  Up: Lisp library bbdb-snarf

25.1 Functions
==============

 -- Function: bbdb -snarf-surrounding-space record

     Discard beginning and trailing space when snarfing RECORD.

 -- Function: bbdb -snarf-empty-lines record

     Discard empty lines when snarfing RECORD.

 -- Function: bbdb -snarf-name record

     Snarf name for RECORD.

 -- Function: bbdb -snarf-name-mail record

     Snarf name from mail address for RECORD.

 -- Function: bbdb -snarf-mail record

     Snarf mail addresses for RECORD.
     This uses the first subexpresion of *note ‘bbdb-snarf-mail-regexp’: 211.

 -- Function: bbdb -snarf-label field

     Extract the label before point, or return default label for FIELD.

 -- Function: bbdb -snarf-phone-nanp record

     Snarf NANP phone numbers for RECORD.
     NANP is the North American Numbering Plan used in North and Central America.
     This uses the first subexpresion of *note ‘bbdb-snarf-phone-nanp-regexp’: 214.

 -- Function: bbdb -snarf-phone-eu record &optional phone-regexp

     Snarf European phone numbers for RECORD.
     PHONE-REGEXP is the regexp to match a phone number.
     It defaults to *note ‘bbdb-snarf-phone-eu-regexp’: 216.

 -- Function: bbdb -snarf-streets address

     Snarf streets for ADDRESS.  This assumes a narrowed region.

 -- Function: bbdb -snarf-address-us record

     Snarf a US address for RECORD.

 -- Function: bbdb -snarf-address-eu record &optional postcode-regexp
          country

     Snarf a European address for RECORD.
     POSTCODE-REGEXP is a regexp matching the postcode assumed to appear
     at the beginning of a line followed by the name of the city.  This format
     is used in many continental European countries.
     POSTCODE-REGEXP defaults to *note ‘bbdb-snarf-postcode-eu-regexp’: 21a.
     COUNTRY is the country to use.  It defaults to *note ‘bbdb-snarf-address-eu-country’: 21b.

 -- Function: bbdb -snarf-address-eu record &optional postcode-regexp
          country

     Snarf a European address for RECORD.
     POSTCODE-REGEXP is a regexp matching the postcode assumed to appear
     at the beginning of a line followed by the name of the city.  This format
     is used in many continental European countries.
     POSTCODE-REGEXP defaults to *note ‘bbdb-snarf-postcode-eu-regexp’: 21a.
     COUNTRY is the country to use.  It defaults to *note ‘bbdb-snarf-address-eu-country’: 21b.

 -- Function: bbdb -snarf-url record

     Snarf URL for RECORD.
     This uses the first subexpresion of *note ‘bbdb-snarf-url-regexp’: 21d.

 -- Function: bbdb -snarf-notes record

     Snarf notes for RECORD.

 -- Function: bbdb -snarf-paragraph pos &optional rule

     Snarf BBDB record from paragraph around position POS using RULE.
     The paragraph is the one that contains POS or follows POS.
     Interactively POS is the position of point.
     RULE defaults to *note ‘bbdb-snarf-rule-default’: 220.
     See *note ‘bbdb-snarf-rule-alist’: 221. for details.

 -- Function: bbdb -snarf-yank &optional rule

     Snarf a BBDB record from latest kill using RULE.
     The latest kill may also be a window system selection, see ‘`current-kill'’.
     RULE defaults to *note ‘bbdb-snarf-rule-default’: 220.
     See *note ‘bbdb-snarf-rule-alist’: 221. for details.

 -- Function: bbdb -snarf string &optional rule

     Snarf a BBDB record in STRING using RULE.  Display and return this record.
     Interactively, STRING is the current region.
     RULE defaults to *note ‘bbdb-snarf-rule-default’: 220.
     See *note ‘bbdb-snarf-rule-alist’: 221. for details.


File: index.info,  Node: Variables<8>,  Prev: Functions<15>,  Up: Lisp library bbdb-snarf

25.2 Variables
==============

 -- Variable: bbdb -snarf-rule-alist

     Alist of rules for snarfing.
     Each rule is of the form (KEY FUNCTION FUNCTION ...).
     The symbol KEY identifies the rule, see also *note ‘bbdb-snarf-rule-default’: 220.

     Snarfing is a cumulative process.  The text is copied to a temporary
     snarf buffer that becomes current during snarfing.
     Each FUNCTION is called with one arg, the RECORD we are snarfing,
     and with point at the beginning of the snarf buffer.  FUNCTION should populate
     the fields of RECORD.  It may delete the part of the snarf buffer
     that it has processed so that the remaining FUNCTIONs operate only
     on those parts that were not yet snarfed.  The order of the FUNCTION calls
     in a rule is then crucial.
     Unlike other parts of BBDB, FUNCTIONs need not update the cache and
     hash table for RECORD which is done at the end by *note ‘bbdb-snarf’: 223.

 -- Variable: bbdb -snarf-rule-default

     Default rule for snarfing.

 -- Variable: bbdb -snarf-mail-regexp

     Regexp matching a mail address.  Case is ignored.
     The first subexpression becomes the mail address.

 -- Variable: bbdb -snarf-name-regexp

     Regexp matching a name.  Case is ignored.
     The first subexpression becomes the name.

 -- Variable: bbdb -snarf-default-label-alist

     Default labels for snarfing.
     This is an alist where each element is a cons pair (FIELD . LABEL).
     The symbol FIELD denotes a record field like ‘`phone'’ or ‘`address'’.
     The string LABEL denotes the default label for FIELD.

 -- Variable: bbdb -snarf-phone-nanp-regexp

     Regexp matching a NANP phone number.  Case is ignored.
     NANP is the North American Numbering Plan used in North and Central America.
     The first subexpression becomes the phone number.

 -- Variable: bbdb -snarf-phone-eu-regexp

     Regexp matching a European phone number.
     The first subexpression becomes the phone number.

 -- Variable: bbdb -snarf-postcode-eu-regexp

     Regexp matching many European postcodes.
     *note ‘bbdb-snarf-address-eu’: 219. assumes that the address appears at the beginning
     of a line followed by the name of the city.

 -- Variable: bbdb -snarf-address-us-country

     Country to use for US addresses.  If nil leave country blank.

 -- Variable: bbdb -snarf-address-eu-country

     Country to use for EU addresses.  If nil leave country blank.

 -- Variable: bbdb -snarf-url

     What xfield BBDB should use for URLs, or nil to not snarf URLs.

 -- Variable: bbdb -snarf-url-regexp

     Regexp matching a URL.  Case is ignored.
     The first subexpression becomes the URL.

 -- Variable: bbdb -snarf-rule-alist

     Alist of rules for snarfing.
     Each rule is of the form (KEY FUNCTION FUNCTION ...).
     The symbol KEY identifies the rule, see also *note ‘bbdb-snarf-rule-default’: 220.

     Snarfing is a cumulative process.  The text is copied to a temporary
     snarf buffer that becomes current during snarfing.
     Each FUNCTION is called with one arg, the RECORD we are snarfing,
     and with point at the beginning of the snarf buffer.  FUNCTION should populate
     the fields of RECORD.  It may delete the part of the snarf buffer
     that it has processed so that the remaining FUNCTIONs operate only
     on those parts that were not yet snarfed.  The order of the FUNCTION calls
     in a rule is then crucial.
     Unlike other parts of BBDB, FUNCTIONs need not update the cache and
     hash table for RECORD which is done at the end by *note ‘bbdb-snarf’: 223.

 -- Variable: bbdb -snarf-rule-alist

     Alist of rules for snarfing.
     Each rule is of the form (KEY FUNCTION FUNCTION ...).
     The symbol KEY identifies the rule, see also *note ‘bbdb-snarf-rule-default’: 220.

     Snarfing is a cumulative process.  The text is copied to a temporary
     snarf buffer that becomes current during snarfing.
     Each FUNCTION is called with one arg, the RECORD we are snarfing,
     and with point at the beginning of the snarf buffer.  FUNCTION should populate
     the fields of RECORD.  It may delete the part of the snarf buffer
     that it has processed so that the remaining FUNCTIONs operate only
     on those parts that were not yet snarfed.  The order of the FUNCTION calls
     in a rule is then crucial.
     Unlike other parts of BBDB, FUNCTIONs need not update the cache and
     hash table for RECORD which is done at the end by *note ‘bbdb-snarf’: 223.

 -- Variable: bbdb -snarf-rule-alist

     Alist of rules for snarfing.
     Each rule is of the form (KEY FUNCTION FUNCTION ...).
     The symbol KEY identifies the rule, see also *note ‘bbdb-snarf-rule-default’: 220.

     Snarfing is a cumulative process.  The text is copied to a temporary
     snarf buffer that becomes current during snarfing.
     Each FUNCTION is called with one arg, the RECORD we are snarfing,
     and with point at the beginning of the snarf buffer.  FUNCTION should populate
     the fields of RECORD.  It may delete the part of the snarf buffer
     that it has processed so that the remaining FUNCTIONs operate only
     on those parts that were not yet snarfed.  The order of the FUNCTION calls
     in a rule is then crucial.
     Unlike other parts of BBDB, FUNCTIONs need not update the cache and
     hash table for RECORD which is done at the end by *note ‘bbdb-snarf’: 223.

 -- Variable: bbdb -snarf-rule-alist

     Alist of rules for snarfing.
     Each rule is of the form (KEY FUNCTION FUNCTION ...).
     The symbol KEY identifies the rule, see also *note ‘bbdb-snarf-rule-default’: 220.

     Snarfing is a cumulative process.  The text is copied to a temporary
     snarf buffer that becomes current during snarfing.
     Each FUNCTION is called with one arg, the RECORD we are snarfing,
     and with point at the beginning of the snarf buffer.  FUNCTION should populate
     the fields of RECORD.  It may delete the part of the snarf buffer
     that it has processed so that the remaining FUNCTIONs operate only
     on those parts that were not yet snarfed.  The order of the FUNCTION calls
     in a rule is then crucial.
     Unlike other parts of BBDB, FUNCTIONs need not update the cache and
     hash table for RECORD which is done at the end by *note ‘bbdb-snarf’: 223.

 -- Variable: bbdb -snarf-rule-alist

     Alist of rules for snarfing.
     Each rule is of the form (KEY FUNCTION FUNCTION ...).
     The symbol KEY identifies the rule, see also *note ‘bbdb-snarf-rule-default’: 220.

     Snarfing is a cumulative process.  The text is copied to a temporary
     snarf buffer that becomes current during snarfing.
     Each FUNCTION is called with one arg, the RECORD we are snarfing,
     and with point at the beginning of the snarf buffer.  FUNCTION should populate
     the fields of RECORD.  It may delete the part of the snarf buffer
     that it has processed so that the remaining FUNCTIONs operate only
     on those parts that were not yet snarfed.  The order of the FUNCTION calls
     in a rule is then crucial.
     Unlike other parts of BBDB, FUNCTIONs need not update the cache and
     hash table for RECORD which is done at the end by *note ‘bbdb-snarf’: 223.


File: index.info,  Node: Lisp library bbdb-vm,  Next: Lisp library bbdb-wl,  Prev: Lisp library bbdb-snarf,  Up: Top

26 Lisp library (bbdb-vm)
*************************

* Menu:

* Functions: Functions<16>. 
* Variables: Variables<9>. 


File: index.info,  Node: Functions<16>,  Next: Variables<9>,  Up: Lisp library bbdb-vm

26.1 Functions
==============

 -- Function: vm -summary-function-B m

     For VM message M return the BBDB name of the sender.
     Respect ‘`vm-summary-uninteresting-senders'’.

 -- Function: bbdb/vm -auto-folder

     Add entries to ‘`vm-auto-folder-alist'’ for the records in BBDB.
     For each record that has a ‘`vm-folder'’ xfield, add an element
     \(MAIL-REGEXP . FOLDER-NAME) to ‘`vm-auto-folder-alist'’.
     The element gets added to the sublists of ‘`vm-auto-folder-alist'’
     specified in *note ‘bbdb/vm-auto-folder-headers’: 22e.
     MAIL-REGEXP matches the mail addresses of the BBDB record.
     The value of the ‘`vm-folder'’ xfield becomes FOLDER-NAME.
     The ‘`vm-folder'’ xfield is defined via *note ‘bbdb/vm-auto-folder-field’: 22f.

     Add this function to *note ‘bbdb-before-save-hook’: 129. and your .vm.

 -- Function: bbdb/vm -virtual-folder

     Create ‘`vm-virtual-folder-alist'’ according to the records in BBDB.
     For each record that has a ‘`vm-virtual'’ xfield, add or modify the
     corresponding VIRTUAL-FOLDER-NAME element of ‘`vm-virtual-folder-alist'’.

       (VIRTUAL-FOLDER-NAME ((FOLDER-NAME ...)
                             (author-or-recipient MAIL-REGEXP)))

     VIRTUAL-FOLDER-NAME is the first element of the ‘`vm-virtual'’ xfield.
     FOLDER-NAME ... are either the remaining elements of the ‘`vm-virtual'’ xfield,
     or *note ‘bbdb/vm-virtual-real-folders’: 231. or ‘`vm-primary-inbox'’.
     MAIL-REGEXP matches the mail addresses of the BBDB record.
     The ‘`vm-virtual'’ xfield is defined via *note ‘bbdb/vm-virtual-folder-field’: 232.

     Add this function to *note ‘bbdb-before-save-hook’: 129. and your .vm.

 -- Function: bbdb/vm -auto-add-label record

     Automatically add labels to VM messages.
     Add this to *note ‘bbdb-notice-record-hook’: 12f. to check the messages noticed by BBDB.
     If the value of *note ‘bbdb/vm-auto-add-label-field’: 234. in the sender’s BBDB record
     matches a value in *note ‘bbdb/vm-auto-add-label-list’: 235. then a VM label will be added
     to the message.  Such VM labels can be used, e.g., to mark messages via
     ‘`vm-mark-matching-messages'’ or to define virtual folders via
     ‘`vm-create-virtual-folder'’

     Typically *note ‘bbdb/vm-auto-add-label-field’: 234. and *note ‘bbdb/vm-auto-add-label-list’: 235.
     refer to mail aliases FOO used with multiple records.  This adds a label FOO
     to all incoming messages matching FOO.  Then VM can create a virtual folder
     for these messages.  The concept of combining multiple recipients of an
     outgoing message in one mail alias thus gets extended to incoming messages
     from different senders.

 -- Function: bbdb -insinuate-vm

     Hook BBDB into VM.
     Do not call this in your init file.  Use *note ‘bbdb-initialize’: 7e.


File: index.info,  Node: Variables<9>,  Prev: Functions<16>,  Up: Lisp library bbdb-vm

26.2 Variables
==============

 -- Variable: bbdb/vm -auto-folder-headers

     The headers used by *note ‘bbdb/vm-auto-folder’: 22d.
     The order in this list is the order how matching will be performed.

 -- Variable: bbdb/vm -auto-folder-field

     The xfield which *note ‘bbdb/vm-auto-folder’: 22d. searches for.

 -- Variable: bbdb/vm -virtual-folder-field

     The xfield which *note ‘bbdb/vm-virtual-folder’: 230. searches for.

 -- Variable: bbdb/vm -virtual-real-folders

     Real folders used for defining virtual folders.
     If nil use ‘`vm-primary-inbox'’.

 -- Variable: bbdb/vm -auto-add-label-list

     List used by *note ‘bbdb/vm-auto-add-label’: 233. to automatically label VM messages.
     Its elements may be strings used both as the xfield value to check for
     and as the label to apply to the message.
     If an element is a cons pair (VALUE . LABEL), VALUE is the xfield value
     to search for and LABEL is the label to apply.

 -- Variable: bbdb/vm -auto-add-label-field

     Xfields used by *note ‘bbdb/vm-auto-add-label’: 233. to automatically label messages.
     This is either a single BBDB xfield or a list of xfields that
     *note ‘bbdb/vm-auto-add-label’: 233. uses to check for labels to apply to a message.
     Defaults to *note ‘bbdb-mail-alias-field’: f6. which defaults to ‘`mail-alias'’.


File: index.info,  Node: Lisp library bbdb-wl,  Next: Indices and tables,  Prev: Lisp library bbdb-vm,  Up: Top

27 Lisp library (bbdb-wl)
*************************

* Menu:

* Functions: Functions<17>. 


File: index.info,  Node: Functions<17>,  Up: Lisp library bbdb-wl

27.1 Functions
==============

 -- Function: bbdb -insinuate-wl

     Hook BBDB into Wanderlust.


File: index.info,  Node: Indices and tables,  Next: Index,  Prev: Lisp library bbdb-wl,  Up: Top

Indices and tables
******************

   * genindex

   * search


File: index.info,  Node: Index,  Prev: Indices and tables,  Up: Top

Index
*****

 [index ]
* Menu:

* bbdb-accept-message-alist; Emacs Lisp variable: Variables. (line   10)
* bbdb-accept-message; Emacs Lisp function: Functions<10>.   (line    6)
* bbdb-add-aka; Emacs Lisp variable:     Variables.          (line   24)
* bbdb-add-mail-alias; Emacs Lisp function: Functions<3>.    (line    6)
* bbdb-add-mails; Emacs Lisp variable:   Variables.          (line   37)
* bbdb-add-name; Emacs Lisp variable:    Variables.          (line   55)
* bbdb-address-continental-p; Emacs Lisp function: Functions.
                                                             (line    6)
* bbdb-address-format-list; Emacs Lisp variable: Variables.  (line   73)
* bbdb-address-label-list; Emacs Lisp variable: Variables.   (line  121)
* bbdb-after-change-hook; Emacs Lisp hook: Hooks<2>.         (line    6)
* bbdb-after-read-db-hook; Emacs Lisp hook: Hooks<2>.        (line   13)
* bbdb-after-save-hook; Emacs Lisp hook: Hooks<2>.           (line   18)
* bbdb-after-save; Emacs Lisp function:  Functions.          (line   14)
* bbdb-allow-duplicates; Emacs Lisp variable: Variables.     (line  125)
* bbdb-anniv-alist; Emacs Lisp variable: Variables<2>.       (line    6)
* bbdb-anniv-diary-entries; Emacs Lisp function: Functions<2>.
                                                             (line    6)
* bbdb-annotate-field; Emacs Lisp variable: Variables.       (line  130)
* bbdb-annotate-message; Emacs Lisp function: Functions<10>. (line   13)
* bbdb-annotate-record; Emacs Lisp function: Functions<10>.  (line   29)
* bbdb-append-display-p; Emacs Lisp function: Functions<3>.  (line   24)
* bbdb-append-display; Emacs Lisp function: Functions<3>.    (line   17)
* bbdb-auto-notes-ignore-headers; Emacs Lisp variable: Variables.
                                                             (line  143)
* bbdb-auto-notes-ignore-messages; Emacs Lisp variable: Variables.
                                                             (line  158)
* bbdb-auto-notes-rules-expanded; Emacs Lisp variable: Variables.
                                                             (line  249)
* bbdb-auto-notes-rules; Emacs Lisp variable: Variables.     (line  176)
* bbdb-auto-notes; Emacs Lisp function:  Functions<10>.      (line  141)
* bbdb-auto-revert; Emacs Lisp variable: Variables.          (line  253)
* bbdb-before-save-hook; Emacs Lisp hook: Hooks<2>.          (line   22)
* bbdb-before-save; Emacs Lisp function: Functions.          (line   18)
* bbdb-browse-url; Emacs Lisp function:  Functions<3>.       (line   28)
* bbdb-buffer-name; Emacs Lisp variable: Variables.          (line  261)
* bbdb-buffer; Emacs Lisp function:      Functions.          (line   22)
* bbdb-canonical-hosts; Emacs Lisp variable: Variables.      (line  265)
* bbdb-canonicalize-mail-1; Emacs Lisp function: Functions.  (line   30)
* bbdb-canonicalize-mail-function; Emacs Lisp variable: Variables.
                                                             (line  273)
* bbdb-case-fold-search; Emacs Lisp variable: Variables.     (line  284)
* bbdb-change-hook; Emacs Lisp hook:     Hooks<2>.           (line   26)
* bbdb-change-record; Emacs Lisp function: Functions.        (line   36)
* bbdb-changed-records; Emacs Lisp variable: Variables.      (line  290)
* bbdb-check-auto-save-file; Emacs Lisp variable: Variables. (line  295)
* bbdb-check-name; Emacs Lisp function:  Functions.          (line   46)
* bbdb-check-postcode; Emacs Lisp variable: Variables.       (line  300)
* bbdb-check-type; Emacs Lisp function:  Functions.          (line   53)
* bbdb-city-list; Emacs Lisp variable:   Variables.          (line  306)
* bbdb-clean-address-components; Emacs Lisp function: Functions.
                                                             (line   61)
* bbdb-complete-mail-allow-cycling; Emacs Lisp variable: Variables.
                                                             (line  314)
* bbdb-complete-mail-cleanup; Emacs Lisp function: Functions<3>.
                                                             (line   59)
* bbdb-complete-mail-hook; Emacs Lisp hook: Hooks<2>.        (line   33)
* bbdb-complete-mail; Emacs Lisp function: Functions<3>.     (line   36)
* bbdb-completing-read-mails; Emacs Lisp function: Functions<3>.
                                                             (line   64)
* bbdb-completing-read-record; Emacs Lisp function: Functions<3>.
                                                             (line   68)
* bbdb-completing-read-records; Emacs Lisp function: Functions<3>.
                                                             (line   76)
* bbdb-completion-display-record; Emacs Lisp variable: Variables.
                                                             (line  318)
* bbdb-completion-list; Emacs Lisp variable: Variables.      (line  322)
* bbdb-completion-predicate; Emacs Lisp function: Functions<3>.
                                                             (line   83)
* bbdb-compose-mail; Emacs Lisp function: Functions<3>.      (line   88)
* bbdb-concat; Emacs Lisp function:      Functions.          (line   69)
* bbdb-continental-postcode-regexp; Emacs Lisp variable: Variables.
                                                             (line  335)
* bbdb-copy-fields-as-kill; Emacs Lisp function: Functions<3>.
                                                             (line   94)
* bbdb-copy-records-as-kill; Emacs Lisp function: Functions<3>.
                                                             (line  103)
* bbdb-country-list; Emacs Lisp variable: Variables.         (line  342)
* bbdb-create-hook; Emacs Lisp hook:     Hooks<2>.           (line   37)
* bbdb-create; Emacs Lisp function:      Functions<3>.       (line  109)
* bbdb-creation-date; Emacs Lisp function: Functions.        (line   78)
* bbdb-creation-newer; Emacs Lisp function: Functions<3>.    (line  115)
* bbdb-creation-no-change; Emacs Lisp function: Functions<3>.
                                                             (line  120)
* bbdb-creation-older; Emacs Lisp function: Functions<3>.    (line  124)
* bbdb-current-field; Emacs Lisp function: Functions.        (line   83)
* bbdb-current-record; Emacs Lisp function: Functions.       (line   87)
* bbdb-debug; Emacs Lisp variable:       Variables.          (line  346)
* bbdb-decompose-bbdb-address; Emacs Lisp function: Functions.
                                                             (line   92)
* bbdb-dedicated-window; Emacs Lisp variable: Variables.     (line  351)
* bbdb-default-area-code; Emacs Lisp variable: Variables.    (line  357)
* bbdb-default-country; Emacs Lisp variable: Variables.      (line  362)
* bbdb-default-domain; Emacs Lisp variable: Variables.       (line  366)
* bbdb-default-label-list; Emacs Lisp variable: Variables.   (line  374)
* bbdb-default-separator; Emacs Lisp variable: Variables.    (line  378)
* bbdb-default-xfield; Emacs Lisp variable: Variables.       (line  383)
* bbdb-delete-field-or-record; Emacs Lisp function: Functions<3>.
                                                             (line  129)
* bbdb-delete-record-internal; Emacs Lisp function: Functions.
                                                             (line  104)
* bbdb-delete-records; Emacs Lisp function: Functions<3>.    (line  139)
* bbdb-delete-redundant-mails; Emacs Lisp function: Functions<3>.
                                                             (line  146)
* bbdb-dial-function; Emacs Lisp variable: Variables.        (line  389)
* bbdb-dial-local-prefix-alist; Emacs Lisp variable: Variables.
                                                             (line  406)
* bbdb-dial-local-prefix; Emacs Lisp variable: Variables.    (line  397)
* bbdb-dial-long-distance-prefix; Emacs Lisp variable: Variables.
                                                             (line  414)
* bbdb-dial-number; Emacs Lisp function: Functions<3>.       (line  163)
* bbdb-dial; Emacs Lisp function:        Functions<3>.       (line  169)
* bbdb-display-all-records; Emacs Lisp function: Functions<3>.
                                                             (line  176)
* bbdb-display-current-record; Emacs Lisp function: Functions<3>.
                                                             (line  182)
* bbdb-display-hook; Emacs Lisp hook:    Hooks<2>.           (line   47)
* bbdb-display-list; Emacs Lisp function: Functions.         (line  110)
* bbdb-display-name-organization; Emacs Lisp function: Functions.
                                                             (line  120)
* bbdb-display-record-multi-line; Emacs Lisp function: Functions.
                                                             (line  129)
* bbdb-display-record-one-line; Emacs Lisp function: Functions.
                                                             (line  135)
* bbdb-display-record; Emacs Lisp function: Functions.       (line  141)
* bbdb-display-records-completely; Emacs Lisp function: Functions<3>.
                                                             (line  186)
* bbdb-display-records-with-layout; Emacs Lisp function: Functions<3>.
                                                             (line  192)
* bbdb-display-records; Emacs Lisp function: Functions.      (line  149)
* bbdb-display-records; Emacs Lisp function <1>: Functions.  (line  157)
* bbdb-divide-name; Emacs Lisp function: Functions.          (line  165)
* bbdb-do-all-records; Emacs Lisp command: Commands.         (line    6)
* bbdb-do-all-records; Emacs Lisp function: Functions<3>.    (line  198)
* bbdb-do-records; Emacs Lisp function:  Functions<3>.       (line  205)
* bbdb-dwim-mail; Emacs Lisp function:   Functions<3>.       (line  213)
* bbdb-edit-address-default; Emacs Lisp function: Functions<3>.
                                                             (line  226)
* bbdb-edit-address-street; Emacs Lisp function: Functions<3>.
                                                             (line  236)
* bbdb-edit-field; Emacs Lisp function:  Functions<3>.       (line  240)
* bbdb-edit-foo; Emacs Lisp variable:    Variables.          (line  423)
* bbdb-editable; Emacs Lisp function:    Functions.          (line  171)
* bbdb-empty-record; Emacs Lisp function: Functions.         (line  177)
* bbdb-empty-record; Emacs Lisp function <1>: Functions.     (line  182)
* bbdb-end-marker; Emacs Lisp variable:  Variables.          (line  445)
* bbdb-extract-address-components; Emacs Lisp function: Functions.
                                                             (line  187)
* bbdb-field-menu; Emacs Lisp function:  Functions.          (line  194)
* bbdb-file-remote-save-always; Emacs Lisp variable: Variables.
                                                             (line  464)
* bbdb-file-remote; Emacs Lisp variable: Variables.          (line  453)
* bbdb-file; Emacs Lisp variable:        Variables.          (line  449)
* bbdb-fix-records; Emacs Lisp function: Functions<3>.       (line  252)
* bbdb-format-address-default; Emacs Lisp function: Functions.
                                                             (line  203)
* bbdb-format-address; Emacs Lisp function: Functions.       (line  198)
* bbdb-get-address-components; Emacs Lisp function: Functions<10>.
                                                             (line   82)
* bbdb-get-mail-aliases; Emacs Lisp function: Functions<3>.  (line  258)
* bbdb-get-records; Emacs Lisp function: Functions<3>.       (line  262)
* bbdb-gethash; Emacs Lisp function:     Functions.          (line  217)
* bbdb-goto-first-record; Emacs Lisp function: Functions.    (line  223)
* bbdb-grab-url; Emacs Lisp function:    Functions<3>.       (line  267)
* bbdb-hash-p; Emacs Lisp function:      Functions.          (line  227)
* bbdb-hash-record; Emacs Lisp function: Functions.          (line  232)
* bbdb-hash-update; Emacs Lisp function: Functions.          (line  238)
* bbdb-hashtable; Emacs Lisp variable:   Variables.          (line  469)
* bbdb-horiz-pop-up-window-size; Emacs Lisp variable: Variables.
                                                             (line  474)
* bbdb-ident-point; Emacs Lisp function: Functions<3>.       (line  271)
* bbdb-ignore-message-alist; Emacs Lisp variable: Variables. (line  484)
* bbdb-ignore-message; Emacs Lisp function: Functions<10>.   (line   92)
* bbdb-ignore-redundant-mails; Emacs Lisp variable: Variables.
                                                             (line  498)
* bbdb-image-path; Emacs Lisp variable:  Variables.          (line  531)
* bbdb-image-suffixes; Emacs Lisp variable: Variables.       (line  535)
* bbdb-image; Emacs Lisp variable:       Variables.          (line  518)
* bbdb-info-file; Emacs Lisp variable:   Variables.          (line  539)
* bbdb-init-forms; Emacs Lisp variable:  Variables.          (line  543)
* bbdb-initialize-hook; Emacs Lisp hook: Hooks<2>.           (line   51)
* bbdb-initialize; Emacs Lisp function:  Functions.          (line  243)
* bbdb-insert-field-menu; Emacs Lisp function: Functions.    (line  275)
* bbdb-insert-field; Emacs Lisp function: Functions<3>.      (line  280)
* bbdb-insert-record-internal; Emacs Lisp function: Functions.
                                                             (line  279)
* bbdb-insinuate-gnus; Emacs Lisp function: Functions<4>.    (line    6)
* bbdb-insinuate-message; Emacs Lisp function: Functions<6>. (line    6)
* bbdb-insinuate-mh; Emacs Lisp function: Functions<7>.      (line   11)
* bbdb-insinuate-mu4e; Emacs Lisp function: Functions<9>.    (line    6)
* bbdb-insinuate-rmail; Emacs Lisp function: Functions<13>.  (line   14)
* bbdb-insinuate-sc; Emacs Lisp function: Functions<14>.     (line   12)
* bbdb-insinuate-vm; Emacs Lisp function: Functions<16>.     (line   58)
* bbdb-insinuate-wl; Emacs Lisp function: Functions<17>.     (line    6)
* bbdb-ispell-collect-words; Emacs Lisp function: Functions<5>.
                                                             (line   10)
* bbdb-ispell-dictionary-list; Emacs Lisp variable: Variables<4>.
                                                             (line    6)
* bbdb-ispell-export; Emacs Lisp function: Functions<5>.     (line    6)
* bbdb-ispell-field-list; Emacs Lisp variable: Variables<4>. (line   11)
* bbdb-ispell-ignore-re; Emacs Lisp variable: Variables<4>.  (line   19)
* bbdb-ispell-min-word-length; Emacs Lisp variable: Variables<4>.
                                                             (line   15)
* bbdb-ispell-word-list; Emacs Lisp variable: Variables<4>.  (line   23)
* bbdb-lastname-prefixes; Emacs Lisp variable: Variables.    (line  547)
* bbdb-lastname-re; Emacs Lisp variable: Variables.          (line  553)
* bbdb-lastname-suffix-re; Emacs Lisp variable: Variables.   (line  564)
* bbdb-lastname-suffixes; Emacs Lisp variable: Variables.    (line  558)
* bbdb-layout-alist; Emacs Lisp variable: Variables.         (line  569)
* bbdb-layout-get-option; Emacs Lisp function: Functions.    (line  285)
* bbdb-layout; Emacs Lisp variable:      Variables.          (line  605)
* bbdb-legal-postcodes; Emacs Lisp variable: Variables.      (line  609)
* bbdb-list-strings; Emacs Lisp function: Functions.         (line  289)
* bbdb-list-transpose; Emacs Lisp function: Functions<3>.    (line  286)
* bbdb-mail-abbrev-expand-hook; Emacs Lisp hook: Hooks<2>.   (line   55)
* bbdb-mail-address; Emacs Lisp function: Functions<3>.      (line  291)
* bbdb-mail-alias-field; Emacs Lisp variable: Variables.     (line  625)
* bbdb-mail-alias; Emacs Lisp variable:  Variables.          (line  614)
* bbdb-mail-aliases-need-rebuilt; Emacs Lisp variable: Variables.
                                                             (line  630)
* bbdb-mail-aliases; Emacs Lisp function: Functions<3>.      (line  303)
* bbdb-mail-avoid-redundancy; Emacs Lisp variable: Variables.
                                                             (line  634)
* bbdb-mail-name-format; Emacs Lisp variable: Variables.     (line  640)
* bbdb-mail-name; Emacs Lisp variable:   Variables.          (line  649)
* bbdb-mail-user-agent; Emacs Lisp variable: Variables.      (line  657)
* bbdb-mail-yank; Emacs Lisp function:   Functions<3>.       (line  330)
* bbdb-mail; Emacs Lisp function:        Functions<3>.       (line  320)
* bbdb-merge-concat-remove-duplicates; Emacs Lisp function: Functions.
                                                             (line  293)
* bbdb-merge-concat-remove-duplicates; Emacs Lisp function <1>: Functions.
                                                             (line  332)
* bbdb-merge-concat; Emacs Lisp function: Functions.         (line  297)
* bbdb-merge-concat; Emacs Lisp function <1>: Functions.     (line  336)
* bbdb-merge-lists; Emacs Lisp function: Functions.          (line  302)
* bbdb-merge-records; Emacs Lisp function: Functions<3>.     (line  336)
* bbdb-merge-string-least; Emacs Lisp function: Functions.   (line  308)
* bbdb-merge-string-least; Emacs Lisp function <1>: Functions.
                                                             (line  341)
* bbdb-merge-string-most; Emacs Lisp function: Functions.    (line  312)
* bbdb-merge-string-most; Emacs Lisp function <1>: Functions.
                                                             (line  345)
* bbdb-merge-xfield-function-alist; Emacs Lisp variable: Variables.
                                                             (line  662)
* bbdb-merge-xfield; Emacs Lisp function: Functions.         (line  316)
* bbdb-merge-xfield; Emacs Lisp function <1>: Functions.     (line  349)
* bbdb-message-all-addresses; Emacs Lisp variable: Variables.
                                                             (line  668)
* bbdb-message-clean-name-default; Emacs Lisp function: Functions.
                                                             (line  323)
* bbdb-message-clean-name-default; Emacs Lisp function <1>: Functions.
                                                             (line  356)
* bbdb-message-clean-name-function; Emacs Lisp variable: Functions.
                                                             (line  361)
* bbdb-message-clean-name-function; Emacs Lisp variable <1>: Variables.
                                                             (line  673)
* bbdb-message-header; Emacs Lisp function: Functions<10>.   (line   99)
* bbdb-message-headers; Emacs Lisp variable: Variables.      (line  679)
* bbdb-message-mail-as-name; Emacs Lisp variable: Variables. (line  689)
* bbdb-message-search; Emacs Lisp function: Functions<3>.    (line  347)
* bbdb-message-try-all-headers; Emacs Lisp variable: Variables.
                                                             (line  693)
* bbdb-migrate-add-country-field; Emacs Lisp function: Functions<8>.
                                                             (line   47)
* bbdb-migrate-change-dates-change-field; Emacs Lisp function: Functions<8>.
                                                             (line   42)
* bbdb-migrate-change-dates; Emacs Lisp function: Functions<8>.
                                                             (line   36)
* bbdb-migrate-organization-to-list; Emacs Lisp function: Functions<8>.
                                                             (line   59)
* bbdb-migrate-postcodes-to-strings; Emacs Lisp function: Functions<8>.
                                                             (line   31)
* bbdb-migrate-record-lambda; Emacs Lisp function: Functions<8>.
                                                             (line   11)
* bbdb-migrate-streets-to-list; Emacs Lisp function: Functions<8>.
                                                             (line   51)
* bbdb-migrate-versions-lambda; Emacs Lisp function: Functions<8>.
                                                             (line   23)
* bbdb-migrate-versions-lambda; Emacs Lisp function <1>: Functions<8>.
                                                             (line   27)
* bbdb-migrate-xfields-to-list; Emacs Lisp function: Functions<8>.
                                                             (line   55)
* bbdb-migrate; Emacs Lisp function:     Functions<8>.       (line    6)
* bbdb-migration-spec; Emacs Lisp constant: Constants.       (line    6)
* bbdb-mode-hook; Emacs Lisp hook:       Hooks<2>.           (line   61)
* bbdb-mode-map; Emacs Lisp variable:    Variables.          (line  842)
* bbdb-modeline-info; Emacs Lisp variable: Variables.        (line  833)
* bbdb-mouse-menu; Emacs Lisp function:  Functions.          (line  328)
* bbdb-mouse-menu; Emacs Lisp function <1>: Functions.       (line  367)
* bbdb-mua-annotate-field-interactive; Emacs Lisp function: Functions<10>.
                                                             (line   25)
* bbdb-mua-annotate-recipients; Emacs Lisp function: Functions<10>.
                                                             (line   37)
* bbdb-mua-annotate-sender; Emacs Lisp function: Functions<10>.
                                                             (line   46)
* bbdb-mua-auto-update-init; Emacs Lisp function: Functions<10>.
                                                             (line  148)
* bbdb-mua-auto-update-p; Emacs Lisp variable: Variables.    (line  703)
* bbdb-mua-auto-update; Emacs Lisp function: Functions<10>.  (line  117)
* bbdb-mua-display-all-recipients; Emacs Lisp function: Functions<10>.
                                                             (line  173)
* bbdb-mua-display-all-records; Emacs Lisp function: Functions<10>.
                                                             (line  179)
* bbdb-mua-display-recipients; Emacs Lisp function: Functions<10>.
                                                             (line  200)
* bbdb-mua-display-records; Emacs Lisp function: Functions<10>.
                                                             (line  185)
* bbdb-mua-display-sender; Emacs Lisp function: Functions<10>.
                                                             (line  206)
* bbdb-mua-edit-field-interactive; Emacs Lisp function: Functions<10>.
                                                             (line   64)
* bbdb-mua-edit-field-recipients; Emacs Lisp function: Functions<10>.
                                                             (line   68)
* bbdb-mua-edit-field-sender; Emacs Lisp function: Functions<10>.
                                                             (line   75)
* bbdb-mua-edit-field; Emacs Lisp function: Functions<10>.   (line   55)
* bbdb-mua-edit-field; Emacs Lisp variable: Variables.       (line  725)
* bbdb-mua-mode-alist; Emacs Lisp constant: Constants<2>.    (line    6)
* bbdb-mua-pop-up-window-size; Emacs Lisp variable: Variables.
                                                             (line  747)
* bbdb-mua-pop-up; Emacs Lisp variable:  Variables.          (line  739)
* bbdb-mua-summary-mark-field; Emacs Lisp variable: Variables.
                                                             (line  763)
* bbdb-mua-summary-mark-format-letter; Emacs Lisp variable: Variables.
                                                             (line  770)
* bbdb-mua-summary-mark; Emacs Lisp variable: Variables.     (line  756)
* bbdb-mua-summary-unification-list; Emacs Lisp variable: Variables.
                                                             (line  781)
* bbdb-mua-summary-unify-format-letter; Emacs Lisp variable: Variables.
                                                             (line  794)
* bbdb-mua-summary-unify; Emacs Lisp function: Functions<10>.
                                                             (line  220)
* bbdb-mua-update-interactive-p; Emacs Lisp variable: Variables.
                                                             (line  805)
* bbdb-mua-update-records; Emacs Lisp function: Functions<10>.
                                                             (line  237)
* bbdb-mua-window-p; Emacs Lisp function: Functions<10>.     (line  168)
* bbdb-mua-wrapper; Emacs Lisp function: Functions<10>.      (line  246)
* bbdb-mua; Emacs Lisp function:         Functions<10>.      (line  104)
* bbdb-multiple-buffers-default; Emacs Lisp function: Functions.
                                                             (line  371)
* bbdb-multiple-buffers; Emacs Lisp variable: Variables.     (line  827)
* bbdb-name-face-alist; Emacs Lisp variable: Variables.      (line  847)
* bbdb-name-format; Emacs Lisp variable: Variables.          (line  856)
* bbdb-new-mails-primary; Emacs Lisp variable: Variables.    (line  865)
* bbdb-next-field; Emacs Lisp function:  Functions.          (line  376)
* bbdb-next-record; Emacs Lisp function: Functions.          (line  381)
* bbdb-notice-mail-hook; Emacs Lisp hook: Hooks<2>.          (line   65)
* bbdb-notice-record-hook; Emacs Lisp hook: Hooks<2>.        (line   82)
* bbdb-offer-to-create; Emacs Lisp variable: Variables.      (line  881)
* bbdb-omit-record; Emacs Lisp function: Functions<3>.       (line  359)
* bbdb-organization-list; Emacs Lisp variable: Variables.    (line  885)
* bbdb-overwrite-record-internal; Emacs Lisp function: Functions.
                                                             (line  386)
* bbdb-parse-phone; Emacs Lisp function: Functions<3>.       (line  364)
* bbdb-parse-postcode; Emacs Lisp function: Functions.       (line  392)
* bbdb-parse-records; Emacs Lisp function: Functions.        (line  397)
* bbdb-pgp-default; Emacs Lisp variable: Variables<5>.       (line    6)
* bbdb-pgp-field; Emacs Lisp variable:   Variables<5>.       (line   17)
* bbdb-pgp-headers; Emacs Lisp variable: Variables<5>.       (line   42)
* bbdb-pgp-method-alist; Emacs Lisp variable: Variables<5>.  (line   57)
* bbdb-pgp-method; Emacs Lisp variable:  Variables<5>.       (line   46)
* bbdb-pgp-ranked-actions; Emacs Lisp variable: Variables<5>.
                                                             (line   30)
* bbdb-pgp; Emacs Lisp function:         Functions<11>.      (line    6)
* bbdb-phone-label-list; Emacs Lisp variable: Variables.     (line  889)
* bbdb-phone-string; Emacs Lisp function: Functions.         (line  402)
* bbdb-phone-style; Emacs Lisp variable: Variables.          (line  893)
* bbdb-pop-up-layout; Emacs Lisp variable: Variables.        (line  906)
* bbdb-pop-up-window-simple; Emacs Lisp function: Functions. (line  418)
* bbdb-pop-up-window-size; Emacs Lisp variable: Variables.   (line  910)
* bbdb-pop-up-window; Emacs Lisp function: Functions.        (line  406)
* bbdb-postcode-list; Emacs Lisp variable: Variables.        (line  902)
* bbdb-prefix-message; Emacs Lisp function: Functions<3>.    (line  394)
* bbdb-prev-field; Emacs Lisp function:  Functions.          (line  423)
* bbdb-prev-record; Emacs Lisp function: Functions.          (line  428)
* bbdb-print-address-format-list; Emacs Lisp variable: Variables<6>.
                                                             (line   80)
* bbdb-print-alist; Emacs Lisp variable: Variables<6>.       (line    6)
* bbdb-print-brief-alist; Emacs Lisp variable: Variables<6>. (line   46)
* bbdb-print-epilog; Emacs Lisp variable: Variables<6>.      (line   65)
* bbdb-print-file; Emacs Lisp variable:  Variables<6>.       (line   52)
* bbdb-print-full-alist; Emacs Lisp variable: Variables<6>.  (line   40)
* bbdb-print-mail; Emacs Lisp variable:  Variables<6>.       (line   69)
* bbdb-print-name-format; Emacs Lisp variable: Variables<6>. (line   86)
* bbdb-print-name; Emacs Lisp variable:  Variables<6>.       (line   94)
* bbdb-print-omit-fields; Emacs Lisp variable: Variables<6>. (line   56)
* bbdb-print-phone; Emacs Lisp function: Functions<12>.      (line   29)
* bbdb-print-prolog; Emacs Lisp variable: Variables<6>.      (line   61)
* bbdb-print-record; Emacs Lisp function: Functions<12>.     (line   16)
* bbdb-print-require; Emacs Lisp variable: Variables<6>.     (line  103)
* bbdb-print-tex-quote-alist; Emacs Lisp variable: Variables<6>.
                                                             (line   75)
* bbdb-print-tex-quote; Emacs Lisp function: Functions<12>.  (line   34)
* bbdb-print; Emacs Lisp function:       Functions<12>.      (line    6)
* bbdb-puthash-mail; Emacs Lisp function: Functions.         (line  438)
* bbdb-puthash; Emacs Lisp function:     Functions.          (line  433)
* bbdb-query-create; Emacs Lisp function: Functions<10>.     (line  250)
* bbdb-read-field; Emacs Lisp function:  Functions<3>.       (line  398)
* bbdb-read-name-format; Emacs Lisp variable: Variables.     (line  919)
* bbdb-read-only; Emacs Lisp variable:   Variables.          (line  927)
* bbdb-read-organization; Emacs Lisp function: Functions<3>. (line  408)
* bbdb-read-record; Emacs Lisp function: Functions<3>.       (line  412)
* bbdb-read-string; Emacs Lisp function: Functions.          (line  442)
* bbdb-read-xfield-pgp-mail; Emacs Lisp function: Functions<11>.
                                                             (line   27)
* bbdb-read-xfield; Emacs Lisp function: Functions<3>.       (line  418)
* bbdb-record-edit-address; Emacs Lisp function: Functions<3>.
                                                             (line  423)
* bbdb-record-edit-phone; Emacs Lisp function: Functions<3>. (line  432)
* bbdb-record-field; Emacs Lisp function: Functions.         (line  450)
* bbdb-record-list; Emacs Lisp function: Functions<3>.       (line  436)
* bbdb-record-name-lf; Emacs Lisp function: Functions.       (line  475)
* bbdb-record-name; Emacs Lisp function: Functions.          (line  481)
* bbdb-record-set-field; Emacs Lisp function: Functions.     (line  487)
* bbdb-record-set-name; Emacs Lisp function: Functions.      (line  514)
* bbdb-record-set-sortkey; Emacs Lisp function: Functions.   (line  520)
* bbdb-record-set-xfield; Emacs Lisp function: Functions.    (line  524)
* bbdb-record-xfield-intern; Emacs Lisp function: Functions. (line  530)
* bbdb-record-xfield-string; Emacs Lisp function: Functions. (line  535)
* bbdb-records; Emacs Lisp variable:     Variables.          (line  933)
* bbdb-redisplay-record-globally; Emacs Lisp function: Functions.
                                                             (line  540)
* bbdb-redisplay-record; Emacs Lisp function: Functions.     (line  548)
* bbdb-remhash; Emacs Lisp function:     Functions.          (line  555)
* bbdb-revert-buffer; Emacs Lisp function: Functions.        (line  560)
* bbdb-save; Emacs Lisp function:        Functions.          (line  568)
* bbdb-sc-attribution-field; Emacs Lisp variable: Variables<7>.
                                                             (line    6)
* bbdb-sc-get-attrib; Emacs Lisp function: Functions<14>.    (line   19)
* bbdb-sc-last-attrib; Emacs Lisp variable: Variables<7>.    (line   31)
* bbdb-sc-set-attrib; Emacs Lisp function: Functions<14>.    (line   24)
* bbdb-sc-update-attrib-p; Emacs Lisp variable: Variables<7>.
                                                             (line   15)
* bbdb-sc-update-attrib-p; Emacs Lisp variable <1>: Variables<7>.
                                                             (line   23)
* bbdb-sc-update-from; Emacs Lisp function: Functions<14>.   (line    6)
* bbdb-sc-update-records-p; Emacs Lisp variable: Variables<7>.
                                                             (line   10)
* bbdb-scan-property; Emacs Lisp function: Functions.        (line  574)
* bbdb-search-address; Emacs Lisp function: Functions<3>.    (line  447)
* bbdb-search-changed; Emacs Lisp function: Functions<3>.    (line  451)
* bbdb-search-duplicates; Emacs Lisp function: Functions<3>. (line  455)
* bbdb-search-invert-p; Emacs Lisp function: Functions<3>.   (line  468)
* bbdb-search-invert; Emacs Lisp function: Functions<3>.     (line  462)
* bbdb-search-mail; Emacs Lisp function: Functions<3>.       (line  473)
* bbdb-search-name; Emacs Lisp function: Functions<3>.       (line  477)
* bbdb-search-organization; Emacs Lisp function: Functions<3>.
                                                             (line  482)
* bbdb-search-phone; Emacs Lisp function: Functions<3>.      (line  486)
* bbdb-search-prog; Emacs Lisp function: Functions<3>.       (line  490)
* bbdb-search-read; Emacs Lisp function: Functions<3>.       (line  496)
* bbdb-search-xfields; Emacs Lisp function: Functions<3>.    (line  500)
* bbdb-select-message; Emacs Lisp function: Functions<10>.   (line  256)
* bbdb-sendmail-menu; Emacs Lisp function: Functions.        (line  579)
* bbdb-separator-alist; Emacs Lisp variable: Variables.      (line  947)
* bbdb-silent-internal; Emacs Lisp variable: Variables.      (line  960)
* bbdb-silent; Emacs Lisp variable:      Variables.          (line  953)
* bbdb-snarf-address-eu-country; Emacs Lisp variable: Variables<8>.
                                                             (line   65)
* bbdb-snarf-address-eu; Emacs Lisp function: Functions<15>. (line   51)
* bbdb-snarf-address-eu; Emacs Lisp function <1>: Functions<15>.
                                                             (line   61)
* bbdb-snarf-address-us-country; Emacs Lisp variable: Variables<8>.
                                                             (line   61)
* bbdb-snarf-address-us; Emacs Lisp function: Functions<15>. (line   47)
* bbdb-snarf-default-label-alist; Emacs Lisp variable: Variables<8>.
                                                             (line   37)
* bbdb-snarf-empty-lines; Emacs Lisp function: Functions<15>.
                                                             (line   10)
* bbdb-snarf-label; Emacs Lisp function: Functions<15>.      (line   27)
* bbdb-snarf-mail-regexp; Emacs Lisp variable: Variables<8>. (line   27)
* bbdb-snarf-mail; Emacs Lisp function:  Functions<15>.      (line   22)
* bbdb-snarf-name-mail; Emacs Lisp function: Functions<15>.  (line   18)
* bbdb-snarf-name-regexp; Emacs Lisp variable: Variables<8>. (line   32)
* bbdb-snarf-name; Emacs Lisp function:  Functions<15>.      (line   14)
* bbdb-snarf-notes; Emacs Lisp function: Functions<15>.      (line   76)
* bbdb-snarf-paragraph; Emacs Lisp function: Functions<15>.  (line   80)
* bbdb-snarf-phone-eu-regexp; Emacs Lisp variable: Variables<8>.
                                                             (line   50)
* bbdb-snarf-phone-eu; Emacs Lisp function: Functions<15>.   (line   37)
* bbdb-snarf-phone-nanp-regexp; Emacs Lisp variable: Variables<8>.
                                                             (line   44)
* bbdb-snarf-phone-nanp; Emacs Lisp function: Functions<15>. (line   31)
* bbdb-snarf-postcode-eu-regexp; Emacs Lisp variable: Variables<8>.
                                                             (line   55)
* bbdb-snarf-rule-alist; Emacs Lisp variable: Variables<8>.  (line    6)
* bbdb-snarf-rule-alist; Emacs Lisp variable <1>: Variables<8>.
                                                             (line   78)
* bbdb-snarf-rule-alist; Emacs Lisp variable <2>: Variables<8>.
                                                             (line   95)
* bbdb-snarf-rule-alist; Emacs Lisp variable <3>: Variables<8>.
                                                             (line  112)
* bbdb-snarf-rule-alist; Emacs Lisp variable <4>: Variables<8>.
                                                             (line  129)
* bbdb-snarf-rule-alist; Emacs Lisp variable <5>: Variables<8>.
                                                             (line  146)
* bbdb-snarf-rule-default; Emacs Lisp variable: Variables<8>.
                                                             (line   23)
* bbdb-snarf-streets; Emacs Lisp function: Functions<15>.    (line   43)
* bbdb-snarf-surrounding-space; Emacs Lisp function: Functions<15>.
                                                             (line    6)
* bbdb-snarf-url-regexp; Emacs Lisp variable: Variables<8>.  (line   73)
* bbdb-snarf-url; Emacs Lisp function:   Functions<15>.      (line   71)
* bbdb-snarf-url; Emacs Lisp variable:   Variables<8>.       (line   69)
* bbdb-snarf-yank; Emacs Lisp function:  Functions<15>.      (line   88)
* bbdb-snarf; Emacs Lisp function:       Functions<15>.      (line   95)
* bbdb-sort-addresses; Emacs Lisp function: Functions<3>.    (line  504)
* bbdb-sort-phones; Emacs Lisp function: Functions<3>.       (line  513)
* bbdb-sort-records; Emacs Lisp function: Functions.         (line  583)
* bbdb-sort-xfields; Emacs Lisp function: Functions<3>.      (line  522)
* bbdb-split; Emacs Lisp function:       Functions.          (line  589)
* bbdb-state-list; Emacs Lisp variable:  Variables.          (line  965)
* bbdb-street-list; Emacs Lisp variable: Variables.          (line  969)
* bbdb-string-trim; Emacs Lisp function: Functions.          (line  599)
* bbdb-timestamp-newer; Emacs Lisp function: Functions<3>.   (line  531)
* bbdb-timestamp-older; Emacs Lisp function: Functions<3>.   (line  536)
* bbdb-timestamp; Emacs Lisp function:   Functions.          (line  604)
* bbdb-toggle-records-layout; Emacs Lisp function: Functions<3>.
                                                             (line  541)
* bbdb-touch-records; Emacs Lisp function: Functions<3>.     (line  549)
* bbdb-transpose-fields; Emacs Lisp function: Functions<3>.  (line  555)
* bbdb-undisplay-records; Emacs Lisp function: Functions.    (line  611)
* bbdb-undocumented-variables; Emacs Lisp function: Functions<8>.
                                                             (line   63)
* bbdb-update-records-address; Emacs Lisp variable: Variables.
                                                             (line  973)
* bbdb-update-records-p; Emacs Lisp variable: Variables.     (line  978)
* bbdb-update-records; Emacs Lisp function: Functions<10>.   (line  262)
* bbdb-update-unchanged-records; Emacs Lisp variable: Variables.
                                                             (line  997)
* bbdb-user-mail-address-re; Emacs Lisp variable: Variables. (line 1004)
* bbdb-user-menu-commands; Emacs Lisp variable: Variables.   (line 1013)
* bbdb-version-date; Emacs Lisp constant: Constants<3>.      (line   10)
* bbdb-version; Emacs Lisp constant:     Constants<3>.       (line    6)
* bbdb-version; Emacs Lisp function:     Functions.          (line  616)
* bbdb-warn; Emacs Lisp function:        Functions.          (line  621)
* bbdb-wrap-column; Emacs Lisp variable: Variables.          (line 1021)
* bbdb-xfield-label-list; Emacs Lisp variable: Variables.    (line 1025)
* bbdb-xfields-sort-order; Emacs Lisp variable: Variables.   (line 1029)
* bbdb/gnus-nnimap-folder-list-from-bbdb; Emacs Lisp function: Functions<4>.
                                                             (line   11)
* bbdb/gnus-score-alist; Emacs Lisp variable: Variables<3>.  (line   23)
* bbdb/gnus-score-as-text; Emacs Lisp function: Functions<4>.
                                                             (line   53)
* bbdb/gnus-score-default-internal; Emacs Lisp variable: Variables<3>.
                                                             (line   17)
* bbdb/gnus-score-default; Emacs Lisp variable: Variables<3>.
                                                             (line   11)
* bbdb/gnus-score-field; Emacs Lisp variable: Variables<3>.  (line    6)
* bbdb/gnus-score-invalidate-alist; Emacs Lisp function: Functions<4>.
                                                             (line   47)
* bbdb/gnus-score-rebuild-alist; Emacs Lisp variable: Variables<3>.
                                                             (line   28)
* bbdb/gnus-score; Emacs Lisp function:  Functions<4>.       (line   39)
* bbdb/gnus-split-crosspost-default; Emacs Lisp variable: Variables<3>.
                                                             (line   47)
* bbdb/gnus-split-default-group; Emacs Lisp variable: Variables<3>.
                                                             (line   34)
* bbdb/gnus-split-method; Emacs Lisp function: Functions<4>. (line   57)
* bbdb/gnus-split-myaddr-regexp; Emacs Lisp variable: Variables<3>.
                                                             (line   42)
* bbdb/gnus-split-nomatch-function; Emacs Lisp variable: Variables<3>.
                                                             (line   54)
* bbdb/gnus-split-private-field; Emacs Lisp variable: Variables<3>.
                                                             (line   61)
* bbdb/gnus-split-public-field; Emacs Lisp variable: Variables<3>.
                                                             (line   67)
* bbdb/gnus-split-to-group; Emacs Lisp function: Functions<4>.
                                                             (line   64)
* bbdb/mh-header; Emacs Lisp function:   Functions<7>.       (line    6)
* bbdb/rmail-header; Emacs Lisp function: Functions<13>.     (line   10)
* bbdb/rmail-new-flag; Emacs Lisp function: Functions<13>.   (line    6)
* bbdb/vm-auto-add-label-field; Emacs Lisp variable: Variables<9>.
                                                             (line   32)
* bbdb/vm-auto-add-label-list; Emacs Lisp variable: Variables<9>.
                                                             (line   24)
* bbdb/vm-auto-add-label; Emacs Lisp function: Functions<16>.
                                                             (line   41)
* bbdb/vm-auto-folder-field; Emacs Lisp variable: Variables<9>.
                                                             (line   11)
* bbdb/vm-auto-folder-headers; Emacs Lisp variable: Variables<9>.
                                                             (line    6)
* bbdb/vm-auto-folder; Emacs Lisp function: Functions<16>.   (line   11)
* bbdb/vm-virtual-folder-field; Emacs Lisp variable: Variables<9>.
                                                             (line   15)
* bbdb/vm-virtual-folder; Emacs Lisp function: Functions<16>.
                                                             (line   24)
* bbdb/vm-virtual-real-folders; Emacs Lisp variable: Variables<9>.
                                                             (line   19)
* bbdb; Emacs Lisp function:             Functions<3>.       (line  442)
* vm-summary-function-B; Emacs Lisp function: Functions<16>. (line    6)



Tag Table:
Node: Top322
Ref: index doc520
Ref: 0520
Node: Introduction4129
Ref: introduction introduction4209
Ref: 14209
Ref: introduction doc4209
Ref: 24209
Ref: introduction welcome-to-bbdbv3-s-documentation4209
Ref: 34209
Node: History4932
Ref: introduction history5017
Ref: 45017
Node: What's new in BBDB3 ?5372
Ref: introduction what-s-new-in-bbdb35486
Ref: 55486
Node: Where to get BBDB3 ?6327
Ref: introduction where-to-get-bbdb36442
Ref: 66442
Ref: Where to get BBDB3 ?-Footnote-16903
Node: Building6932
Ref: introduction building7039
Ref: 77039
Ref: introduction melpa7039
Ref: 87039
Node: Configuration7437
Ref: introduction configuration7533
Ref: 97533
Node: Upgrading7754
Ref: introduction upgrading7833
Ref: a7833
Node: Tutorial8185
Ref: tutorial doc8266
Ref: b8266
Ref: tutorial tutorial8266
Ref: c8266
Node: Creating an entry8923
Ref: tutorial creating-an-entry9002
Ref: d9002
Node: Searching9467
Ref: tutorial searching9563
Ref: e9563
Node: Updating10331
Ref: tutorial updating10423
Ref: f10423
Node: Adding fields10825
Ref: tutorial adding-fields10927
Ref: 1010927
Node: Searching on fields12555
Ref: tutorial searching-on-fields12659
Ref: 1112659
Node: Duplicates14037
Ref: tutorial duplicates14143
Ref: 1214143
Node: Extended Fields15395
Ref: tutorial extended-fields15495
Ref: 1315495
Node: Sending email16369
Ref: tutorial sending-email16476
Ref: 1416476
Node: Omitting an entry16999
Ref: tutorial omitting-an-entry17107
Ref: 1517107
Node: Deleting a field17445
Ref: tutorial deleting-a-field17557
Ref: 1617557
Node: Deleting an entry17988
Ref: tutorial deleting-an-entry18110
Ref: 1718110
Node: Birthdays and anniversaries18473
Ref: tutorial birthdays-and-anniversaries18591
Ref: 1818591
Node: Housekeeping19915
Ref: tutorial housekeeping20024
Ref: 1920024
Node: Snarfing20907
Ref: tutorial snarfing20997
Ref: 1a20997
Node: Printing21571
Ref: tutorial printing21656
Ref: 1b21656
Node: Dialing21956
Ref: tutorial dialing22024
Ref: 1c22024
Node: Gnus22098
Ref: gnus gnus22171
Ref: 1d22171
Ref: gnus doc22171
Ref: 1e22171
Node: What version of Gnus do I need ?23029
Ref: gnus what-version-of-gnus-do-i-need23135
Ref: 1f23135
Node: Automatically add entries23282
Ref: gnus automatically-add-entries23422
Ref: 2023422
Node: Whitelists and blacklists24984
Ref: gnus whitelists-and-blacklists25105
Ref: 2125105
Node: Use full name25651
Ref: gnus use-full-name25764
Ref: 2225764
Node: Gnus Summary Line26276
Ref: gnus gnus-summary-line26355
Ref: 2326355
Node: Mail26824
Ref: mail mail26897
Ref: 2426897
Ref: mail doc26897
Ref: 2526897
Node: MH-E27328
Ref: mail mh-e27385
Ref: 2627385
Node: mu4e27499
Ref: mail mu4e27572
Ref: 2727572
Node: notmuch27668
Ref: mail notmuch27742
Ref: 2827742
Node: rmail27824
Ref: mail rmail27896
Ref: 2927896
Node: VM27993
Ref: mail vm28068
Ref: 2a28068
Node: Wanderlust28122
Ref: mail wanderlust28183
Ref: 2b28183
Node: Org Mode28263
Ref: orgmode org-mode28341
Ref: 2c28341
Ref: orgmode doc28341
Ref: 2d28341
Node: Agenda28386
Ref: orgmode agenda28436
Ref: 2e28436
Node: Utilities28732
Ref: utilities doc28825
Ref: 2f28825
Ref: utilities utilities28825
Ref: 3028825
Node: Import28884
Ref: utilities import28950
Ref: 3128950
Node: Export28998
Ref: utilities export29064
Ref: 3229064
Node: Elisp Documentation29193
Ref: elisp doc29281
Ref: 3329281
Ref: elisp elisp-documentation29281
Ref: 3429281
Node: Key Index29519
Ref: elisp key-index29605
Ref: 3529605
Node: Command Index29634
Ref: elisp command-index29743
Ref: 3629743
Node: Function Index29780
Ref: elisp function-index29894
Ref: 3729894
Node: Variable Index29933
Ref: elisp variable-index30039
Ref: 3830039
Node: Hooks30078
Ref: elisp hooks30161
Ref: 3930161
Node: FAQ30182
Ref: faq faq30281
Ref: 3a30281
Ref: faq doc30281
Ref: 3b30281
Node: What version of Emacs do I need ?30541
Ref: faq what-version-of-emacs-do-i-need30666
Ref: 3c30666
Node: How do you automatically save BBDB on exit ?30807
Ref: faq how-do-you-automatically-save-bbdb-on-exit30968
Ref: 3d30968
Node: How to get help with BBDB ?31067
Ref: faq how-to-get-help-with-bbdb31230
Ref: 3e31230
Node: How to report a problem with BBDB ?31515
Ref: faq how-to-report-a-problem-with-bbdb31657
Ref: 3f31657
Node: File format information31950
Ref: faq file-format-information32076
Ref: 4032076
Node: Tuning BBDB32340
Ref: faq tuning-bbdb32453
Ref: 4132453
Node: Incorrect BBDB version34018
Ref: faq incorrect-bbdb-version34099
Ref: 4234099
Node: Third party packages34895
Ref: thirdparty third-party-packages34992
Ref: 4334992
Ref: thirdparty doc34992
Ref: 4434992
Node: Melpa35294
Ref: thirdparty melpa35368
Ref: 4535368
Node: Misc37353
Ref: thirdparty misc37427
Ref: 4637427
Node: Lisp library bbdb37517
Ref: bbdb lisp-library-bbdb37634
Ref: 4737634
Ref: bbdb doc37634
Ref: 4837634
Node: Functions37741
Ref: bbdb functions37821
Ref: 4937821
Ref: bbdb el function bbdb-address-continental-p37852
Ref: 4a37852
Ref: bbdb el function bbdb-after-save38207
Ref: 4e38207
Ref: bbdb el function bbdb-before-save38338
Ref: 5038338
Ref: bbdb el function bbdb-buffer38472
Ref: 5138472
Ref: bbdb el function bbdb-canonicalize-mail-138826
Ref: 5338826
Ref: bbdb el function bbdb-change-record39082
Ref: 5539082
Ref: bbdb el function bbdb-check-name39564
Ref: 5639564
Ref: bbdb el function bbdb-check-type39903
Ref: 5839903
Ref: bbdb el function bbdb-clean-address-components40277
Ref: 5940277
Ref: bbdb el function bbdb-concat40650
Ref: 5b40650
Ref: bbdb el function bbdb-creation-date41111
Ref: 5f41111
Ref: bbdb el function bbdb-current-field41305
Ref: 6141305
Ref: bbdb el function bbdb-current-record41380
Ref: 6241380
Ref: bbdb el function bbdb-decompose-bbdb-address41533
Ref: 6341533
Ref: bbdb el function bbdb-delete-record-internal42257
Ref: 6442257
Ref: bbdb el function bbdb-display-list42463
Ref: 6542463
Ref: bbdb el function bbdb-display-name-organization42969
Ref: 6742969
Ref: bbdb el function bbdb-display-record-multi-line43415
Ref: 6943415
Ref: bbdb el function bbdb-display-record-one-line43675
Ref: 6b43675
Ref: bbdb el function bbdb-display-record43931
Ref: 6c43931
Ref: bbdb el function bbdb-display-records44308
Ref: 6e44308
Ref: bbdb el function bbdb-divide-name45006
Ref: 7045006
Ref: bbdb el function bbdb-editable45221
Ref: 7145221
Ref: bbdb el function bbdb-empty-record45402
Ref: 7245402
Ref: bbdb el function bbdb-extract-address-components45740
Ref: 7345740
Ref: bbdb el function bbdb-field-menu46114
Ref: 7446114
Ref: bbdb el function bbdb-format-address46210
Ref: 7546210
Ref: bbdb el function bbdb-format-address-default46407
Ref: 7646407
Ref: bbdb el function bbdb-gethash46852
Ref: 7746852
Ref: bbdb el function bbdb-goto-first-record47140
Ref: 7a47140
Ref: bbdb el function bbdb-hash-p47254
Ref: 7b47254
Ref: bbdb el function bbdb-hash-record47486
Ref: 7c47486
Ref: bbdb el function bbdb-hash-update47713
Ref: 7d47713
Ref: bbdb el function bbdb-initialize47859
Ref: 7e47859
Ref: bbdb el function bbdb-insert-field-menu49430
Ref: 8149430
Ref: bbdb el function bbdb-insert-record-internal49528
Ref: 8249528
Ref: bbdb el function bbdb-layout-get-option49761
Ref: 8349761
Ref: bbdb el function bbdb-list-strings49902
Ref: 8449902
Ref: bbdb el function bbdb-merge-concat-remove-duplicates50010
Ref: 8550010
Ref: bbdb el function bbdb-merge-concat50145
Ref: 8650145
Ref: bbdb el function bbdb-merge-lists50303
Ref: 8750303
Ref: bbdb el function bbdb-merge-string-least50563
Ref: 8850563
Ref: bbdb el function bbdb-merge-string-most50700
Ref: 8950700
Ref: bbdb el function bbdb-merge-xfield50840
Ref: 8a50840
Ref: bbdb el function bbdb-message-clean-name-default51190
Ref: 8c51190
Ref: bbdb el function bbdb-mouse-menu51377
Ref: 8d51377
Ref: bbdb el variable bbdb-message-clean-name-function52555
Ref: 5a52555
Ref: bbdb el function bbdb-multiple-buffers-default52838
Ref: 8e52838
Ref: bbdb el function bbdb-next-field53028
Ref: 9053028
Ref: bbdb el function bbdb-next-record53146
Ref: 9153146
Ref: bbdb el function bbdb-overwrite-record-internal53283
Ref: 9253283
Ref: bbdb el function bbdb-parse-postcode53520
Ref: 9353520
Ref: bbdb el function bbdb-parse-records53681
Ref: 9553681
Ref: bbdb el function bbdb-phone-string53888
Ref: 9653888
Ref: bbdb el function bbdb-pop-up-window53979
Ref: 6f53979
Ref: bbdb el function bbdb-pop-up-window-simple54626
Ref: 9a54626
Ref: bbdb el function bbdb-prev-field54843
Ref: 9c54843
Ref: bbdb el function bbdb-prev-record54967
Ref: 9d54967
Ref: bbdb el function bbdb-puthash55110
Ref: 9e55110
Ref: bbdb el function bbdb-puthash-mail55287
Ref: 9f55287
Ref: bbdb el function bbdb-read-string55391
Ref: a055391
Ref: bbdb el function bbdb-record-field55751
Ref: a155751
Ref: bbdb el function bbdb-record-name-lf56834
Ref: a356834
Ref: bbdb el function bbdb-record-name57053
Ref: a457053
Ref: bbdb el function bbdb-record-set-field57269
Ref: a257269
Ref: bbdb el function bbdb-record-set-name58519
Ref: a558519
Ref: bbdb el function bbdb-record-set-sortkey58787
Ref: a658787
Ref: bbdb el function bbdb-record-set-xfield58898
Ref: a758898
Ref: bbdb el function bbdb-record-xfield-intern59093
Ref: a859093
Ref: bbdb el function bbdb-record-xfield-string59252
Ref: a959252
Ref: bbdb el function bbdb-redisplay-record-globally59412
Ref: aa59412
Ref: bbdb el function bbdb-redisplay-record59710
Ref: ab59710
Ref: bbdb el function bbdb-remhash59991
Ref: ac59991
Ref: bbdb el function bbdb-revert-buffer60163
Ref: ad60163
Ref: bbdb el function bbdb-save60565
Ref: af60565
Ref: bbdb el function bbdb-scan-property60773
Ref: b060773
Ref: bbdb el function bbdb-sendmail-menu60951
Ref: b160951
Ref: bbdb el function bbdb-sort-records61041
Ref: b261041
Ref: bbdb el function bbdb-split61248
Ref: 5e61248
Ref: bbdb el function bbdb-string-trim61732
Ref: b361732
Ref: bbdb el function bbdb-timestamp61933
Ref: b461933
Ref: bbdb el function bbdb-undisplay-records62222
Ref: b662222
Ref: bbdb el function bbdb-version62422
Ref: b762422
Ref: bbdb el function bbdb-warn62563
Ref: b862563
Node: Variables62694
Ref: bbdb variables62791
Ref: b962791
Ref: bbdb el variable bbdb-accept-message-alist62938
Ref: bb62938
Ref: bbdb el variable bbdb-add-aka63513
Ref: bd63513
Ref: bbdb el variable bbdb-add-mails64104
Ref: bf64104
Ref: bbdb el variable bbdb-add-name65097
Ref: be65097
Ref: bbdb el variable bbdb-address-format-list65974
Ref: 4c65974
Ref: bbdb el variable bbdb-address-label-list67862
Ref: c367862
Ref: bbdb el variable bbdb-allow-duplicates67942
Ref: 5767942
Ref: bbdb el variable bbdb-annotate-field68137
Ref: c468137
Ref: bbdb el variable bbdb-auto-notes-ignore-headers68671
Ref: c668671
Ref: bbdb el variable bbdb-auto-notes-ignore-messages69121
Ref: c869121
Ref: bbdb el variable bbdb-auto-notes-rules70149
Ref: cc70149
Ref: bbdb el variable bbdb-auto-notes-rules-expanded73669
Ref: d173669
Ref: bbdb el variable bbdb-auto-revert73770
Ref: ae73770
Ref: bbdb el variable bbdb-buffer-name74110
Ref: d274110
Ref: bbdb el variable bbdb-canonical-hosts74174
Ref: d374174
Ref: bbdb el variable bbdb-canonicalize-mail-function74546
Ref: 5474546
Ref: bbdb el variable bbdb-case-fold-search75126
Ref: d475126
Ref: bbdb el variable bbdb-changed-records75375
Ref: d575375
Ref: bbdb el variable bbdb-check-auto-save-file75555
Ref: d775555
Ref: bbdb el variable bbdb-check-postcode75730
Ref: 9475730
Ref: bbdb el variable bbdb-city-list75942
Ref: d975942
Ref: bbdb el variable bbdb-complete-mail-allow-cycling76140
Ref: db76140
Ref: bbdb el variable bbdb-completion-display-record76276
Ref: dc76276
Ref: bbdb el variable bbdb-completion-list76419
Ref: 7976419
Ref: bbdb el variable bbdb-continental-postcode-regexp76912
Ref: 4b76912
Ref: bbdb el variable bbdb-country-list77180
Ref: dd77180
Ref: bbdb el variable bbdb-debug77253
Ref: de77253
Ref: bbdb el variable bbdb-dedicated-window77411
Ref: 9b77411
Ref: bbdb el variable bbdb-default-area-code77602
Ref: df77602
Ref: bbdb el variable bbdb-default-country77746
Ref: e077746
Ref: bbdb el variable bbdb-default-domain77834
Ref: e177834
Ref: bbdb el variable bbdb-default-label-list78207
Ref: e378207
Ref: bbdb el variable bbdb-default-separator78306
Ref: 5d78306
Ref: bbdb el variable bbdb-default-xfield78508
Ref: d078508
Ref: bbdb el variable bbdb-dial-function78628
Ref: e478628
Ref: bbdb el variable bbdb-dial-local-prefix79009
Ref: e679009
Ref: bbdb el variable bbdb-dial-local-prefix-alist79437
Ref: e779437
Ref: bbdb el variable bbdb-dial-long-distance-prefix79781
Ref: e879781
Ref: bbdb el variable bbdb-edit-foo80216
Ref: e980216
Ref: bbdb el variable bbdb-end-marker81201
Ref: ea81201
Ref: bbdb el variable bbdb-file81305
Ref: 4f81305
Ref: bbdb el variable bbdb-file-remote81390
Ref: 5281390
Ref: bbdb el variable bbdb-file-remote-save-always81907
Ref: eb81907
Ref: bbdb el variable bbdb-hashtable82082
Ref: 7882082
Ref: bbdb el variable bbdb-horiz-pop-up-window-size82234
Ref: 9982234
Ref: bbdb el variable bbdb-ignore-message-alist82738
Ref: bc82738
Ref: bbdb el variable bbdb-ignore-redundant-mails83343
Ref: c183343
Ref: bbdb el variable bbdb-image84454
Ref: ec84454
Ref: bbdb el variable bbdb-image-path85151
Ref: ed85151
Ref: bbdb el variable bbdb-image-suffixes85251
Ref: ee85251
Ref: bbdb el variable bbdb-info-file85361
Ref: ef85361
Ref: bbdb el variable bbdb-init-forms85467
Ref: f085467
Ref: bbdb el variable bbdb-lastname-prefixes85550
Ref: f185550
Ref: bbdb el variable bbdb-lastname-re85748
Ref: f285748
Ref: bbdb el variable bbdb-lastname-suffixes85899
Ref: f385899
Ref: bbdb el variable bbdb-lastname-suffix-re86143
Ref: f486143
Ref: bbdb el variable bbdb-layout-alist86295
Ref: 6a86295
Ref: bbdb el variable bbdb-layout88363
Ref: 6d88363
Ref: bbdb el variable bbdb-legal-postcodes88421
Ref: d888421
Ref: bbdb el variable bbdb-mail-alias88602
Ref: f588602
Ref: bbdb el variable bbdb-mail-alias-field89114
Ref: f689114
Ref: bbdb el variable bbdb-mail-aliases-need-rebuilt89293
Ref: f889293
Ref: bbdb el variable bbdb-mail-avoid-redundancy89390
Ref: f989390
Ref: bbdb el variable bbdb-mail-name-format89615
Ref: fa89615
Ref: bbdb el variable bbdb-mail-name90048
Ref: fb90048
Ref: bbdb el variable bbdb-mail-user-agent90454
Ref: fc90454
Ref: bbdb el variable bbdb-merge-xfield-function-alist90594
Ref: 8b90594
Ref: bbdb el variable bbdb-message-all-addresses90816
Ref: fd90816
Ref: bbdb el variable bbdb-message-headers91242
Ref: cf91242
Ref: bbdb el variable bbdb-message-mail-as-name91506
Ref: ff91506
Ref: bbdb el variable bbdb-message-try-all-headers91630
Ref: 10091630
Ref: bbdb el variable bbdb-mua-auto-update-p92258
Ref: 10192258
Ref: bbdb el variable bbdb-mua-edit-field93495
Ref: 10493495
Ref: bbdb el variable bbdb-mua-pop-up94070
Ref: 9894070
Ref: bbdb el variable bbdb-mua-pop-up-window-size94400
Ref: 10694400
Ref: bbdb el variable bbdb-mua-summary-mark94844
Ref: 10794844
Ref: bbdb el variable bbdb-mua-summary-mark-field95149
Ref: 10995149
Ref: bbdb el variable bbdb-mua-summary-mark-format-letter95518
Ref: 10a95518
Ref: bbdb el variable bbdb-mua-summary-unification-list96203
Ref: 10b96203
Ref: bbdb el variable bbdb-mua-summary-unify-format-letter96982
Ref: 10c96982
Ref: bbdb el variable bbdb-mua-update-interactive-p97665
Ref: 10d97665
Ref: bbdb el variable bbdb-multiple-buffers98827
Ref: 8f98827
Ref: bbdb el variable bbdb-modeline-info99102
Ref: 10e99102
Ref: bbdb el variable bbdb-mode-map99577
Ref: 11199577
Ref: bbdb el variable bbdb-name-face-alist99706
Ref: 6899706
Ref: bbdb el variable bbdb-name-format100159
Ref: 112100159
Ref: bbdb el variable bbdb-new-mails-primary100516
Ref: c0100516
Ref: bbdb el variable bbdb-offer-to-create101405
Ref: 114101405
Ref: bbdb el variable bbdb-organization-list101551
Ref: 116101551
Ref: bbdb el variable bbdb-phone-label-list101633
Ref: 117101633
Ref: bbdb el variable bbdb-phone-style101709
Ref: 118101709
Ref: bbdb el variable bbdb-postcode-list102062
Ref: 119102062
Ref: bbdb el variable bbdb-pop-up-layout102137
Ref: 11a102137
Ref: bbdb el variable bbdb-pop-up-window-size102237
Ref: 97102237
Ref: bbdb el variable bbdb-read-name-format102694
Ref: 113102694
Ref: bbdb el variable bbdb-read-only103028
Ref: 11b103028
Ref: bbdb el variable bbdb-records103247
Ref: 11c103247
Ref: bbdb el variable bbdb-separator-alist103722
Ref: 5c103722
Ref: bbdb el variable bbdb-silent103943
Ref: 11d103943
Ref: bbdb el variable bbdb-silent-internal104256
Ref: 11e104256
Ref: bbdb el variable bbdb-state-list104396
Ref: 11f104396
Ref: bbdb el variable bbdb-street-list104464
Ref: 120104464
Ref: bbdb el variable bbdb-update-records-address104534
Ref: c9104534
Ref: bbdb el variable bbdb-update-records-p104756
Ref: ce104756
Ref: bbdb el variable bbdb-update-unchanged-records105791
Ref: 121105791
Ref: bbdb el variable bbdb-user-mail-address-re106169
Ref: cb106169
Ref: bbdb el variable bbdb-user-menu-commands106655
Ref: 122106655
Ref: bbdb el variable bbdb-wrap-column107002
Ref: 66107002
Ref: bbdb el variable bbdb-xfield-label-list107104
Ref: 123107104
Ref: bbdb el variable bbdb-xfields-sort-order107177
Ref: 124107177
Node: Hooks<2>107465
Ref: bbdb hooks107544
Ref: 125107544
Ref: bbdb el variable bbdb-after-change-hook107567
Ref: 126107567
Ref: bbdb el variable bbdb-after-read-db-hook107906
Ref: 127107906
Ref: bbdb el variable bbdb-after-save-hook108093
Ref: 128108093
Ref: bbdb el variable bbdb-before-save-hook108181
Ref: 129108181
Ref: bbdb el variable bbdb-change-hook108271
Ref: b5108271
Ref: bbdb el variable bbdb-complete-mail-hook108569
Ref: 12a108569
Ref: bbdb el variable bbdb-create-hook108666
Ref: 60108666
Ref: bbdb el variable bbdb-display-hook109176
Ref: 12b109176
Ref: bbdb el variable bbdb-initialize-hook109252
Ref: 12c109252
Ref: bbdb el variable bbdb-mail-abbrev-expand-hook109379
Ref: 12d109379
Ref: bbdb el variable bbdb-mode-hook109585
Ref: 12e109585
Ref: bbdb el variable bbdb-notice-mail-hook109669
Ref: cd109669
Ref: bbdb el variable bbdb-notice-record-hook110655
Ref: 12f110655
Node: Lisp library bbdb-anniv111205
Ref: bbdb-anniv doc111323
Ref: 130111323
Ref: bbdb-anniv lisp-library-bbdb-anniv111323
Ref: 131111323
Node: Functions<2>111448
Ref: bbdb-anniv functions111540
Ref: 132111540
Ref: bbdb-anniv el function bbdb-anniv-diary-entries111571
Ref: 133111571
Node: Variables<2>111898
Ref: bbdb-anniv variables111990
Ref: 134111990
Ref: bbdb-anniv el variable bbdb-anniv-alist112021
Ref: 135112021
Node: Lisp library bbdb-com112589
Ref: bbdb-com lisp-library-bbdb-com112712
Ref: 136112712
Ref: bbdb-com doc112712
Ref: 137112712
Node: Commands112819
Ref: bbdb-com commands112905
Ref: 138112905
Ref: bbdb-com el function bbdb-do-all-records112949
Ref: 110112949
Node: Functions<3>113238
Ref: bbdb-com functions113324
Ref: 139113324
Ref: bbdb-com el function bbdb-add-mail-alias113355
Ref: 13a113355
Ref: bbdb-com el function bbdb-append-display113924
Ref: ba113924
Ref: bbdb-com el function bbdb-append-display-p114206
Ref: 13b114206
Ref: bbdb-com el function bbdb-browse-url114305
Ref: 13c114305
Ref: bbdb-com el function bbdb-complete-mail114665
Ref: da114665
Ref: bbdb-com el function bbdb-complete-mail-cleanup115980
Ref: 13e115980
Ref: bbdb-com el function bbdb-completing-read-mails116154
Ref: 13f116154
Ref: bbdb-com el function bbdb-completing-read-record116316
Ref: 140116316
Ref: bbdb-com el function bbdb-completing-read-records116714
Ref: 141116714
Ref: bbdb-com el function bbdb-completion-predicate117020
Ref: 142117020
Ref: bbdb-com el function bbdb-compose-mail117186
Ref: 143117186
Ref: bbdb-com el function bbdb-copy-fields-as-kill117411
Ref: 144117411
Ref: bbdb-com el function bbdb-copy-records-as-kill117865
Ref: 145117865
Ref: bbdb-com el function bbdb-create118073
Ref: 146118073
Ref: bbdb-com el function bbdb-creation-newer118276
Ref: 147118276
Ref: bbdb-com el function bbdb-creation-no-change118432
Ref: 148118432
Ref: bbdb-com el function bbdb-creation-older118559
Ref: 149118559
Ref: bbdb-com el function bbdb-delete-field-or-record118715
Ref: 14a118715
Ref: bbdb-com el function bbdb-delete-records119133
Ref: 14b119133
Ref: bbdb-com el function bbdb-delete-redundant-mails119404
Ref: 14c119404
Ref: bbdb-com el function bbdb-dial-number120335
Ref: e5120335
Ref: bbdb-com el function bbdb-dial120610
Ref: 14d120610
Ref: bbdb-com el function bbdb-display-all-records120911
Ref: 14e120911
Ref: bbdb-com el function bbdb-display-current-record121135
Ref: 14f121135
Ref: bbdb-com el function bbdb-display-records-completely121283
Ref: 150121283
Ref: bbdb-com el function bbdb-display-records-with-layout121551
Ref: 151121551
Ref: bbdb-com el function bbdb-do-records122076
Ref: 152122076
Ref: bbdb-com el function bbdb-dwim-mail122426
Ref: 13d122426
Ref: bbdb-com el function bbdb-edit-address-default123253
Ref: c2123253
Ref: bbdb-com el function bbdb-edit-address-street123545
Ref: 153123545
Ref: bbdb-com el function bbdb-edit-field123619
Ref: 154123619
Ref: bbdb-com el function bbdb-fix-records124173
Ref: 155124173
Ref: bbdb-com el function bbdb-get-mail-aliases124365
Ref: 156124365
Ref: bbdb-com el function bbdb-get-records124457
Ref: 157124457
Ref: bbdb-com el function bbdb-grab-url124592
Ref: 158124592
Ref: bbdb-com el function bbdb-ident-point124672
Ref: 159124672
Ref: bbdb-com el function bbdb-insert-field125091
Ref: e2125091
Ref: bbdb-com el function bbdb-list-transpose125365
Ref: 15b125365
Ref: bbdb-com el function bbdb-mail-address125524
Ref: 15c125524
Ref: bbdb-com el function bbdb-mail-aliases126173
Ref: f7126173
Ref: bbdb-com el function bbdb-mail127031
Ref: 15d127031
Ref: bbdb-com el function bbdb-mail-yank127574
Ref: 15e127574
Ref: bbdb-com el function bbdb-merge-records127823
Ref: 15f127823
Ref: bbdb-com el function bbdb-message-search128349
Ref: 160128349
Ref: bbdb-com el function bbdb-omit-record128867
Ref: 161128867
Ref: bbdb-com el function bbdb-parse-phone129053
Ref: 162129053
Ref: bbdb-com el function bbdb-prefix-message130540
Ref: 163130540
Ref: bbdb-com el function bbdb-read-field130637
Ref: 15a130637
Ref: bbdb-com el function bbdb-read-organization131136
Ref: 164131136
Ref: bbdb-com el function bbdb-read-record131215
Ref: 165131215
Ref: bbdb-com el function bbdb-read-xfield131443
Ref: 166131443
Ref: bbdb-com el function bbdb-record-edit-address131599
Ref: 167131599
Ref: bbdb-com el function bbdb-record-edit-phone132036
Ref: 168132036
Ref: bbdb-com el function bbdb-record-list132129
Ref: 169132129
Ref: bbdb-com el function bbdb132363
Ref: 16a132363
Ref: bbdb-com el function bbdb-search-address132537
Ref: 16b132537
Ref: bbdb-com el function bbdb-search-changed132674
Ref: d6132674
Ref: bbdb-com el function bbdb-search-duplicates132800
Ref: 16c132800
Ref: bbdb-com el function bbdb-search-invert133145
Ref: 10f133145
Ref: bbdb-com el function bbdb-search-invert-p133372
Ref: 16d133372
Ref: bbdb-com el function bbdb-search-mail133548
Ref: 16e133548
Ref: bbdb-com el function bbdb-search-name133680
Ref: 16f133680
Ref: bbdb-com el function bbdb-search-organization133842
Ref: 170133842
Ref: bbdb-com el function bbdb-search-phone133988
Ref: 171133988
Ref: bbdb-com el function bbdb-search-prog134121
Ref: 172134121
Ref: bbdb-com el function bbdb-search-read134340
Ref: 173134340
Ref: bbdb-com el function bbdb-search-xfields134442
Ref: 174134442
Ref: bbdb-com el function bbdb-sort-addresses134578
Ref: 175134578
Ref: bbdb-com el function bbdb-sort-phones135018
Ref: 176135018
Ref: bbdb-com el function bbdb-sort-xfields135452
Ref: 177135452
Ref: bbdb-com el function bbdb-timestamp-newer135919
Ref: 178135919
Ref: bbdb-com el function bbdb-timestamp-older136072
Ref: 179136072
Ref: bbdb-com el function bbdb-toggle-records-layout136225
Ref: 17a136225
Ref: bbdb-com el function bbdb-touch-records136587
Ref: 17b136587
Ref: bbdb-com el function bbdb-transpose-fields136837
Ref: 17c136837
Node: Lisp library bbdb-gnus137532
Ref: bbdb-gnus lisp-library-bbdb-gnus137656
Ref: 17d137656
Ref: bbdb-gnus doc137656
Ref: 17e137656
Node: Functions<4>137779
Ref: bbdb-gnus functions137870
Ref: 17f137870
Ref: bbdb-gnus el function bbdb-insinuate-gnus137901
Ref: 180137901
Ref: bbdb-gnus el function bbdb/gnus-nnimap-folder-list-from-bbdb138043
Ref: 181138043
Ref: bbdb-gnus el function bbdb/gnus-score139145
Ref: 182139145
Ref: bbdb-gnus el function bbdb/gnus-score-invalidate-alist139554
Ref: 183139554
Ref: bbdb-gnus el function bbdb/gnus-score-as-text139812
Ref: 185139812
Ref: bbdb-gnus el function bbdb/gnus-split-method139920
Ref: 186139920
Ref: bbdb-gnus el function bbdb/gnus-split-to-group140261
Ref: 187140261
Node: Variables<3>140484
Ref: bbdb-gnus variables140575
Ref: 188140575
Ref: bbdb-gnus el variable bbdb/gnus-score-field140606
Ref: 189140606
Ref: bbdb-gnus el variable bbdb/gnus-score-default140790
Ref: 18a140790
Ref: bbdb-gnus el variable bbdb/gnus-score-default-internal141021
Ref: 18b141021
Ref: bbdb-gnus el variable bbdb/gnus-score-alist141271
Ref: 18c141271
Ref: bbdb-gnus el variable bbdb/gnus-score-rebuild-alist141435
Ref: 184141435
Ref: bbdb-gnus el variable bbdb/gnus-split-default-group141671
Ref: 18d141671
Ref: bbdb-gnus el variable bbdb/gnus-split-myaddr-regexp142082
Ref: 18f142082
Ref: bbdb-gnus el variable bbdb/gnus-split-crosspost-default142231
Ref: 18e142231
Ref: bbdb-gnus el variable bbdb/gnus-split-nomatch-function142528
Ref: 190142528
Ref: bbdb-gnus el variable bbdb/gnus-split-private-field142833
Ref: 191142833
Ref: bbdb-gnus el variable bbdb/gnus-split-public-field143107
Ref: 192143107
Node: Lisp library bbdb-ispell143565
Ref: bbdb-ispell lisp-library-bbdb-ispell143693
Ref: 193143693
Ref: bbdb-ispell doc143693
Ref: 194143693
Node: Functions<5>143820
Ref: bbdb-ispell functions143913
Ref: 195143913
Ref: bbdb-ispell el function bbdb-ispell-export143944
Ref: 196143944
Ref: bbdb-ispell el function bbdb-ispell-collect-words144038
Ref: 197144038
Node: Variables<4>144170
Ref: bbdb-ispell variables144263
Ref: 199144263
Ref: bbdb-ispell el variable bbdb-ispell-dictionary-list144294
Ref: 19a144294
Ref: bbdb-ispell el variable bbdb-ispell-field-list144472
Ref: 19b144472
Ref: bbdb-ispell el variable bbdb-ispell-min-word-length144592
Ref: 19c144592
Ref: bbdb-ispell el variable bbdb-ispell-ignore-re144683
Ref: 19d144683
Ref: bbdb-ispell el variable bbdb-ispell-word-list144767
Ref: 198144767
Node: Lisp library bbdb-message144858
Ref: bbdb-message doc144985
Ref: 19e144985
Ref: bbdb-message lisp-library-bbdb-message144985
Ref: 19f144985
Node: Functions<6>145086
Ref: bbdb-message functions145159
Ref: 1a0145159
Ref: bbdb-message el function bbdb-insinuate-message145190
Ref: 1a1145190
Node: Lisp library bbdb-mhe145343
Ref: bbdb-mhe lisp-library-bbdb-mhe145471
Ref: 1a2145471
Ref: bbdb-mhe doc145471
Ref: 1a3145471
Node: Functions<7>145564
Ref: bbdb-mhe functions145633
Ref: 1a4145633
Ref: bbdb-mhe el function bbdb/mh-header145664
Ref: 1a5145664
Ref: bbdb-mhe el function bbdb-insinuate-mh145830
Ref: 1a6145830
Node: Lisp library bbdb-migrate145992
Ref: bbdb-migrate lisp-library-bbdb-migrate146117
Ref: 1a7146117
Ref: bbdb-migrate doc146117
Ref: 1a8146117
Node: Constants146233
Ref: bbdb-migrate constants146324
Ref: 1a9146324
Ref: bbdb-migrate el variable bbdb-migration-spec146355
Ref: 1aa146355
Node: Functions<8>146510
Ref: bbdb-migrate functions146601
Ref: 1ac146601
Ref: bbdb-migrate el function bbdb-migrate146632
Ref: 1ad146632
Ref: bbdb-migrate el function bbdb-migrate-record-lambda146788
Ref: 1ab146788
Ref: bbdb-migrate el function bbdb-migrate-versions-lambda147261
Ref: 1ae147261
Ref: bbdb-migrate el function bbdb-migrate-postcodes-to-strings147505
Ref: 1af147505
Ref: bbdb-migrate el function bbdb-migrate-change-dates147679
Ref: 1b0147679
Ref: bbdb-migrate el function bbdb-migrate-change-dates-change-field147857
Ref: 1b1147857
Ref: bbdb-migrate el function bbdb-migrate-add-country-field148005
Ref: 1b2148005
Ref: bbdb-migrate el function bbdb-migrate-streets-to-list148121
Ref: 1b3148121
Ref: bbdb-migrate el function bbdb-migrate-xfields-to-list148209
Ref: 1b4148209
Ref: bbdb-migrate el function bbdb-migrate-organization-to-list148293
Ref: 1b5148293
Ref: bbdb-migrate el function bbdb-undocumented-variables148392
Ref: 1b6148392
Node: Lisp library bbdb-mu4e148956
Ref: bbdb-mu4e lisp-library-bbdb-mu4e149081
Ref: 1b7149081
Ref: bbdb-mu4e doc149081
Ref: 1b8149081
Node: Functions<9>149176
Ref: bbdb-mu4e functions149246
Ref: 1b9149246
Ref: bbdb-mu4e el function bbdb-insinuate-mu4e149277
Ref: 1ba149277
Node: Lisp library bbdb-mua149419
Ref: bbdb-mua lisp-library-bbdb-mua149540
Ref: 1bb149540
Ref: bbdb-mua doc149540
Ref: 1bc149540
Node: Constants<2>149662
Ref: bbdb-mua constants149753
Ref: 1bd149753
Ref: bbdb-mua el variable bbdb-mua-mode-alist149784
Ref: 1be149784
Node: Functions<10>149947
Ref: bbdb-mua functions150038
Ref: 1bf150038
Ref: bbdb-mua el function bbdb-accept-message150069
Ref: 1c0150069
Ref: bbdb-mua el function bbdb-annotate-message150454
Ref: 1c1150454
Ref: bbdb-mua el function bbdb-mua-annotate-field-interactive151113
Ref: 1c2151113
Ref: bbdb-mua el function bbdb-annotate-record151257
Ref: c5151257
Ref: bbdb-mua el function bbdb-mua-annotate-recipients151602
Ref: 1c4151602
Ref: bbdb-mua el function bbdb-mua-annotate-sender152078
Ref: 1c3152078
Ref: bbdb-mua el function bbdb-mua-edit-field152551
Ref: 105152551
Ref: bbdb-mua el function bbdb-mua-edit-field-interactive153087
Ref: 1c5153087
Ref: bbdb-mua el function bbdb-mua-edit-field-recipients153230
Ref: 1c6153230
Ref: bbdb-mua el function bbdb-mua-edit-field-sender153613
Ref: 1c7153613
Ref: bbdb-mua el function bbdb-get-address-components153989
Ref: 1c8153989
Ref: bbdb-mua el function bbdb-ignore-message154531
Ref: 1c9154531
Ref: bbdb-mua el function bbdb-message-header154916
Ref: 1ca154916
Ref: bbdb-mua el function bbdb-mua155094
Ref: ca155094
Ref: bbdb-mua el function bbdb-mua-auto-update155508
Ref: 102155508
Ref: bbdb-mua el function bbdb-auto-notes156838
Ref: c7156838
Ref: bbdb-mua el function bbdb-mua-auto-update-init157198
Ref: 80157198
Ref: bbdb-mua el function bbdb-mua-window-p158253
Ref: 1cc158253
Ref: bbdb-mua el function bbdb-mua-display-all-recipients158432
Ref: 1cd158432
Ref: bbdb-mua el function bbdb-mua-display-all-records158723
Ref: 1ce158723
Ref: bbdb-mua el function bbdb-mua-display-records159016
Ref: 1cb159016
Ref: bbdb-mua el function bbdb-mua-display-recipients159864
Ref: 1cf159864
Ref: bbdb-mua el function bbdb-mua-display-sender160157
Ref: 1d0160157
Ref: bbdb-mua el function bbdb-mua-summary-unify160903
Ref: 108160903
Ref: bbdb-mua el function bbdb-mua-update-records161797
Ref: 1d1161797
Ref: bbdb-mua el function bbdb-mua-wrapper162229
Ref: 1d2162229
Ref: bbdb-mua el function bbdb-query-create162309
Ref: 115162309
Ref: bbdb-mua el function bbdb-select-message162531
Ref: 103162531
Ref: bbdb-mua el function bbdb-update-records162864
Ref: fe162864
Node: Lisp library bbdb-pgp164069
Ref: bbdb-pgp lisp-library-bbdb-pgp164191
Ref: 1d3164191
Ref: bbdb-pgp doc164191
Ref: 1d4164191
Node: Functions<11>164313
Ref: bbdb-pgp functions164404
Ref: 1d5164404
Ref: bbdb-pgp el function bbdb-pgp164435
Ref: 7f164435
Ref: bbdb-pgp el function bbdb-read-xfield-pgp-mail165653
Ref: 1db165653
Node: Variables<5>165816
Ref: bbdb-pgp variables165907
Ref: 1dc165907
Ref: bbdb-pgp el variable bbdb-pgp-default165938
Ref: 1d9165938
Ref: bbdb-pgp el variable bbdb-pgp-field166381
Ref: 1d7166381
Ref: bbdb-pgp el variable bbdb-pgp-ranked-actions167009
Ref: 1d8167009
Ref: bbdb-pgp el variable bbdb-pgp-headers167601
Ref: 1d6167601
Ref: bbdb-pgp el variable bbdb-pgp-method167668
Ref: 1da167668
Ref: bbdb-pgp el variable bbdb-pgp-method-alist168085
Ref: 1dd168085
Node: Lisp library bbdb-print168675
Ref: bbdb-print lisp-library-bbdb-print168799
Ref: 1de168799
Ref: bbdb-print doc168799
Ref: 1df168799
Node: Functions<12>168925
Ref: bbdb-print functions169018
Ref: 1e0169018
Ref: bbdb-print el function bbdb-print169049
Ref: 1e1169049
Ref: bbdb-print el function bbdb-print-record169538
Ref: 1e4169538
Ref: bbdb-print el function bbdb-print-phone170147
Ref: 1e5170147
Ref: bbdb-print el function bbdb-print-tex-quote170338
Ref: 1e6170338
Node: Variables<6>170540
Ref: bbdb-print variables170633
Ref: 1e8170633
Ref: bbdb-print el variable bbdb-print-alist170664
Ref: 1e2170664
Ref: bbdb-print el variable bbdb-print-full-alist172780
Ref: 1ea172780
Ref: bbdb-print el variable bbdb-print-brief-alist173019
Ref: 1e9173019
Ref: bbdb-print el variable bbdb-print-file173255
Ref: 1eb173255
Ref: bbdb-print el variable bbdb-print-omit-fields173343
Ref: 1ec173343
Ref: bbdb-print el variable bbdb-print-prolog173484
Ref: 1ed173484
Ref: bbdb-print el variable bbdb-print-epilog173609
Ref: 1ee173609
Ref: bbdb-print el variable bbdb-print-mail173728
Ref: 1ef173728
Ref: bbdb-print el variable bbdb-print-tex-quote-alist173951
Ref: 1e7173951
Ref: bbdb-print el variable bbdb-print-address-format-list174111
Ref: 4d174111
Ref: bbdb-print el variable bbdb-print-name-format174383
Ref: 1f0174383
Ref: bbdb-print el variable bbdb-print-name174751
Ref: 1f1174751
Ref: bbdb-print el variable bbdb-print-require175243
Ref: 1e3175243
Node: Lisp library bbdb-rmail176223
Ref: bbdb-rmail doc176346
Ref: 1f2176346
Ref: bbdb-rmail lisp-library-bbdb-rmail176346
Ref: 1f3176346
Node: Functions<13>176444
Ref: bbdb-rmail functions176516
Ref: 1f4176516
Ref: bbdb-rmail el function bbdb/rmail-new-flag176547
Ref: 1f5176547
Ref: bbdb-rmail el function bbdb/rmail-header176644
Ref: 1f6176644
Ref: bbdb-rmail el function bbdb-insinuate-rmail176724
Ref: 1f7176724
Node: Lisp library bbdb-sc176868
Ref: bbdb-sc lisp-library-bbdb-sc176990
Ref: 1f8176990
Ref: bbdb-sc doc176990
Ref: 1f9176990
Node: Functions<14>177110
Ref: bbdb-sc functions177200
Ref: 1fa177200
Ref: bbdb-sc el function bbdb-sc-update-from177231
Ref: 1fb177231
Ref: bbdb-sc el function bbdb-insinuate-sc177498
Ref: 1fc177498
Ref: bbdb-sc el function bbdb-sc-get-attrib177749
Ref: 1fd177749
Ref: bbdb-sc el function bbdb-sc-set-attrib177887
Ref: 1fe177887
Node: Variables<7>177955
Ref: bbdb-sc variables178045
Ref: 1ff178045
Ref: bbdb-sc el variable bbdb-sc-attribution-field178076
Ref: 200178076
Ref: bbdb-sc el variable bbdb-sc-update-records-p178172
Ref: 201178172
Ref: bbdb-sc el variable bbdb-sc-update-attrib-p178387
Ref: 202178387
Ref: bbdb-sc el variable bbdb-sc-last-attrib179045
Ref: 203179045
Node: Lisp library bbdb-site179183
Ref: bbdb-site lisp-library-bbdb-site179305
Ref: 204179305
Ref: bbdb-site doc179305
Ref: 205179305
Node: Constants<3>179400
Ref: bbdb-site constants179470
Ref: 206179470
Ref: bbdb-site el variable bbdb-version179501
Ref: 207179501
Ref: bbdb-site el variable bbdb-version-date179553
Ref: 208179553
Node: Lisp library bbdb-snarf179615
Ref: bbdb-snarf doc179737
Ref: 209179737
Ref: bbdb-snarf lisp-library-bbdb-snarf179737
Ref: 20a179737
Node: Functions<15>179863
Ref: bbdb-snarf functions179956
Ref: 20b179956
Ref: bbdb-snarf el function bbdb-snarf-surrounding-space179987
Ref: 20c179987
Ref: bbdb-snarf el function bbdb-snarf-empty-lines180104
Ref: 20d180104
Ref: bbdb-snarf el function bbdb-snarf-name180198
Ref: 20e180198
Ref: bbdb-snarf el function bbdb-snarf-name-mail180266
Ref: 20f180266
Ref: bbdb-snarf el function bbdb-snarf-mail180357
Ref: 210180357
Ref: bbdb-snarf el function bbdb-snarf-label180517
Ref: 212180517
Ref: bbdb-snarf el function bbdb-snarf-phone-nanp180629
Ref: 213180629
Ref: bbdb-snarf el function bbdb-snarf-phone-eu180887
Ref: 215180887
Ref: bbdb-snarf el function bbdb-snarf-streets181122
Ref: 217181122
Ref: bbdb-snarf el function bbdb-snarf-address-us181231
Ref: 218181231
Ref: bbdb-snarf el function bbdb-snarf-address-eu181313
Ref: 219181313
Ref: bbdb-snarf el function bbdb-snarf-url182349
Ref: 21c182349
Ref: bbdb-snarf el function bbdb-snarf-notes182496
Ref: 21e182496
Ref: bbdb-snarf el function bbdb-snarf-paragraph182566
Ref: 21f182566
Ref: bbdb-snarf el function bbdb-snarf-yank182932
Ref: 222182932
Ref: bbdb-snarf el function bbdb-snarf183246
Ref: 223183246
Node: Variables<8>183552
Ref: bbdb-snarf variables183645
Ref: 224183645
Ref: bbdb-snarf el variable bbdb-snarf-rule-alist183676
Ref: 221183676
Ref: bbdb-snarf el variable bbdb-snarf-rule-default184598
Ref: 220184598
Ref: bbdb-snarf el variable bbdb-snarf-mail-regexp184671
Ref: 211184671
Ref: bbdb-snarf el variable bbdb-snarf-name-regexp184821
Ref: 225184821
Ref: bbdb-snarf el variable bbdb-snarf-default-label-alist184955
Ref: 226184955
Ref: bbdb-snarf el variable bbdb-snarf-phone-nanp-regexp185253
Ref: 214185253
Ref: bbdb-snarf el variable bbdb-snarf-phone-eu-regexp185496
Ref: 216185496
Ref: bbdb-snarf el variable bbdb-snarf-postcode-eu-regexp185641
Ref: 21a185641
Ref: bbdb-snarf el variable bbdb-snarf-address-us-country185878
Ref: 227185878
Ref: bbdb-snarf el variable bbdb-snarf-address-eu-country185992
Ref: 21b185992
Ref: bbdb-snarf el variable bbdb-snarf-url186106
Ref: 228186106
Ref: bbdb-snarf el variable bbdb-snarf-url-regexp186207
Ref: 21d186207
Node: Lisp library bbdb-vm190948
Ref: bbdb-vm lisp-library-bbdb-vm191068
Ref: 229191068
Ref: bbdb-vm doc191068
Ref: 22a191068
Node: Functions<16>191188
Ref: bbdb-vm functions191278
Ref: 22b191278
Ref: bbdb-vm el function vm-summary-function-B191309
Ref: 22c191309
Ref: bbdb-vm el function bbdb/vm-auto-folder191463
Ref: 22d191463
Ref: bbdb-vm el function bbdb/vm-virtual-folder192160
Ref: 230192160
Ref: bbdb-vm el function bbdb/vm-auto-add-label193047
Ref: 233193047
Ref: bbdb-vm el function bbdb-insinuate-vm194085
Ref: 236194085
Node: Variables<9>194223
Ref: bbdb-vm variables194313
Ref: 237194313
Ref: bbdb-vm el variable bbdb/vm-auto-folder-headers194344
Ref: 22e194344
Ref: bbdb-vm el variable bbdb/vm-auto-folder-field194525
Ref: 22f194525
Ref: bbdb-vm el variable bbdb/vm-virtual-folder-field194642
Ref: 232194642
Ref: bbdb-vm el variable bbdb/vm-virtual-real-folders194765
Ref: 231194765
Ref: bbdb-vm el variable bbdb/vm-auto-add-label-list194906
Ref: 235194906
Ref: bbdb-vm el variable bbdb/vm-auto-add-label-field195298
Ref: 234195298
Node: Lisp library bbdb-wl195694
Ref: bbdb-wl lisp-library-bbdb-wl195809
Ref: 238195809
Ref: bbdb-wl doc195809
Ref: 239195809
Node: Functions<17>195901
Ref: bbdb-wl functions195970
Ref: 23a195970
Ref: bbdb-wl el function bbdb-insinuate-wl196001
Ref: 23b196001
Node: Indices and tables196068
Ref: index indices-and-tables196168
Ref: 23c196168
Node: Index196235

End Tag Table


Local Variables:
coding: utf-8
End:
